<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WindowsBase">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="PresentationFramework">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Windows.ThemeInfoAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="ExternalAssembly" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel">
      <topicdata group="api" />
      <apidata name="System.ComponentModel" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.DesignerProperties" />
        <element api="T:System.ComponentModel.AddingNewEventArgs" />
        <element api="T:System.ComponentModel.AddingNewEventHandler" />
        <element api="T:System.ComponentModel.AmbientValueAttribute" />
        <element api="T:System.ComponentModel.ArrayConverter" />
        <element api="T:System.ComponentModel.AsyncCompletedEventArgs" />
        <element api="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <element api="T:System.ComponentModel.AsyncOperation" />
        <element api="T:System.ComponentModel.AsyncOperationManager" />
        <element api="T:System.ComponentModel.AttributeCollection" />
        <element api="T:System.ComponentModel.AttributeProviderAttribute" />
        <element api="T:System.ComponentModel.BackgroundWorker" />
        <element api="T:System.ComponentModel.ComponentEditor" />
        <element api="T:System.ComponentModel.BaseNumberConverter" />
        <element api="T:System.ComponentModel.BindableAttribute" />
        <element api="T:System.ComponentModel.BindableSupport" />
        <element api="T:System.ComponentModel.BindingDirection" />
        <element api="T:System.ComponentModel.BindingList`1" />
        <element api="T:System.ComponentModel.BooleanConverter" />
        <element api="T:System.ComponentModel.BrowsableAttribute" />
        <element api="T:System.ComponentModel.ByteConverter" />
        <element api="T:System.ComponentModel.CancelEventArgs" />
        <element api="T:System.ComponentModel.CancelEventHandler" />
        <element api="T:System.ComponentModel.CategoryAttribute" />
        <element api="T:System.ComponentModel.CharConverter" />
        <element api="T:System.ComponentModel.CollectionChangeAction" />
        <element api="T:System.ComponentModel.CollectionChangeEventArgs" />
        <element api="T:System.ComponentModel.CollectionChangeEventHandler" />
        <element api="T:System.ComponentModel.CollectionConverter" />
        <element api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
        <element api="T:System.ComponentModel.Component" />
        <element api="T:System.ComponentModel.ComponentCollection" />
        <element api="T:System.ComponentModel.ComponentConverter" />
        <element api="T:System.ComponentModel.ComponentResourceManager" />
        <element api="T:System.ComponentModel.Container" />
        <element api="T:System.ComponentModel.ContainerFilterService" />
        <element api="T:System.ComponentModel.CultureInfoConverter" />
        <element api="T:System.ComponentModel.CustomTypeDescriptor" />
        <element api="T:System.ComponentModel.DataErrorsChangedEventArgs" />
        <element api="T:System.ComponentModel.DataObjectAttribute" />
        <element api="T:System.ComponentModel.DataObjectFieldAttribute" />
        <element api="T:System.ComponentModel.DataObjectMethodAttribute" />
        <element api="T:System.ComponentModel.DataObjectMethodType" />
        <element api="T:System.ComponentModel.DateTimeConverter" />
        <element api="T:System.ComponentModel.DateTimeOffsetConverter" />
        <element api="T:System.ComponentModel.DecimalConverter" />
        <element api="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
        <element api="T:System.ComponentModel.DefaultEventAttribute" />
        <element api="T:System.ComponentModel.DefaultPropertyAttribute" />
        <element api="T:System.ComponentModel.DefaultValueAttribute" />
        <element api="T:System.ComponentModel.DescriptionAttribute" />
        <element api="T:System.ComponentModel.DesignerAttribute" />
        <element api="T:System.ComponentModel.DesignerCategoryAttribute" />
        <element api="T:System.ComponentModel.DesignerSerializationVisibility" />
        <element api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <element api="T:System.ComponentModel.DesignOnlyAttribute" />
        <element api="T:System.ComponentModel.DesignTimeVisibleAttribute" />
        <element api="T:System.ComponentModel.DisplayNameAttribute" />
        <element api="T:System.ComponentModel.DoubleConverter" />
        <element api="T:System.ComponentModel.DoWorkEventArgs" />
        <element api="T:System.ComponentModel.DoWorkEventHandler" />
        <element api="T:System.ComponentModel.EditorAttribute" />
        <element api="T:System.ComponentModel.EditorBrowsableAttribute" />
        <element api="T:System.ComponentModel.EditorBrowsableState" />
        <element api="T:System.ComponentModel.EnumConverter" />
        <element api="T:System.ComponentModel.EventDescriptor" />
        <element api="T:System.ComponentModel.EventDescriptorCollection" />
        <element api="T:System.ComponentModel.EventHandlerList" />
        <element api="T:System.ComponentModel.ExpandableObjectConverter" />
        <element api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />
        <element api="T:System.ComponentModel.GuidConverter" />
        <element api="T:System.ComponentModel.HandledEventArgs" />
        <element api="T:System.ComponentModel.HandledEventHandler" />
        <element api="T:System.ComponentModel.IBindingList" />
        <element api="T:System.ComponentModel.IBindingListView" />
        <element api="T:System.ComponentModel.ICancelAddNew" />
        <element api="T:System.ComponentModel.IChangeTracking" />
        <element api="T:System.ComponentModel.IComNativeDescriptorHandler" />
        <element api="T:System.ComponentModel.IComponent" />
        <element api="T:System.ComponentModel.IContainer" />
        <element api="T:System.ComponentModel.ICustomTypeDescriptor" />
        <element api="T:System.ComponentModel.IDataErrorInfo" />
        <element api="T:System.ComponentModel.IEditableObject" />
        <element api="T:System.ComponentModel.IExtenderProvider" />
        <element api="T:System.ComponentModel.IIntellisenseBuilder" />
        <element api="T:System.ComponentModel.IListSource" />
        <element api="T:System.ComponentModel.ImmutableObjectAttribute" />
        <element api="T:System.ComponentModel.INestedContainer" />
        <element api="T:System.ComponentModel.INestedSite" />
        <element api="T:System.ComponentModel.InitializationEventAttribute" />
        <element api="T:System.ComponentModel.INotifyDataErrorInfo" />
        <element api="T:System.ComponentModel.INotifyPropertyChanged" />
        <element api="T:System.ComponentModel.INotifyPropertyChanging" />
        <element api="T:System.ComponentModel.InstallerTypeAttribute" />
        <element api="T:System.ComponentModel.InstanceCreationEditor" />
        <element api="T:System.ComponentModel.Int16Converter" />
        <element api="T:System.ComponentModel.Int32Converter" />
        <element api="T:System.ComponentModel.Int64Converter" />
        <element api="T:System.ComponentModel.InvalidAsynchronousStateException" />
        <element api="T:System.ComponentModel.InvalidEnumArgumentException" />
        <element api="T:System.ComponentModel.IRaiseItemChangedEvents" />
        <element api="T:System.ComponentModel.IRevertibleChangeTracking" />
        <element api="T:System.ComponentModel.ISite" />
        <element api="T:System.ComponentModel.ISupportInitialize" />
        <element api="T:System.ComponentModel.ISupportInitializeNotification" />
        <element api="T:System.ComponentModel.ISynchronizeInvoke" />
        <element api="T:System.ComponentModel.ITypeDescriptorContext" />
        <element api="T:System.ComponentModel.ITypedList" />
        <element api="T:System.ComponentModel.License" />
        <element api="T:System.ComponentModel.LicenseContext" />
        <element api="T:System.ComponentModel.LicenseException" />
        <element api="T:System.ComponentModel.LicenseManager" />
        <element api="T:System.ComponentModel.LicenseProvider" />
        <element api="T:System.ComponentModel.LicenseProviderAttribute" />
        <element api="T:System.ComponentModel.LicenseUsageMode" />
        <element api="T:System.ComponentModel.LicFileLicenseProvider" />
        <element api="T:System.ComponentModel.ListBindableAttribute" />
        <element api="T:System.ComponentModel.ListChangedEventArgs" />
        <element api="T:System.ComponentModel.ListChangedEventHandler" />
        <element api="T:System.ComponentModel.ListChangedType" />
        <element api="T:System.ComponentModel.ListSortDescription" />
        <element api="T:System.ComponentModel.ListSortDescriptionCollection" />
        <element api="T:System.ComponentModel.ListSortDirection" />
        <element api="T:System.ComponentModel.LocalizableAttribute" />
        <element api="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
        <element api="T:System.ComponentModel.MarshalByValueComponent" />
        <element api="T:System.ComponentModel.MaskedTextProvider" />
        <element api="T:System.ComponentModel.MaskedTextResultHint" />
        <element api="T:System.ComponentModel.MemberDescriptor" />
        <element api="T:System.ComponentModel.MergablePropertyAttribute" />
        <element api="T:System.ComponentModel.MultilineStringConverter" />
        <element api="T:System.ComponentModel.NestedContainer" />
        <element api="T:System.ComponentModel.NullableConverter" />
        <element api="T:System.ComponentModel.PasswordPropertyTextAttribute" />
        <element api="T:System.ComponentModel.ProgressChangedEventArgs" />
        <element api="T:System.ComponentModel.ProgressChangedEventHandler" />
        <element api="T:System.ComponentModel.PropertyChangedEventArgs" />
        <element api="T:System.ComponentModel.PropertyChangedEventHandler" />
        <element api="T:System.ComponentModel.PropertyChangingEventArgs" />
        <element api="T:System.ComponentModel.PropertyChangingEventHandler" />
        <element api="T:System.ComponentModel.PropertyDescriptor" />
        <element api="T:System.ComponentModel.PropertyDescriptorCollection" />
        <element api="T:System.ComponentModel.ProvidePropertyAttribute" />
        <element api="T:System.ComponentModel.ReadOnlyAttribute" />
        <element api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
        <element api="T:System.ComponentModel.ReferenceConverter" />
        <element api="T:System.ComponentModel.RefreshEventArgs" />
        <element api="T:System.ComponentModel.RefreshEventHandler" />
        <element api="T:System.ComponentModel.RunInstallerAttribute" />
        <element api="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
        <element api="T:System.ComponentModel.RunWorkerCompletedEventHandler" />
        <element api="T:System.ComponentModel.SByteConverter" />
        <element api="T:System.ComponentModel.SettingsBindableAttribute" />
        <element api="T:System.ComponentModel.SingleConverter" />
        <element api="T:System.ComponentModel.StringConverter" />
        <element api="T:System.ComponentModel.SyntaxCheck" />
        <element api="T:System.ComponentModel.TimeSpanConverter" />
        <element api="T:System.ComponentModel.ToolboxItemFilterAttribute" />
        <element api="T:System.ComponentModel.ToolboxItemFilterType" />
        <element api="T:System.ComponentModel.TypeConverter" />
        <element api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <element api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
        <element api="T:System.ComponentModel.TypeConverterAttribute" />
        <element api="T:System.ComponentModel.TypeDescriptionProvider" />
        <element api="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
        <element api="T:System.ComponentModel.TypeDescriptor" />
        <element api="T:System.ComponentModel.TypeListConverter" />
        <element api="T:System.ComponentModel.UInt16Converter" />
        <element api="T:System.ComponentModel.UInt32Converter" />
        <element api="T:System.ComponentModel.UInt64Converter" />
        <element api="T:System.ComponentModel.WarningException" />
        <element api="T:System.ComponentModel.Win32Exception" />
        <element api="T:System.ComponentModel.InheritanceAttribute" />
        <element api="T:System.ComponentModel.InheritanceLevel" />
        <element api="T:System.ComponentModel.NotifyParentPropertyAttribute" />
        <element api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
        <element api="T:System.ComponentModel.PropertyTabAttribute" />
        <element api="T:System.ComponentModel.PropertyTabScope" />
        <element api="T:System.ComponentModel.RefreshProperties" />
        <element api="T:System.ComponentModel.RefreshPropertiesAttribute" />
        <element api="T:System.ComponentModel.ToolboxItemAttribute" />
        <element api="T:System.ComponentModel.CurrentChangedEventManager" />
        <element api="T:System.ComponentModel.CurrentChangingEventArgs" />
        <element api="T:System.ComponentModel.CurrentChangingEventHandler" />
        <element api="T:System.ComponentModel.CurrentChangingEventManager" />
        <element api="T:System.ComponentModel.DependencyPropertyDescriptor" />
        <element api="T:System.ComponentModel.ErrorsChangedEventManager" />
        <element api="T:System.ComponentModel.ICollectionView" />
        <element api="T:System.ComponentModel.ICollectionViewFactory" />
        <element api="T:System.ComponentModel.ICollectionViewLiveShaping" />
        <element api="T:System.ComponentModel.NewItemPlaceholderPosition" />
        <element api="T:System.ComponentModel.IEditableCollectionView" />
        <element api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
        <element api="T:System.ComponentModel.IItemProperties" />
        <element api="T:System.ComponentModel.ItemPropertyInfo" />
        <element api="T:System.ComponentModel.GroupDescription" />
        <element api="T:System.ComponentModel.PropertyChangedEventManager" />
        <element api="T:System.ComponentModel.PropertyFilterOptions" />
        <element api="T:System.ComponentModel.PropertyFilterAttribute" />
        <element api="T:System.ComponentModel.SortDescription" />
        <element api="T:System.ComponentModel.SortDescriptionCollection" />
      </elements>
    </api>
    <api id="T:System.ComponentModel.AddingNewEventArgs">
      <topicdata group="api" />
      <apidata name="AddingNewEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.AddingNewEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.AddingNewEventArgs.#ctor">
          <element api="M:System.ComponentModel.AddingNewEventArgs.#ctor" />
          <element api="M:System.ComponentModel.AddingNewEventArgs.#ctor(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AddingNewEventArgs">
      <topicdata name="AddingNewEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AddingNewEventArgs" />
      <apidata name="AddingNewEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.AddingNewEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AddingNewEventArgs">
      <topicdata name="AddingNewEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AddingNewEventArgs" />
      <apidata name="AddingNewEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.AddingNewEventArgs.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AddingNewEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.AddingNewEventArgs.#ctor" />
        <element api="M:System.ComponentModel.AddingNewEventArgs.#ctor(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AddingNewEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AddingNewEventArgs.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AddingNewEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AddingNewEventArgs.#ctor" />
      <parameters>
        <parameter name="newObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AddingNewEventArgs.NewObject">
      <topicdata group="api" />
      <apidata name="NewObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NewObject" />
      <setter name="set_NewObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.AddingNewEventHandler">
      <topicdata group="api" />
      <apidata name="AddingNewEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.AmbientValueAttribute">
      <topicdata group="api" />
      <apidata name="AmbientValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.AmbientValueAttribute.#ctor">
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Byte)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Char)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Double)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int16)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int32)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int64)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Object)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Single)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.AmbientValueAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.AmbientValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AmbientValueAttribute">
      <topicdata name="AmbientValueAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AmbientValueAttribute" />
      <apidata name="AmbientValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AmbientValueAttribute">
      <topicdata name="AmbientValueAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AmbientValueAttribute" />
      <apidata name="AmbientValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.AmbientValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AmbientValueAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Byte)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Char)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Double)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int16)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int32)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int64)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Object)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Single)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Byte)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Char)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int16)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Single)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AmbientValueAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AmbientValueAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AmbientValueAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AmbientValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ArrayConverter">
      <topicdata group="api" />
      <apidata name="ArrayConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ArrayConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ArrayConverter.#ctor" />
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ArrayConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ArrayConverter">
      <topicdata name="ArrayConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ArrayConverter" />
      <apidata name="ArrayConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ArrayConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ArrayConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ArrayConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ArrayConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ArrayConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ArrayConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ArrayConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ArrayConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ArrayConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ArrayConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.AsyncCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="AsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Documents.GetPageCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Documents.GetPageNumberCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Documents.GetPageRootCompletedEventArgs" ref="true" />
          <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs" ref="true" />
          <type api="T:System.Net.OpenReadCompletedEventArgs" ref="true" />
          <type api="T:System.Net.OpenWriteCompletedEventArgs" ref="true" />
          <type api="T:System.Net.DownloadStringCompletedEventArgs" ref="true" />
          <type api="T:System.Net.DownloadDataCompletedEventArgs" ref="true" />
          <type api="T:System.Net.UploadStringCompletedEventArgs" ref="true" />
          <type api="T:System.Net.UploadDataCompletedEventArgs" ref="true" />
          <type api="T:System.Net.UploadFileCompletedEventArgs" ref="true" />
          <type api="T:System.Net.UploadValuesCompletedEventArgs" ref="true" />
          <type api="T:System.Net.NetworkInformation.PingCompletedEventArgs" ref="true" />
          <type api="T:System.Activities.InvokeCompletedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.CheckForUpdateCompletedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.DownloadFileGroupCompletedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.GetManifestCompletedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.DownloadApplicationCompletedEventArgs" ref="true" />
          <type api="T:System.Device.Location.ResolveAddressCompletedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" ref="true" />
          <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" ref="true">
            <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
          </type>
          <type api="T:System.ServiceModel.Discovery.FindCompletedEventArgs" ref="true" />
          <type api="T:System.ServiceModel.Discovery.ResolveCompletedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
          <type api="T:System.Web.Services.Protocols.InvokeCompletedEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AsyncCompletedEventArgs">
      <topicdata name="AsyncCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AsyncCompletedEventArgs" />
      <apidata name="AsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AsyncCompletedEventArgs">
      <topicdata name="AsyncCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AsyncCompletedEventArgs" />
      <apidata name="AsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="cancelled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <topicdata group="api" />
      <apidata name="Cancelled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cancelled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <topicdata group="api" />
      <apidata name="RaiseExceptionIfNecessary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <topicdata group="api" />
      <apidata name="UserState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.AsyncCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="AsyncCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.AsyncOperation">
      <topicdata group="api" />
      <apidata name="AsyncOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncOperation.Finalize" />
        <element api="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
        <element api="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
        <element api="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AsyncOperation">
      <topicdata name="AsyncOperation" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AsyncOperation" />
      <apidata name="AsyncOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncOperation.Finalize" />
        <element api="M:System.ComponentModel.AsyncOperation.OperationCompleted" />
        <element api="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AsyncOperation">
      <topicdata name="AsyncOperation" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AsyncOperation" />
      <apidata name="AsyncOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncOperation.SynchronizationContext" />
        <element api="P:System.ComponentModel.AsyncOperation.UserSuppliedState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncOperation.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <topicdata group="api" />
      <apidata name="OperationCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="PostOperationCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <topicdata group="api" />
      <apidata name="SynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SynchronizationContext" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <topicdata group="api" />
      <apidata name="UserSuppliedState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserSuppliedState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.AsyncOperationManager">
      <topicdata group="api" />
      <apidata name="AsyncOperationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
        <element api="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AsyncOperationManager">
      <topicdata name="AsyncOperationManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AsyncOperationManager" />
      <apidata name="AsyncOperationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperationManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AsyncOperationManager">
      <topicdata name="AsyncOperationManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AsyncOperationManager" />
      <apidata name="AsyncOperationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperationManager" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <topicdata group="api" />
      <apidata name="CreateOperation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userSuppliedState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AsyncOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <topicdata group="api" />
      <apidata name="SynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizationContext" />
      <setter name="set_SynchronizationContext" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AsyncOperationManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.AttributeCollection">
      <topicdata group="api" />
      <apidata name="AttributeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="F:System.ComponentModel.AttributeCollection.Empty" />
        <element api="Overload:System.ComponentModel.AttributeCollection.#ctor">
          <element api="M:System.ComponentModel.AttributeCollection.#ctor" />
          <element api="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.AttributeCollection.Contains">
          <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
          <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
        <element api="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
        <element api="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
        <element api="Overload:System.ComponentModel.AttributeCollection.Matches">
          <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
          <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AttributeCollection.Attributes" />
        <element api="P:System.ComponentModel.AttributeCollection.Count" />
        <element api="Overload:System.ComponentModel.AttributeCollection.Item">
          <element api="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
        </element>
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AttributeCollection">
      <topicdata name="AttributeCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AttributeCollection" />
      <apidata name="AttributeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.AttributeCollection.Contains">
          <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
          <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
        <element api="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
        <element api="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
        <element api="Overload:System.ComponentModel.AttributeCollection.Matches">
          <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
          <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AttributeCollection">
      <topicdata name="AttributeCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AttributeCollection" />
      <apidata name="AttributeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AttributeCollection.Attributes" />
        <element api="P:System.ComponentModel.AttributeCollection.Count" />
        <element api="Overload:System.ComponentModel.AttributeCollection.Item">
          <element api="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
        </element>
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.AttributeCollection">
      <topicdata name="AttributeCollection" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.AttributeCollection" />
      <apidata name="AttributeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.AttributeCollection.Empty" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AttributeCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.AttributeCollection.#ctor" />
        <element api="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AttributeCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
        <element api="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AttributeCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AttributeCollection.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
        <element api="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.AttributeCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AttributeCollection.#ctor" />
      <parameters>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Attribute" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.AttributeCollection.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="FromExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="existing">
          <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
        </parameter>
        <parameter name="newAttributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
      <topicdata group="api" />
      <apidata name="GetDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.AttributeCollection.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.AttributeProviderAttribute">
      <topicdata group="api" />
      <apidata name="AttributeProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.AttributeProviderAttribute.#ctor">
          <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.AttributeProviderAttribute.PropertyName" />
        <element api="P:System.ComponentModel.AttributeProviderAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.AttributeProviderAttribute">
      <topicdata name="AttributeProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.AttributeProviderAttribute" />
      <apidata name="AttributeProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.AttributeProviderAttribute">
      <topicdata name="AttributeProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.AttributeProviderAttribute" />
      <apidata name="AttributeProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.AttributeProviderAttribute.PropertyName" />
        <element api="P:System.ComponentModel.AttributeProviderAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.AttributeProviderAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AttributeProviderAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AttributeProviderAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.AttributeProviderAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeProviderAttribute.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.AttributeProviderAttribute.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.AttributeProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BackgroundWorker">
      <topicdata group="api" />
      <apidata name="BackgroundWorker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <element api="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <element api="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.BackgroundWorker.#ctor" />
        <element api="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
        <element api="Overload:System.ComponentModel.BackgroundWorker.ReportProgress">
          <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
          <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
          <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
          <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BackgroundWorker.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.BackgroundWorker.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
        <element api="P:System.ComponentModel.BackgroundWorker.IsBusy" />
        <element api="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
        <element api="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DoWork</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BackgroundWorker">
      <topicdata name="BackgroundWorker" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BackgroundWorker" />
      <apidata name="BackgroundWorker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
        <element api="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
        <element api="Overload:System.ComponentModel.BackgroundWorker.ReportProgress">
          <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
          <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
          <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
          <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BackgroundWorker.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.BackgroundWorker.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.BackgroundWorker">
      <topicdata name="BackgroundWorker" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.BackgroundWorker" />
      <apidata name="BackgroundWorker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
        <element api="P:System.ComponentModel.BackgroundWorker.IsBusy" />
        <element api="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
        <element api="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.BackgroundWorker">
      <topicdata name="BackgroundWorker" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.BackgroundWorker" />
      <apidata name="BackgroundWorker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <element api="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <element api="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BackgroundWorker.ReportProgress">
      <topicdata name="ReportProgress" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReportProgress" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <element api="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <topicdata name="RunWorkerAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RunWorkerAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <element api="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <topicdata group="api" />
      <apidata name="CancellationPending" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CancellationPending" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.ComponentModel.BackgroundWorker.DoWork">
      <topicdata group="api" />
      <apidata name="DoWork" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DoWork" />
      <remover name="remove_DoWork" />
      <eventhandler>
        <type api="T:System.ComponentModel.DoWorkEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <topicdata group="api" />
      <apidata name="IsBusy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBusy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDoWork" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRunWorkerCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <topicdata group="api" />
      <apidata name="ProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProgressChanged" />
      <remover name="remove_ProgressChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ProgressChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <topicdata group="api" />
      <apidata name="ReportProgress" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BackgroundWorker.ReportProgress" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="percentProgress">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ReportProgress" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BackgroundWorker.ReportProgress" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="percentProgress">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <topicdata group="api" />
      <apidata name="RunWorkerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="RunWorkerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <topicdata group="api" />
      <apidata name="RunWorkerCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RunWorkerCompleted" />
      <remover name="remove_RunWorkerCompleted" />
      <eventhandler>
        <type api="T:System.ComponentModel.RunWorkerCompletedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <topicdata group="api" />
      <apidata name="WorkerReportsProgress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkerReportsProgress" />
      <setter name="set_WorkerReportsProgress" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <topicdata group="api" />
      <apidata name="WorkerSupportsCancellation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkerSupportsCancellation" />
      <setter name="set_WorkerSupportsCancellation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.BaseNumberConverter">
      <topicdata group="api" />
      <apidata name="BaseNumberConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.ByteConverter" ref="true" />
          <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
          <type api="T:System.ComponentModel.DoubleConverter" ref="true" />
          <type api="T:System.ComponentModel.Int16Converter" ref="true" />
          <type api="T:System.ComponentModel.Int32Converter" ref="true" />
          <type api="T:System.ComponentModel.Int64Converter" ref="true" />
          <type api="T:System.ComponentModel.SByteConverter" ref="true" />
          <type api="T:System.ComponentModel.SingleConverter" ref="true" />
          <type api="T:System.ComponentModel.UInt16Converter" ref="true" />
          <type api="T:System.ComponentModel.UInt32Converter" ref="true" />
          <type api="T:System.ComponentModel.UInt64Converter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.BaseNumberConverter.#ctor" />
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BaseNumberConverter">
      <topicdata name="BaseNumberConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BaseNumberConverter" />
      <apidata name="BaseNumberConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BaseNumberConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BaseNumberConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BaseNumberConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BaseNumberConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BaseNumberConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BaseNumberConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BaseNumberConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BaseNumberConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="t">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BaseNumberConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BaseNumberConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BindableAttribute">
      <topicdata group="api" />
      <apidata name="BindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.BindableAttribute.Default" />
        <element api="F:System.ComponentModel.BindableAttribute.No" />
        <element api="F:System.ComponentModel.BindableAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.BindableAttribute.#ctor">
          <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)" />
          <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)" />
          <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)" />
        </element>
        <element api="M:System.ComponentModel.BindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.BindableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.BindableAttribute.Bindable" />
        <element api="P:System.ComponentModel.BindableAttribute.Direction" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BindableAttribute">
      <topicdata name="BindableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BindableAttribute" />
      <apidata name="BindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.BindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.BindableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.BindableAttribute">
      <topicdata name="BindableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.BindableAttribute" />
      <apidata name="BindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.BindableAttribute.Bindable" />
        <element api="P:System.ComponentModel.BindableAttribute.Direction" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.BindableAttribute">
      <topicdata name="BindableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.BindableAttribute" />
      <apidata name="BindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.BindableAttribute.Default" />
        <element api="F:System.ComponentModel.BindableAttribute.No" />
        <element api="F:System.ComponentModel.BindableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BindableAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)" />
        <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)" />
        <element api="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindableAttribute.#ctor" />
      <parameters>
        <parameter name="bindable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindableAttribute.#ctor" />
      <parameters>
        <parameter name="bindable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.BindingDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindableAttribute.#ctor" />
      <parameters>
        <parameter name="flags">
          <type api="T:System.ComponentModel.BindableSupport" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindableAttribute.#ctor" />
      <parameters>
        <parameter name="flags">
          <type api="T:System.ComponentModel.BindableSupport" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.BindingDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindableAttribute.Bindable">
      <topicdata group="api" />
      <apidata name="Bindable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindableAttribute.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Direction" />
      <returns>
        <type api="T:System.ComponentModel.BindingDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BindableSupport">
      <topicdata group="api" />
      <apidata name="BindableSupport" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.BindableSupport.No" />
        <element api="F:System.ComponentModel.BindableSupport.Yes" />
        <element api="F:System.ComponentModel.BindableSupport.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableSupport.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableSupport.No">
      <topicdata group="api" notopic="" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindableSupport.Yes">
      <topicdata group="api" notopic="" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindableSupport" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BindingDirection">
      <topicdata group="api" />
      <apidata name="BindingDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.BindingDirection.OneWay" />
        <element api="F:System.ComponentModel.BindingDirection.TwoWay" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindingDirection.OneWay">
      <topicdata group="api" notopic="" />
      <apidata name="OneWay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindingDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BindingDirection.TwoWay">
      <topicdata group="api" notopic="" />
      <apidata name="TwoWay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BindingDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BindingList`1">
      <topicdata group="api" />
      <apidata name="BindingList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.BindingList`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ICancelAddNew" ref="true" />
        <type api="T:System.ComponentModel.IRaiseItemChangedEvents" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.BindingList`1.AddingNew" />
        <element api="E:System.ComponentModel.BindingList`1.ListChanged" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.ComponentModel.BindingList`1.#ctor">
          <element api="M:System.ComponentModel.BindingList`1.#ctor" />
          <element api="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})" />
        </element>
        <element api="M:System.ComponentModel.BindingList`1.AddNew" />
        <element api="M:System.ComponentModel.BindingList`1.AddNewCore" />
        <element api="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.ClearItems" />
        <element api="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)" />
        <element api="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <element api="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.RemoveSortCore" />
        <element api="M:System.ComponentModel.BindingList`1.ResetBindings" />
        <element api="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.BindingList`1.AllowEdit" />
        <element api="P:System.ComponentModel.BindingList`1.AllowNew" />
        <element api="P:System.ComponentModel.BindingList`1.AllowRemove" />
        <element api="P:System.ComponentModel.BindingList`1.IsSortedCore" />
        <element api="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents" />
        <element api="P:System.ComponentModel.BindingList`1.SortDirectionCore" />
        <element api="P:System.ComponentModel.BindingList`1.SortPropertyCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsSearchingCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsSortingCore" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BindingList`1">
      <topicdata name="BindingList" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BindingList`1" />
      <apidata name="BindingList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.BindingList`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.BindingList`1.AddNew" />
        <element api="M:System.ComponentModel.BindingList`1.AddNewCore" />
        <element api="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.ClearItems" />
        <element api="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)" />
        <element api="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <element api="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.RemoveSortCore" />
        <element api="M:System.ComponentModel.BindingList`1.ResetBindings" />
        <element api="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)" />
        <element api="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.BindingList`1">
      <topicdata name="BindingList" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.BindingList`1" />
      <apidata name="BindingList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.BindingList`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.BindingList`1.AllowEdit" />
        <element api="P:System.ComponentModel.BindingList`1.AllowNew" />
        <element api="P:System.ComponentModel.BindingList`1.AllowRemove" />
        <element api="P:System.ComponentModel.BindingList`1.IsSortedCore" />
        <element api="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents" />
        <element api="P:System.ComponentModel.BindingList`1.SortDirectionCore" />
        <element api="P:System.ComponentModel.BindingList`1.SortPropertyCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsSearchingCore" />
        <element api="P:System.ComponentModel.BindingList`1.SupportsSortingCore" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.BindingList`1">
      <topicdata name="BindingList" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.BindingList`1" />
      <apidata name="BindingList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.BindingList`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="E:System.ComponentModel.BindingList`1.AddingNew" />
        <element api="E:System.ComponentModel.BindingList`1.ListChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BindingList`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.BindingList`1.#ctor" />
        <element api="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindingList`1.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.BindingList`1.#ctor" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.BindingList`1.AddingNew">
      <topicdata group="api" />
      <apidata name="AddingNew" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AddingNew" />
      <remover name="remove_AddingNew" />
      <eventhandler>
        <type api="T:System.ComponentModel.AddingNewEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.AddNewCore">
      <topicdata group="api" />
      <apidata name="AddNewCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.AllowEdit">
      <topicdata group="api" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowEdit" />
      <setter name="set_AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.AllowNew">
      <topicdata group="api" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowNew" />
      <setter name="set_AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.AllowRemove">
      <topicdata group="api" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowRemove" />
      <setter name="set_AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" />
      <apidata name="ApplySortCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)">
      <topicdata group="api" />
      <apidata name="CancelNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="itemIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)">
          <type api="T:System.ComponentModel.ICancelAddNew" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.ClearItems">
      <topicdata group="api" />
      <apidata name="ClearItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)">
      <topicdata group="api" />
      <apidata name="EndNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="itemIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)">
          <type api="T:System.ComponentModel.ICancelAddNew" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" />
      <apidata name="FindCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.IsSortedCore">
      <topicdata group="api" />
      <apidata name="IsSortedCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSortedCore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.BindingList`1.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IBindingList.ListChanged">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
      <topicdata group="api" />
      <apidata name="OnAddingNew" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.AddingNewEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents">
      <topicdata group="api" />
      <apidata name="RaiseListChangedEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RaiseListChangedEvents" />
      <setter name="set_RaiseListChangedEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.RemoveSortCore">
      <topicdata group="api" />
      <apidata name="RemoveSortCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.ResetBindings">
      <topicdata group="api" />
      <apidata name="ResetBindings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="ResetItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:System.ComponentModel.BindingList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.SortDirectionCore">
      <topicdata group="api" />
      <apidata name="SortDirectionCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortDirectionCore" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.SortPropertyCore">
      <topicdata group="api" />
      <apidata name="SortPropertyCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortPropertyCore" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore">
      <topicdata group="api" />
      <apidata name="SupportsChangeNotificationCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsChangeNotificationCore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.SupportsSearchingCore">
      <topicdata group="api" />
      <apidata name="SupportsSearchingCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsSearchingCore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.SupportsSortingCore">
      <topicdata group="api" />
      <apidata name="SupportsSortingCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsSortingCore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.AddIndex" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew">
      <topicdata group="api" eiiName="IBindingList.AddNew" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit">
      <topicdata group="api" eiiName="IBindingList.AllowEdit" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowEdit">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew">
      <topicdata group="api" eiiName="IBindingList.AllowNew" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove">
      <topicdata group="api" eiiName="IBindingList.AllowRemove" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowRemove">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" eiiName="IBindingList.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" eiiName="IBindingList.Find" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted">
      <topicdata group="api" eiiName="IBindingList.IsSorted" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.IsSorted">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.RemoveIndex" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort">
      <topicdata group="api" eiiName="IBindingList.RemoveSort" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveSort">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection">
      <topicdata group="api" eiiName="IBindingList.SortDirection" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortDirection">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty">
      <topicdata group="api" eiiName="IBindingList.SortProperty" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortProperty">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <topicdata group="api" eiiName="IBindingList.SupportsChangeNotification" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching">
      <topicdata group="api" eiiName="IBindingList.SupportsSearching" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSearching">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting">
      <topicdata group="api" eiiName="IBindingList.SupportsSorting" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSorting">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
      <topicdata group="api" eiiName="IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      <apidata name="RaisesItemChangedEvents" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents">
          <type api="T:System.ComponentModel.IRaiseItemChangedEvents" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BooleanConverter">
      <topicdata group="api" />
      <apidata name="BooleanConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BooleanConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.BooleanConverter.#ctor" />
        <element api="Overload:System.ComponentModel.BooleanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.BooleanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BooleanConverter">
      <topicdata name="BooleanConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BooleanConverter" />
      <apidata name="BooleanConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.BooleanConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.BooleanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.BooleanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.BooleanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BooleanConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BooleanConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BooleanConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BooleanConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BooleanConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BooleanConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.BrowsableAttribute">
      <topicdata group="api" />
      <apidata name="BrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.BrowsableAttribute.Default" />
        <element api="F:System.ComponentModel.BrowsableAttribute.No" />
        <element api="F:System.ComponentModel.BrowsableAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.BrowsableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.BrowsableAttribute.Browsable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.BrowsableAttribute">
      <topicdata name="BrowsableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.BrowsableAttribute" />
      <apidata name="BrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.BrowsableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.BrowsableAttribute">
      <topicdata name="BrowsableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.BrowsableAttribute" />
      <apidata name="BrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.BrowsableAttribute.Browsable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.BrowsableAttribute">
      <topicdata name="BrowsableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.BrowsableAttribute" />
      <apidata name="BrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.BrowsableAttribute.Default" />
        <element api="F:System.ComponentModel.BrowsableAttribute.No" />
        <element api="F:System.ComponentModel.BrowsableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="browsable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <topicdata group="api" />
      <apidata name="Browsable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Browsable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BrowsableAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BrowsableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.BrowsableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ByteConverter">
      <topicdata group="api" />
      <apidata name="ByteConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ByteConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.ByteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.ByteConverter.#ctor" />
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ByteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ByteConverter">
      <topicdata name="ByteConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ByteConverter" />
      <apidata name="ByteConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ByteConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.ByteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ByteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ByteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ByteConverter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ByteConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ByteConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CancelEventArgs">
      <topicdata group="api" />
      <apidata name="CancelEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CancelEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" ref="true" />
          <type api="T:System.Windows.SessionEndingCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Navigation.NavigatingCancelEventArgs" ref="true" />
          <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs" ref="true" />
          <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.BindingCompleteEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.ColumnReorderedEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.ColumnWidthChangingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DpiChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.FormClosingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.InputLanguageChangingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.PopupEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.SplitterCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.TabControlCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.ToolStripDropDownClosingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.TreeViewCancelEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" ref="true" />
          <type api="T:System.Drawing.Printing.PrintEventArgs" ref="true" />
          <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
          <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
          <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
          <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" ref="true" />
          <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.FormViewInsertEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.FormViewModeEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.FormViewPageEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewEditEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewPageEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewSelectEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewSortEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewCancelEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewEditEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewInsertEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewSelectEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewSortEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" ref="true" />
          <type api="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" ref="true" />
          <type api="T:System.Web.ModelBinding.ModelValidatingEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.CancelEventArgs.#ctor">
          <element api="M:System.ComponentModel.CancelEventArgs.#ctor" />
          <element api="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CancelEventArgs">
      <topicdata name="CancelEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CancelEventArgs" />
      <apidata name="CancelEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CancelEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CancelEventArgs">
      <topicdata name="CancelEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CancelEventArgs" />
      <apidata name="CancelEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CancelEventArgs.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CancelEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.CancelEventArgs.#ctor" />
        <element api="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CancelEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CancelEventArgs.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CancelEventArgs.#ctor" />
      <parameters>
        <parameter name="cancel">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CancelEventArgs.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cancel" />
      <setter name="set_Cancel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CancelEventHandler">
      <topicdata group="api" />
      <apidata name="CancelEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.CategoryAttribute">
      <topicdata group="api" />
      <apidata name="CategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CategoryAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.CategoryAttribute.#ctor">
          <element api="M:System.ComponentModel.CategoryAttribute.#ctor" />
          <element api="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.CategoryAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)" />
        <element api="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.CategoryAttribute.Action" />
        <element api="P:System.ComponentModel.CategoryAttribute.Appearance" />
        <element api="P:System.ComponentModel.CategoryAttribute.Asynchronous" />
        <element api="P:System.ComponentModel.CategoryAttribute.Behavior" />
        <element api="P:System.ComponentModel.CategoryAttribute.Category" />
        <element api="P:System.ComponentModel.CategoryAttribute.Data" />
        <element api="P:System.ComponentModel.CategoryAttribute.Default" />
        <element api="P:System.ComponentModel.CategoryAttribute.Design" />
        <element api="P:System.ComponentModel.CategoryAttribute.DragDrop" />
        <element api="P:System.ComponentModel.CategoryAttribute.Focus" />
        <element api="P:System.ComponentModel.CategoryAttribute.Format" />
        <element api="P:System.ComponentModel.CategoryAttribute.Key" />
        <element api="P:System.ComponentModel.CategoryAttribute.Layout" />
        <element api="P:System.ComponentModel.CategoryAttribute.Mouse" />
        <element api="P:System.ComponentModel.CategoryAttribute.WindowStyle" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CategoryAttribute">
      <topicdata name="CategoryAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CategoryAttribute" />
      <apidata name="CategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CategoryAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.CategoryAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)" />
        <element api="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CategoryAttribute">
      <topicdata name="CategoryAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CategoryAttribute" />
      <apidata name="CategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CategoryAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.CategoryAttribute.Action" />
        <element api="P:System.ComponentModel.CategoryAttribute.Appearance" />
        <element api="P:System.ComponentModel.CategoryAttribute.Asynchronous" />
        <element api="P:System.ComponentModel.CategoryAttribute.Behavior" />
        <element api="P:System.ComponentModel.CategoryAttribute.Category" />
        <element api="P:System.ComponentModel.CategoryAttribute.Data" />
        <element api="P:System.ComponentModel.CategoryAttribute.Default" />
        <element api="P:System.ComponentModel.CategoryAttribute.Design" />
        <element api="P:System.ComponentModel.CategoryAttribute.DragDrop" />
        <element api="P:System.ComponentModel.CategoryAttribute.Focus" />
        <element api="P:System.ComponentModel.CategoryAttribute.Format" />
        <element api="P:System.ComponentModel.CategoryAttribute.Key" />
        <element api="P:System.ComponentModel.CategoryAttribute.Layout" />
        <element api="P:System.ComponentModel.CategoryAttribute.Mouse" />
        <element api="P:System.ComponentModel.CategoryAttribute.WindowStyle" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CategoryAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.CategoryAttribute.#ctor" />
        <element api="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CategoryAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CategoryAttribute.#ctor" />
      <parameters>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Appearance">
      <topicdata group="api" />
      <apidata name="Appearance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Appearance" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <topicdata group="api" />
      <apidata name="Asynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Asynchronous" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Behavior">
      <topicdata group="api" />
      <apidata name="Behavior" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Behavior" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Design">
      <topicdata group="api" />
      <apidata name="Design" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Design" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <topicdata group="api" />
      <apidata name="DragDrop" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DragDrop" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Focus">
      <topicdata group="api" />
      <apidata name="Focus" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Focus" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Format" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <topicdata group="api" />
      <apidata name="GetLocalizedString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Layout">
      <topicdata group="api" />
      <apidata name="Layout" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Layout" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.Mouse">
      <topicdata group="api" />
      <apidata name="Mouse" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mouse" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <topicdata group="api" />
      <apidata name="WindowStyle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowStyle" />
      <returns>
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CharConverter">
      <topicdata group="api" />
      <apidata name="CharConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CharConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CharConverter.#ctor" />
        <element api="Overload:System.ComponentModel.CharConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CharConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CharConverter">
      <topicdata name="CharConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CharConverter" />
      <apidata name="CharConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CharConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.CharConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CharConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CharConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CharConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CharConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CharConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CharConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CharConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CharConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CharConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CharConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CollectionChangeAction">
      <topicdata group="api" />
      <apidata name="CollectionChangeAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.CollectionChangeAction.Add" />
        <element api="F:System.ComponentModel.CollectionChangeAction.Remove" />
        <element api="F:System.ComponentModel.CollectionChangeAction.Refresh" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.CollectionChangeAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.CollectionChangeAction.Refresh">
      <topicdata group="api" notopic="" />
      <apidata name="Refresh" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.CollectionChangeAction.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CollectionChangeEventArgs">
      <topicdata group="api" />
      <apidata name="CollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CollectionChangeEventArgs.Action" />
        <element api="P:System.ComponentModel.CollectionChangeEventArgs.Element" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CollectionChangeEventArgs">
      <topicdata name="CollectionChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CollectionChangeEventArgs" />
      <apidata name="CollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CollectionChangeEventArgs">
      <topicdata name="CollectionChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CollectionChangeEventArgs" />
      <apidata name="CollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CollectionChangeEventArgs.Action" />
        <element api="P:System.ComponentModel.CollectionChangeEventArgs.Element" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
        </parameter>
        <parameter name="element">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CollectionChangeEventArgs.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.ComponentModel.CollectionChangeAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CollectionChangeEventArgs.Element">
      <topicdata group="api" />
      <apidata name="Element" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Element" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CollectionChangeEventHandler">
      <topicdata group="api" />
      <apidata name="CollectionChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.CollectionConverter">
      <topicdata group="api" />
      <apidata name="CollectionConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CollectionConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.ArrayConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CollectionConverter.#ctor" />
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CollectionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CollectionConverter">
      <topicdata name="CollectionConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CollectionConverter" />
      <apidata name="CollectionConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CollectionConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CollectionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CollectionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CollectionConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CollectionConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CollectionConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CollectionConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CollectionConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CollectionConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CollectionConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <topicdata group="api" />
      <apidata name="ComplexBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ComplexBindingPropertiesAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor">
          <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
          <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataMember" />
        <element api="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataSource" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <topicdata name="ComplexBindingPropertiesAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      <apidata name="ComplexBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <topicdata name="ComplexBindingPropertiesAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      <apidata name="ComplexBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataMember" />
        <element api="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataSource" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <topicdata name="ComplexBindingPropertiesAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      <apidata name="ComplexBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.ComplexBindingPropertiesAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <parameters>
        <parameter name="dataSource">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor" />
      <parameters>
        <parameter name="dataSource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataMember">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataMember">
      <topicdata group="api" />
      <apidata name="DataMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataMember" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataSource">
      <topicdata group="api" />
      <apidata name="DataSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataSource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ComplexBindingPropertiesAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComplexBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Component">
      <topicdata group="api" />
      <apidata name="Component" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Component.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.FileSystemWatcher" ref="true" />
          <type api="T:System.Diagnostics.EventLog" ref="true" />
          <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
          <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
          <type api="T:System.Diagnostics.Process" ref="true" />
          <type api="T:System.Diagnostics.ProcessModule" ref="true" />
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
          <type api="T:System.Runtime.Remoting.Services.RemotingClientProxy" ref="true" />
          <type api="T:System.Runtime.Remoting.Services.RemotingService" ref="true" />
          <type api="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" ref="true" />
          <type api="T:System.ComponentModel.BackgroundWorker" ref="true" />
          <type api="T:System.Timers.Timer" ref="true" />
          <type api="T:System.Net.WebClient" ref="true" />
          <type api="T:System.Net.NetworkInformation.Ping" ref="true" />
          <type api="T:System.Media.SoundPlayer" ref="true" />
          <type api="T:System.IO.Ports.SerialPort" ref="true" />
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.Data.Common.DataAdapter" ref="true" />
          <type api="T:System.Data.Common.DbCommand" ref="true" />
          <type api="T:System.Data.Common.DbCommandBuilder" ref="true" />
          <type api="T:System.Data.Common.DbConnection" ref="true" />
          <type api="T:System.Windows.Forms.BindingSource" ref="true" />
          <type api="T:System.Windows.Forms.ColumnHeader" ref="true" />
          <type api="T:System.Windows.Forms.CommonDialog" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.Windows.Forms.DataGridColumnStyle" ref="true" />
          <type api="T:System.Windows.Forms.DataGridTableStyle" ref="true" />
          <type api="T:System.Windows.Forms.ErrorProvider" ref="true" />
          <type api="T:System.Windows.Forms.HelpProvider" ref="true" />
          <type api="T:System.Windows.Forms.ImageList" ref="true" />
          <type api="T:System.Windows.Forms.Menu" ref="true" />
          <type api="T:System.Windows.Forms.NotifyIcon" ref="true" />
          <type api="T:System.Windows.Forms.StatusBarPanel" ref="true" />
          <type api="T:System.Windows.Forms.Timer" ref="true" />
          <type api="T:System.Windows.Forms.ToolBarButton" ref="true" />
          <type api="T:System.Windows.Forms.ToolStripItem" ref="true" />
          <type api="T:System.Windows.Forms.ToolStripPanelRow" ref="true" />
          <type api="T:System.Windows.Forms.ToolTip" ref="true" />
          <type api="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" ref="true">
            <type api="T:System.Windows.Forms.Design.FolderNameEditor" ref="true" />
          </type>
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
          <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
          <type api="T:System.Drawing.Printing.PrintDocument" ref="true" />
          <type api="T:System.Management.ManagementBaseObject" ref="true" />
          <type api="T:System.Management.ManagementEventWatcher" ref="true" />
          <type api="T:System.Management.ManagementObjectSearcher" ref="true" />
          <type api="T:System.Messaging.Message" ref="true" />
          <type api="T:System.Messaging.MessageQueue" ref="true" />
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          <type api="T:System.ServiceProcess.ServiceController" ref="true" />
          <type api="T:System.Web.UI.WebControls.Style" ref="true" />
          <type api="T:System.Web.Services.Protocols.WebClientProtocol" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.Component.#ctor" />
        <element api="Overload:System.ComponentModel.Component.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Component.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ClassInterfaceAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ClassInterfaceType" ref="false" />
            <enumValue>
              <field name="AutoDispatch" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Component">
      <topicdata name="Component" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Component" />
      <apidata name="Component" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Component.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Component.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Component.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Component">
      <topicdata name="Component" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Component" />
      <apidata name="Component" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Component.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Component">
      <topicdata name="Component" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Component" />
      <apidata name="Component" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Component.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Component.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Component.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Component.CanRaiseEvents">
      <topicdata group="api" />
      <apidata name="CanRaiseEvents" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanRaiseEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Component.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.Component.DesignMode">
      <topicdata group="api" />
      <apidata name="DesignMode" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesignMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Component.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Component.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Component.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Component.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IComponent.Disposed">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.Component.Events">
      <topicdata group="api" />
      <apidata name="Events" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Events" />
      <returns>
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Component.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Component.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Component.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Component.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Component" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ComponentCollection">
      <topicdata group="api" />
      <apidata name="ComponentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])" />
        <element api="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="Overload:System.ComponentModel.ComponentCollection.Item">
          <element api="P:System.ComponentModel.ComponentCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.ComponentCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ComponentCollection">
      <topicdata name="ComponentCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ComponentCollection" />
      <apidata name="ComponentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ComponentCollection">
      <topicdata name="ComponentCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ComponentCollection" />
      <apidata name="ComponentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="Overload:System.ComponentModel.ComponentCollection.Item">
          <element api="P:System.ComponentModel.ComponentCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.ComponentCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.ComponentModel.ComponentCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.ComponentCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="components">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.IComponent" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.IComponent" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ComponentConverter">
      <topicdata group="api" />
      <apidata name="ComponentConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)" />
        <element api="Overload:System.ComponentModel.ComponentConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="Overload:System.ComponentModel.ComponentConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ComponentConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ComponentConverter">
      <topicdata name="ComponentConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ComponentConverter" />
      <apidata name="ComponentConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="Overload:System.ComponentModel.ComponentConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ComponentConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ComponentEditor">
      <topicdata group="api" />
      <apidata name="ComponentEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Forms.Design.WindowsFormsComponentEditor" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ComponentEditor.#ctor" />
        <element api="Overload:System.ComponentModel.ComponentEditor.EditComponent">
          <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)" />
          <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ComponentEditor">
      <topicdata name="ComponentEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ComponentEditor" />
      <apidata name="ComponentEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.ComponentEditor.EditComponent">
          <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)" />
          <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentEditor.EditComponent">
      <topicdata name="EditComponent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditComponent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)" />
        <element api="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="EditComponent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentEditor.EditComponent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)">
      <topicdata group="api" />
      <apidata name="EditComponent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentEditor.EditComponent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ComponentResourceManager">
      <topicdata group="api" />
      <apidata name="ComponentResourceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ComponentResourceManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Resources.ResourceManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Resources.ResourceManager.BaseNameField" />
        <element api="F:System.Resources.ResourceManager.MainAssembly" />
        <element api="F:System.Resources.ResourceManager.ResourceSets" />
        <element api="Overload:System.ComponentModel.ComponentResourceManager.#ctor">
          <element api="M:System.ComponentModel.ComponentResourceManager.#ctor" />
          <element api="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources">
          <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)" />
          <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetObject">
          <element api="M:System.Resources.ResourceManager.GetObject(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
        <element api="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetStream">
          <element api="M:System.Resources.ResourceManager.GetStream(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetString">
          <element api="M:System.Resources.ResourceManager.GetString(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
        <element api="M:System.Resources.ResourceManager.ReleaseAllResources" />
        <element api="P:System.Resources.ResourceManager.BaseName" />
        <element api="P:System.Resources.ResourceManager.FallbackLocation" />
        <element api="P:System.Resources.ResourceManager.IgnoreCase" />
        <element api="P:System.Resources.ResourceManager.ResourceSetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ComponentResourceManager">
      <topicdata name="ComponentResourceManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ComponentResourceManager" />
      <apidata name="ComponentResourceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ComponentResourceManager.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources">
          <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)" />
          <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetObject">
          <element api="M:System.Resources.ResourceManager.GetObject(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
        <element api="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetStream">
          <element api="M:System.Resources.ResourceManager.GetStream(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.ComponentModel.ComponentResourceManager.GetString">
          <element api="M:System.Resources.ResourceManager.GetString(System.String)" />
          <element api="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
        <element api="M:System.Resources.ResourceManager.ReleaseAllResources" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ComponentResourceManager">
      <topicdata name="ComponentResourceManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ComponentResourceManager" />
      <apidata name="ComponentResourceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ComponentResourceManager.#ctor" />
      <elements>
        <element api="P:System.Resources.ResourceManager.BaseName" />
        <element api="P:System.Resources.ResourceManager.FallbackLocation" />
        <element api="P:System.Resources.ResourceManager.IgnoreCase" />
        <element api="P:System.Resources.ResourceManager.ResourceSetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ComponentResourceManager">
      <topicdata name="ComponentResourceManager" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ComponentResourceManager" />
      <apidata name="ComponentResourceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ComponentResourceManager.#ctor" />
      <elements>
        <element api="F:System.Resources.ResourceManager.BaseNameField" />
        <element api="F:System.Resources.ResourceManager.MainAssembly" />
        <element api="F:System.Resources.ResourceManager.ResourceSets" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentResourceManager.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ComponentResourceManager.#ctor" />
        <element api="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources">
      <topicdata name="ApplyResources" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ApplyResources" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)" />
        <element api="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentResourceManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ComponentResourceManager.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ComponentResourceManager.#ctor" />
      <parameters>
        <parameter name="t">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="ApplyResources" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="ApplyResources" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ComponentResourceManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Container">
      <topicdata group="api" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Container.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.NestedContainer" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Container.#ctor" />
        <element api="Overload:System.ComponentModel.Container.Add">
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
        <element api="Overload:System.ComponentModel.Container.Dispose">
          <element api="M:System.ComponentModel.Container.Dispose" />
          <element api="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Container.Finalize" />
        <element api="M:System.ComponentModel.Container.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Container.Components" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Container">
      <topicdata name="Container" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Container" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Container.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Container.Add">
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
        <element api="Overload:System.ComponentModel.Container.Dispose">
          <element api="M:System.ComponentModel.Container.Dispose" />
          <element api="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Container.Finalize" />
        <element api="M:System.ComponentModel.Container.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Container">
      <topicdata name="Container" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Container" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Container.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Container.Components" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Container.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Container.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Container.Dispose" />
        <element api="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Container.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Container.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Container.Components">
      <topicdata group="api" />
      <apidata name="Components" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Components" />
      <returns>
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IContainer.Components">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSite" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Container.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Container.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="RemoveWithoutUnsiting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="ValidateName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Container" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ContainerFilterService">
      <topicdata group="api" />
      <apidata name="ContainerFilterService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ContainerFilterService.#ctor" />
        <element api="M:System.ComponentModel.ContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ContainerFilterService">
      <topicdata name="ContainerFilterService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ContainerFilterService" />
      <apidata name="ContainerFilterService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ContainerFilterService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ContainerFilterService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ContainerFilterService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)">
      <topicdata group="api" />
      <apidata name="FilterComponents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="components">
          <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ContainerFilterService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CultureInfoConverter">
      <topicdata group="api" />
      <apidata name="CultureInfoConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CultureInfoConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CultureInfoConverter.#ctor" />
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)" />
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CultureInfoConverter">
      <topicdata name="CultureInfoConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CultureInfoConverter" />
      <apidata name="CultureInfoConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CultureInfoConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)" />
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.CultureInfoConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetCultureName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CurrentChangedEventManager">
      <topicdata group="api" />
      <apidata name="CurrentChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.CurrentChangedEventManager">
      <topicdata name="CurrentChangedEventManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CurrentChangedEventManager" />
      <apidata name="CurrentChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CurrentChangedEventManager">
      <topicdata name="CurrentChangedEventManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CurrentChangedEventManager" />
      <apidata name="CurrentChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.EventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="AddListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.EventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="RemoveListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CurrentChangingEventArgs">
      <topicdata group="api" />
      <apidata name="CurrentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.CurrentChangingEventArgs.#ctor">
          <element api="M:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
          <element api="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CurrentChangingEventArgs.Cancel" />
        <element api="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.CurrentChangingEventArgs">
      <topicdata name="CurrentChangingEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CurrentChangingEventArgs" />
      <apidata name="CurrentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CurrentChangingEventArgs">
      <topicdata name="CurrentChangingEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CurrentChangingEventArgs" />
      <apidata name="CurrentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.CurrentChangingEventArgs.Cancel" />
        <element api="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
        <element api="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.CurrentChangingEventArgs.#ctor" />
      <parameters>
        <parameter name="isCancelable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cancel" />
      <setter name="set_Cancel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <topicdata group="api" />
      <apidata name="IsCancelable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCancelable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CurrentChangingEventHandler">
      <topicdata group="api" />
      <apidata name="CurrentChangingEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CurrentChangingEventManager">
      <topicdata group="api" />
      <apidata name="CurrentChangingEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.CurrentChangingEventManager">
      <topicdata name="CurrentChangingEventManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CurrentChangingEventManager" />
      <apidata name="CurrentChangingEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.CurrentChangingEventManager">
      <topicdata name="CurrentChangingEventManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.CurrentChangingEventManager" />
      <apidata name="CurrentChangingEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="AddListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="RemoveListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CurrentChangingEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.CustomTypeDescriptor">
      <topicdata group="api" />
      <apidata name="CustomTypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.WorkflowDataContext" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.ComponentModel.CustomTypeDescriptor.#ctor">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.#ctor" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.CustomTypeDescriptor">
      <topicdata name="CustomTypeDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.CustomTypeDescriptor" />
      <apidata name="CustomTypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CustomTypeDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.#ctor" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.CustomTypeDescriptor.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.CustomTypeDescriptor.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetClassName">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName">
      <topicdata group="api" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetConverter">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetEvents">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetProperties">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DataErrorsChangedEventArgs">
      <topicdata group="api" />
      <apidata name="DataErrorsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DataErrorsChangedEventArgs">
      <topicdata name="DataErrorsChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DataErrorsChangedEventArgs" />
      <apidata name="DataErrorsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DataErrorsChangedEventArgs">
      <topicdata name="DataErrorsChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DataErrorsChangedEventArgs" />
      <apidata name="DataErrorsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DataObjectAttribute">
      <topicdata group="api" />
      <apidata name="DataObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DataObjectAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DataObjectAttribute.DataObject" />
        <element api="F:System.ComponentModel.DataObjectAttribute.Default" />
        <element api="F:System.ComponentModel.DataObjectAttribute.NonDataObject" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DataObjectAttribute.#ctor">
          <element api="M:System.ComponentModel.DataObjectAttribute.#ctor" />
          <element api="M:System.ComponentModel.DataObjectAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.DataObjectAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DataObjectAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectAttribute.IsDataObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DataObjectAttribute">
      <topicdata name="DataObjectAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DataObjectAttribute" />
      <apidata name="DataObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DataObjectAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DataObjectAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DataObjectAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DataObjectAttribute">
      <topicdata name="DataObjectAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DataObjectAttribute" />
      <apidata name="DataObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DataObjectAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectAttribute.IsDataObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DataObjectAttribute">
      <topicdata name="DataObjectAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DataObjectAttribute" />
      <apidata name="DataObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DataObjectAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DataObjectAttribute.DataObject" />
        <element api="F:System.ComponentModel.DataObjectAttribute.Default" />
        <element api="F:System.ComponentModel.DataObjectAttribute.NonDataObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DataObjectAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DataObjectAttribute.#ctor" />
        <element api="M:System.ComponentModel.DataObjectAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectAttribute.#ctor" />
      <parameters>
        <parameter name="isDataObject">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectAttribute.DataObject">
      <topicdata group="api" />
      <apidata name="DataObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectAttribute.IsDataObject">
      <topicdata group="api" />
      <apidata name="IsDataObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDataObject" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectAttribute.NonDataObject">
      <topicdata group="api" />
      <apidata name="NonDataObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DataObjectFieldAttribute">
      <topicdata group="api" />
      <apidata name="DataObjectFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor">
          <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean)" />
          <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
          <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)" />
        </element>
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.IsIdentity" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.IsNullable" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.Length" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.PrimaryKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DataObjectFieldAttribute">
      <topicdata name="DataObjectFieldAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DataObjectFieldAttribute" />
      <apidata name="DataObjectFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DataObjectFieldAttribute">
      <topicdata name="DataObjectFieldAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DataObjectFieldAttribute" />
      <apidata name="DataObjectFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.IsIdentity" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.IsNullable" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.Length" />
        <element api="P:System.ComponentModel.DataObjectFieldAttribute.PrimaryKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor" />
      <parameters>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor" />
      <parameters>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isIdentity">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor" />
      <parameters>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isIdentity">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectFieldAttribute.#ctor" />
      <parameters>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isIdentity">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectFieldAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectFieldAttribute.IsIdentity">
      <topicdata group="api" />
      <apidata name="IsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIdentity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectFieldAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectFieldAttribute.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectFieldAttribute.PrimaryKey">
      <topicdata group="api" />
      <apidata name="PrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DataObjectMethodAttribute">
      <topicdata group="api" />
      <apidata name="DataObjectMethodAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DataObjectMethodAttribute.#ctor">
          <element api="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType)" />
          <element api="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectMethodAttribute.IsDefault" />
        <element api="P:System.ComponentModel.DataObjectMethodAttribute.MethodType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DataObjectMethodAttribute">
      <topicdata name="DataObjectMethodAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DataObjectMethodAttribute" />
      <apidata name="DataObjectMethodAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DataObjectMethodAttribute">
      <topicdata name="DataObjectMethodAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DataObjectMethodAttribute" />
      <apidata name="DataObjectMethodAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DataObjectMethodAttribute.IsDefault" />
        <element api="P:System.ComponentModel.DataObjectMethodAttribute.MethodType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DataObjectMethodAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType)" />
        <element api="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectMethodAttribute.#ctor" />
      <parameters>
        <parameter name="methodType">
          <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DataObjectMethodAttribute.#ctor" />
      <parameters>
        <parameter name="methodType">
          <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
        </parameter>
        <parameter name="isDefault">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectMethodAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectMethodAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectMethodAttribute.IsDefault">
      <topicdata group="api" />
      <apidata name="IsDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDefault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DataObjectMethodAttribute.Match(System.Object)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Match(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DataObjectMethodAttribute.MethodType">
      <topicdata group="api" />
      <apidata name="MethodType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodType" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DataObjectMethodType">
      <topicdata group="api" />
      <apidata name="DataObjectMethodType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DataObjectMethodType.Fill" />
        <element api="F:System.ComponentModel.DataObjectMethodType.Select" />
        <element api="F:System.ComponentModel.DataObjectMethodType.Update" />
        <element api="F:System.ComponentModel.DataObjectMethodType.Insert" />
        <element api="F:System.ComponentModel.DataObjectMethodType.Delete" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectMethodType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectMethodType.Fill">
      <topicdata group="api" notopic="" />
      <apidata name="Fill" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectMethodType.Insert">
      <topicdata group="api" notopic="" />
      <apidata name="Insert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectMethodType.Select">
      <topicdata group="api" notopic="" />
      <apidata name="Select" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DataObjectMethodType.Update">
      <topicdata group="api" notopic="" />
      <apidata name="Update" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DataObjectMethodType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DateTimeConverter">
      <topicdata group="api" />
      <apidata name="DateTimeConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DateTimeConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.DateTimeConverter.#ctor" />
        <element api="Overload:System.ComponentModel.DateTimeConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DateTimeConverter">
      <topicdata name="DateTimeConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DateTimeConverter" />
      <apidata name="DateTimeConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DateTimeConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.DateTimeConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DateTimeOffsetConverter">
      <topicdata group="api" />
      <apidata name="DateTimeOffsetConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DateTimeOffsetConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.DateTimeOffsetConverter.#ctor" />
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DateTimeOffsetConverter">
      <topicdata name="DateTimeOffsetConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DateTimeOffsetConverter" />
      <apidata name="DateTimeOffsetConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DateTimeOffsetConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DateTimeOffsetConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeOffsetConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DateTimeOffsetConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DecimalConverter">
      <topicdata group="api" />
      <apidata name="DecimalConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DecimalConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.DecimalConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.DecimalConverter.#ctor" />
        <element api="Overload:System.ComponentModel.DecimalConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DecimalConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DecimalConverter">
      <topicdata name="DecimalConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DecimalConverter" />
      <apidata name="DecimalConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DecimalConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.DecimalConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DecimalConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DecimalConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DecimalConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DecimalConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DecimalConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DecimalConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DecimalConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DecimalConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <topicdata group="api" />
      <apidata name="DefaultBindingPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DefaultBindingPropertyAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor">
          <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
          <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultBindingPropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <topicdata name="DefaultBindingPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      <apidata name="DefaultBindingPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <topicdata name="DefaultBindingPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      <apidata name="DefaultBindingPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultBindingPropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <topicdata name="DefaultBindingPropertyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      <apidata name="DefaultBindingPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DefaultBindingPropertyAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
        <element api="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DefaultBindingPropertyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultBindingPropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DefaultBindingPropertyAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultBindingPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DefaultEventAttribute">
      <topicdata group="api" />
      <apidata name="DefaultEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DefaultEventAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultEventAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultEventAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultEventAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DefaultEventAttribute">
      <topicdata name="DefaultEventAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DefaultEventAttribute" />
      <apidata name="DefaultEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultEventAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DefaultEventAttribute">
      <topicdata name="DefaultEventAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DefaultEventAttribute" />
      <apidata name="DefaultEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultEventAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DefaultEventAttribute">
      <topicdata name="DefaultEventAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DefaultEventAttribute" />
      <apidata name="DefaultEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DefaultEventAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultEventAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DefaultEventAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultEventAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DefaultEventAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DefaultPropertyAttribute">
      <topicdata group="api" />
      <apidata name="DefaultPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DefaultPropertyAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultPropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DefaultPropertyAttribute">
      <topicdata name="DefaultPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DefaultPropertyAttribute" />
      <apidata name="DefaultPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DefaultPropertyAttribute">
      <topicdata name="DefaultPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DefaultPropertyAttribute" />
      <apidata name="DefaultPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultPropertyAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DefaultPropertyAttribute">
      <topicdata name="DefaultPropertyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DefaultPropertyAttribute" />
      <apidata name="DefaultPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DefaultPropertyAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DefaultPropertyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DefaultPropertyAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DefaultValueAttribute">
      <topicdata group="api" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DefaultValueAttribute.#ctor">
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.SetValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DefaultValueAttribute">
      <topicdata name="DefaultValueAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.SetValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DefaultValueAttribute">
      <topicdata name="DefaultValueAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DefaultValueAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DefaultValueAttribute.SetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DefaultValueAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DependencyPropertyDescriptor">
      <topicdata group="api" />
      <apidata name="DependencyPropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromName">
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromProperty">
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.DependencyPropertyDescriptor">
      <topicdata name="DependencyPropertyDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DependencyPropertyDescriptor" />
      <apidata name="DependencyPropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromName">
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromProperty">
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DependencyPropertyDescriptor">
      <topicdata name="DependencyPropertyDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DependencyPropertyDescriptor" />
      <apidata name="DependencyPropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
        <element api="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromName">
      <topicdata name="FromName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromProperty">
      <topicdata name="FromProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties">
      <topicdata name="GetChildProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
        <element api="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <topicdata group="api" />
      <apidata name="AddValueChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.Attributes">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="CanResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.Category">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <topicdata group="api" />
      <apidata name="ComponentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ComponentType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.Converter">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Converter" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <topicdata group="api" />
      <apidata name="DependencyProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DependencyProperty" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.Description">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <topicdata group="api" />
      <apidata name="DesignerCoerceValueCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DesignerCoerceValueCallback" />
      <setter name="set_DesignerCoerceValueCallback" />
      <returns>
        <type api="T:System.Windows.CoerceValueCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <topicdata group="api" />
      <apidata name="DesignTimeOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DesignTimeOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.DisplayName">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="FromName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FromName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ignorePropertyType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="FromProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <topicdata group="api" />
      <apidata name="FromProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.DependencyPropertyDescriptor.FromProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="filter">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <topicdata group="api" />
      <apidata name="IsAttached" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAttached" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <topicdata group="api" />
      <apidata name="IsBrowsable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MemberDescriptor.IsBrowsable">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsBrowsable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <topicdata group="api" />
      <apidata name="IsLocalizable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsLocalizable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <topicdata group="api" />
      <apidata name="Metadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Metadata" />
      <returns>
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <topicdata group="api" />
      <apidata name="RemoveValueChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <topicdata group="api" />
      <apidata name="SupportsChangeEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsChangeEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DescriptionAttribute">
      <topicdata group="api" />
      <apidata name="DescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DescriptionAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.IODescriptionAttribute" ref="true" />
          <type api="T:System.Diagnostics.MonitoringDescriptionAttribute" ref="true" />
          <type api="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute" ref="true" />
          <type api="T:System.Timers.TimersDescriptionAttribute" ref="true" />
          <type api="T:System.Data.DataSysDescriptionAttribute" ref="true" />
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <type api="T:System.Messaging.MessagingDescriptionAttribute" ref="true" />
          <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DescriptionAttribute.Default" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DescriptionAttribute.#ctor">
          <element api="M:System.ComponentModel.DescriptionAttribute.#ctor" />
          <element api="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.Description" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DescriptionAttribute">
      <topicdata name="DescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DescriptionAttribute" />
      <apidata name="DescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DescriptionAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DescriptionAttribute">
      <topicdata name="DescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DescriptionAttribute" />
      <apidata name="DescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DescriptionAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.Description" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DescriptionAttribute">
      <topicdata name="DescriptionAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DescriptionAttribute" />
      <apidata name="DescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DescriptionAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DescriptionAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DescriptionAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DescriptionAttribute.#ctor" />
        <element api="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DescriptionAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DescriptionAttribute.#ctor" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DescriptionAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <topicdata group="api" />
      <apidata name="DescriptionValue" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DescriptionValue" />
      <setter name="set_DescriptionValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignerAttribute">
      <topicdata group="api" />
      <apidata name="DesignerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DesignerAttribute.#ctor">
          <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)" />
          <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
        <element api="P:System.ComponentModel.DesignerAttribute.DesignerTypeName" />
        <element api="P:System.ComponentModel.DesignerAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignerAttribute">
      <topicdata name="DesignerAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignerAttribute" />
      <apidata name="DesignerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DesignerAttribute">
      <topicdata name="DesignerAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DesignerAttribute" />
      <apidata name="DesignerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
        <element api="P:System.ComponentModel.DesignerAttribute.DesignerTypeName" />
        <element api="P:System.ComponentModel.DesignerAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DesignerAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)" />
        <element api="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerAttribute.#ctor" />
      <parameters>
        <parameter name="designerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerAttribute.#ctor" />
      <parameters>
        <parameter name="designerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="designerBaseTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerAttribute.#ctor" />
      <parameters>
        <parameter name="designerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="designerBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerAttribute.#ctor" />
      <parameters>
        <parameter name="designerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerAttribute.#ctor" />
      <parameters>
        <parameter name="designerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="designerBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <topicdata group="api" />
      <apidata name="DesignerBaseTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesignerBaseTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <topicdata group="api" />
      <apidata name="DesignerTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesignerTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignerCategoryAttribute">
      <topicdata group="api" />
      <apidata name="DesignerCategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Component" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Default" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Form" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Generic" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DesignerCategoryAttribute.#ctor">
          <element api="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
          <element api="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DesignerCategoryAttribute.Category" />
        <element api="P:System.ComponentModel.DesignerCategoryAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignerCategoryAttribute">
      <topicdata name="DesignerCategoryAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignerCategoryAttribute" />
      <apidata name="DesignerCategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DesignerCategoryAttribute">
      <topicdata name="DesignerCategoryAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DesignerCategoryAttribute" />
      <apidata name="DesignerCategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.DesignerCategoryAttribute.Category" />
        <element api="P:System.ComponentModel.DesignerCategoryAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DesignerCategoryAttribute">
      <topicdata name="DesignerCategoryAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DesignerCategoryAttribute" />
      <apidata name="DesignerCategoryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Component" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Default" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Form" />
        <element api="F:System.ComponentModel.DesignerCategoryAttribute.Generic" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
        <element api="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignerCategoryAttribute.#ctor" />
      <parameters>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <topicdata group="api" />
      <apidata name="Generic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerCategoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignerProperties">
      <topicdata group="api" />
      <apidata name="DesignerProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty" />
        <element api="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)" />
        <element api="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)" />
        <element api="P:System.ComponentModel.DesignerProperties.IsInDesignMode" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignerProperties">
      <topicdata name="DesignerProperties" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignerProperties" />
      <apidata name="DesignerProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)" />
        <element api="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DesignerProperties">
      <topicdata name="DesignerProperties" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DesignerProperties" />
      <apidata name="DesignerProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" />
      </containers>
    </api>
    <api id="AttachedProperties.T:System.ComponentModel.DesignerProperties">
      <topicdata name="DesignerProperties" group="list" subgroup="AttachedProperties" subsubgroup="AttachedProperties" typeTopicId="T:System.ComponentModel.DesignerProperties" />
      <apidata name="DesignerProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.DesignerProperties.IsInDesignMode" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <topicdata group="api" />
      <apidata name="GetIsInDesignMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <topicdata group="api" />
      <apidata name="IsInDesignMode" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInDesignMode">
        <attributes>
          <attribute>
            <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
            <argument>
              <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
              <enumValue>
                <field name="Hidden" />
              </enumValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsInDesignMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
            <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
            <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <topicdata group="api" />
      <apidata name="IsInDesignModeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetIsInDesignMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerProperties" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignerSerializationVisibility">
      <topicdata group="api" />
      <apidata name="DesignerSerializationVisibility" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DesignerSerializationVisibility.Hidden" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibility.Content" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <topicdata group="api" notopic="" />
      <apidata name="Content" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <topicdata group="api" notopic="" />
      <apidata name="Hidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <topicdata group="api" notopic="" />
      <apidata name="Visible" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <topicdata group="api" />
      <apidata name="DesignerSerializationVisibilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <topicdata name="DesignerSerializationVisibilityAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      <apidata name="DesignerSerializationVisibilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <topicdata name="DesignerSerializationVisibilityAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      <apidata name="DesignerSerializationVisibilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <topicdata name="DesignerSerializationVisibilityAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      <apidata name="DesignerSerializationVisibilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden" />
        <element api="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="visibility">
          <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <topicdata group="api" />
      <apidata name="Hidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <topicdata group="api" />
      <apidata name="Visibility" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Visibility" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <topicdata group="api" />
      <apidata name="Visible" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignOnlyAttribute">
      <topicdata group="api" />
      <apidata name="DesignOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DesignOnlyAttribute.Default" />
        <element api="F:System.ComponentModel.DesignOnlyAttribute.No" />
        <element api="F:System.ComponentModel.DesignOnlyAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignOnlyAttribute">
      <topicdata name="DesignOnlyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignOnlyAttribute" />
      <apidata name="DesignOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DesignOnlyAttribute">
      <topicdata name="DesignOnlyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DesignOnlyAttribute" />
      <apidata name="DesignOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DesignOnlyAttribute">
      <topicdata name="DesignOnlyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DesignOnlyAttribute" />
      <apidata name="DesignOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.DesignOnlyAttribute.Default" />
        <element api="F:System.ComponentModel.DesignOnlyAttribute.No" />
        <element api="F:System.ComponentModel.DesignOnlyAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isDesignOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <topicdata group="api" />
      <apidata name="IsDesignOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDesignOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignOnlyAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DesignTimeVisibleAttribute">
      <topicdata group="api" />
      <apidata name="DesignTimeVisibleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.No" />
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DesignTimeVisibleAttribute.#ctor">
          <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
          <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DesignTimeVisibleAttribute">
      <topicdata name="DesignTimeVisibleAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      <apidata name="DesignTimeVisibleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DesignTimeVisibleAttribute">
      <topicdata name="DesignTimeVisibleAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      <apidata name="DesignTimeVisibleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DesignTimeVisibleAttribute">
      <topicdata name="DesignTimeVisibleAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      <apidata name="DesignTimeVisibleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.No" />
        <element api="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DesignTimeVisibleAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
        <element api="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DesignTimeVisibleAttribute.#ctor" />
      <parameters>
        <parameter name="visible">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignTimeVisibleAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignTimeVisibleAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignTimeVisibleAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible">
      <topicdata group="api" />
      <apidata name="Visible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Visible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DesignTimeVisibleAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DisplayNameAttribute">
      <topicdata group="api" />
      <apidata name="DisplayNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.DisplayNameAttribute.Default" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.DisplayNameAttribute.#ctor">
          <element api="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
          <element api="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DisplayNameAttribute.DisplayName" />
        <element api="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Property" />
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DisplayNameAttribute">
      <topicdata name="DisplayNameAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DisplayNameAttribute" />
      <apidata name="DisplayNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DisplayNameAttribute">
      <topicdata name="DisplayNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DisplayNameAttribute" />
      <apidata name="DisplayNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DisplayNameAttribute.DisplayName" />
        <element api="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.DisplayNameAttribute">
      <topicdata name="DisplayNameAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.DisplayNameAttribute" />
      <apidata name="DisplayNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.DisplayNameAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.DisplayNameAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.DisplayNameAttribute.#ctor" />
        <element api="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.DisplayNameAttribute.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.DisplayNameAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <topicdata group="api" />
      <apidata name="DisplayNameValue" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayNameValue" />
      <setter name="set_DisplayNameValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DisplayNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DoubleConverter">
      <topicdata group="api" />
      <apidata name="DoubleConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DoubleConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.DoubleConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.DoubleConverter.#ctor" />
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DoubleConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DoubleConverter">
      <topicdata name="DoubleConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DoubleConverter" />
      <apidata name="DoubleConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.DoubleConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.DoubleConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.DoubleConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.DoubleConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoubleConverter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DoubleConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoubleConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DoWorkEventArgs">
      <topicdata group="api" />
      <apidata name="DoWorkEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.ComponentModel.DoWorkEventArgs.Argument" />
        <element api="P:System.ComponentModel.DoWorkEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.DoWorkEventArgs">
      <topicdata name="DoWorkEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.DoWorkEventArgs" />
      <apidata name="DoWorkEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoWorkEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.DoWorkEventArgs">
      <topicdata name="DoWorkEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.DoWorkEventArgs" />
      <apidata name="DoWorkEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.ComponentModel.DoWorkEventArgs.Argument" />
        <element api="P:System.ComponentModel.DoWorkEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoWorkEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Argument" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.DoWorkEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.DoWorkEventHandler">
      <topicdata group="api" />
      <apidata name="DoWorkEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.DoWorkEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.EditorAttribute">
      <topicdata group="api" />
      <apidata name="EditorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.EditorAttribute.#ctor">
          <element api="M:System.ComponentModel.EditorAttribute.#ctor" />
          <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)" />
          <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.EditorAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.EditorAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName" />
        <element api="P:System.ComponentModel.EditorAttribute.EditorTypeName" />
        <element api="P:System.ComponentModel.EditorAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EditorAttribute">
      <topicdata name="EditorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EditorAttribute" />
      <apidata name="EditorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.EditorAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.EditorAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EditorAttribute">
      <topicdata name="EditorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EditorAttribute" />
      <apidata name="EditorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorAttribute.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName" />
        <element api="P:System.ComponentModel.EditorAttribute.EditorTypeName" />
        <element api="P:System.ComponentModel.EditorAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EditorAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.EditorAttribute.#ctor" />
        <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)" />
        <element api="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <topicdata group="api" />
      <apidata name="EditorBaseTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EditorBaseTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <topicdata group="api" />
      <apidata name="EditorTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EditorTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EditorAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EditorBrowsableAttribute">
      <topicdata group="api" />
      <apidata name="EditorBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.EditorBrowsableAttribute.#ctor">
          <element api="M:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
          <element api="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)" />
        </element>
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.EditorBrowsableAttribute.State" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
              <field name="Event" />
              <field name="Interface" />
              <field name="Delegate" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EditorBrowsableAttribute">
      <topicdata name="EditorBrowsableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EditorBrowsableAttribute" />
      <apidata name="EditorBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EditorBrowsableAttribute">
      <topicdata name="EditorBrowsableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EditorBrowsableAttribute" />
      <apidata name="EditorBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.EditorBrowsableAttribute.State" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EditorBrowsableAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
        <element api="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorBrowsableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EditorBrowsableAttribute.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EditorBrowsableState">
      <topicdata group="api" />
      <apidata name="EditorBrowsableState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.EditorBrowsableState.Always" />
        <element api="F:System.ComponentModel.EditorBrowsableState.Never" />
        <element api="F:System.ComponentModel.EditorBrowsableState.Advanced" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <topicdata group="api" notopic="" />
      <apidata name="Advanced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.EditorBrowsableState.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.EditorBrowsableState.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EnumConverter">
      <topicdata group="api" />
      <apidata name="EnumConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Drawing.FontConverter.FontUnitConverter" ref="true">
            <type api="T:System.Drawing.FontConverter" ref="true" />
          </type>
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.EnumConverter.#ctor(System.Type)" />
        <element api="Overload:System.ComponentModel.EnumConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.EnumConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.EnumConverter.Comparer" />
        <element api="P:System.ComponentModel.EnumConverter.EnumType" />
        <element api="P:System.ComponentModel.EnumConverter.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EnumConverter">
      <topicdata name="EnumConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EnumConverter" />
      <apidata name="EnumConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.EnumConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.EnumConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.EnumConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EnumConverter">
      <topicdata name="EnumConverter" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EnumConverter" />
      <apidata name="EnumConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.EnumConverter.Comparer" />
        <element api="P:System.ComponentModel.EnumConverter.EnumType" />
        <element api="P:System.ComponentModel.EnumConverter.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EnumConverter.IsValid">
      <topicdata name="IsValid" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
        <element api="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EnumConverter.Comparer">
      <topicdata group="api" />
      <apidata name="Comparer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Comparer" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EnumConverter.EnumType">
      <topicdata group="api" />
      <apidata name="EnumType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnumType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EnumConverter.IsValid" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EnumConverter.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Values" />
      <setter name="set_Values" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EnumConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ErrorsChangedEventManager">
      <topicdata group="api" />
      <apidata name="ErrorsChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ErrorsChangedEventManager">
      <topicdata name="ErrorsChangedEventManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ErrorsChangedEventManager" />
      <apidata name="ErrorsChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ErrorsChangedEventManager">
      <topicdata name="ErrorsChangedEventManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ErrorsChangedEventManager" />
      <apidata name="ErrorsChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ErrorsChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EventDescriptor">
      <topicdata group="api" />
      <apidata name="EventDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.EventDescriptor.#ctor">
          <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
          <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.EventDescriptor.EventType" />
        <element api="P:System.ComponentModel.EventDescriptor.IsMulticast" />
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EventDescriptor">
      <topicdata name="EventDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EventDescriptor" />
      <apidata name="EventDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EventDescriptor">
      <topicdata name="EventDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EventDescriptor" />
      <apidata name="EventDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.EventDescriptor.EventType" />
        <element api="P:System.ComponentModel.EventDescriptor.IsMulticast" />
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EventDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
        <element api="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.EventDescriptor.#ctor" />
      <parameters>
        <parameter name="descr">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.EventDescriptor.#ctor" />
      <parameters>
        <parameter name="descr">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="attrs">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.EventDescriptor.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attrs">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
      <topicdata group="api" />
      <apidata name="AddEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptor.ComponentType">
      <topicdata group="api" />
      <apidata name="ComponentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ComponentType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptor.EventType">
      <topicdata group="api" />
      <apidata name="EventType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_EventType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptor.IsMulticast">
      <topicdata group="api" />
      <apidata name="IsMulticast" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMulticast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
      <topicdata group="api" />
      <apidata name="RemoveEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EventDescriptorCollection">
      <topicdata group="api" />
      <apidata name="EventDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="F:System.ComponentModel.EventDescriptorCollection.Empty" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.#ctor">
          <element api="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Clear" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort">
          <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.Sort">
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.Count" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.Item">
          <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EventDescriptorCollection">
      <topicdata name="EventDescriptorCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EventDescriptorCollection" />
      <apidata name="EventDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Clear" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort">
          <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.Sort">
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])" />
          <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
        </element>
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EventDescriptorCollection">
      <topicdata name="EventDescriptorCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EventDescriptorCollection" />
      <apidata name="EventDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.EventDescriptorCollection.Count" />
        <element api="Overload:System.ComponentModel.EventDescriptorCollection.Item">
          <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.EventDescriptorCollection">
      <topicdata name="EventDescriptorCollection" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.EventDescriptorCollection" />
      <apidata name="EventDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.EventDescriptorCollection.Empty" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EventDescriptorCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort">
      <topicdata name="InternalSort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EventDescriptorCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.EventDescriptorCollection.Sort">
      <topicdata name="Sort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Sort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.EventDescriptorCollection.Sort" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])" />
        <element api="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EventDescriptorCollection.#ctor" />
      <parameters>
        <parameter name="events">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.EventDescriptorCollection.#ctor" />
      <parameters>
        <parameter name="events">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="readOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.EventDescriptorCollection.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sorter">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])">
      <topicdata group="api" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.EventDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.EventHandlerList">
      <topicdata group="api" />
      <apidata name="EventHandlerList" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EventHandlerList.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.EventHandlerList.#ctor" />
        <element api="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)" />
        <element api="M:System.ComponentModel.EventHandlerList.Dispose" />
        <element api="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.EventHandlerList.Item(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.EventHandlerList">
      <topicdata name="EventHandlerList" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.EventHandlerList" />
      <apidata name="EventHandlerList" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EventHandlerList.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)" />
        <element api="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)" />
        <element api="M:System.ComponentModel.EventHandlerList.Dispose" />
        <element api="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.EventHandlerList">
      <topicdata name="EventHandlerList" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.EventHandlerList" />
      <apidata name="EventHandlerList" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.EventHandlerList.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.EventHandlerList.Item(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventHandlerList.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <topicdata group="api" />
      <apidata name="AddHandlers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listToAddFrom">
          <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventHandlerList.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ExpandableObjectConverter">
      <topicdata group="api" />
      <apidata name="ExpandableObjectConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ExpandableObjectConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Xps.Serialization.ColorTypeConverter" ref="true" />
          <type api="T:System.Windows.Xps.Serialization.FontTypeConverter" ref="true" />
          <type api="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" ref="true" />
          <type api="T:System.Drawing.IconConverter" ref="true" />
          <type api="T:System.Windows.Forms.ColumnHeaderConverter" ref="true" />
          <type api="T:System.Windows.Forms.ListViewItemConverter" ref="true" />
          <type api="T:System.Drawing.Printing.MarginsConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ExpandableObjectConverter.#ctor" />
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ExpandableObjectConverter">
      <topicdata name="ExpandableObjectConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ExpandableObjectConverter" />
      <apidata name="ExpandableObjectConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ExpandableObjectConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ExpandableObjectConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ExpandableObjectConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExpandableObjectConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ExpandableObjectConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ExtenderProvidedPropertyAttribute">
      <topicdata group="api" />
      <apidata name="ExtenderProvidedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ExtenderProperty" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.Provider" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ReceiverType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ExtenderProvidedPropertyAttribute">
      <topicdata name="ExtenderProvidedPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />
      <apidata name="ExtenderProvidedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ExtenderProvidedPropertyAttribute">
      <topicdata name="ExtenderProvidedPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />
      <apidata name="ExtenderProvidedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ExtenderProperty" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.Provider" />
        <element api="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ReceiverType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ExtenderProperty">
      <topicdata group="api" />
      <apidata name="ExtenderProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtenderProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Provider" />
      <returns>
        <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ReceiverType">
      <topicdata group="api" />
      <apidata name="ReceiverType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReceiverType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.GroupDescription">
      <topicdata group="api" />
      <apidata name="GroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.GroupDescription.PropertyChanged" />
        <element api="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.ComponentModel.GroupDescription.#ctor" />
        <element api="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.GroupDescription.CustomSort" />
        <element api="P:System.ComponentModel.GroupDescription.GroupNames" />
        <element api="P:System.ComponentModel.GroupDescription.SortDescriptions" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.GroupDescription">
      <topicdata name="GroupDescription" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.GroupDescription" />
      <apidata name="GroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.GroupDescription">
      <topicdata name="GroupDescription" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.GroupDescription" />
      <apidata name="GroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.GroupDescription.CustomSort" />
        <element api="P:System.ComponentModel.GroupDescription.GroupNames" />
        <element api="P:System.ComponentModel.GroupDescription.SortDescriptions" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.GroupDescription">
      <topicdata name="GroupDescription" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.GroupDescription" />
      <apidata name="GroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.GroupDescription.PropertyChanged" />
        <element api="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GroupDescription.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.GroupDescription.CustomSort">
      <topicdata group="api" />
      <apidata name="CustomSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomSort" />
      <setter name="set_CustomSort" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GroupNameFromItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="level">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.GroupDescription.GroupNames">
      <topicdata group="api" />
      <apidata name="GroupNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="NamesMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="groupName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="itemName">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.GuidConverter">
      <topicdata group="api" />
      <apidata name="GuidConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.GuidConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.GuidConverter.#ctor" />
        <element api="Overload:System.ComponentModel.GuidConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.GuidConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.GuidConverter">
      <topicdata name="GuidConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.GuidConverter" />
      <apidata name="GuidConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.GuidConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.GuidConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.GuidConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.GuidConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.GuidConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.GuidConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.GuidConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.GuidConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GuidConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.GuidConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.GuidConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.GuidConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.GuidConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.GuidConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.HandledEventArgs">
      <topicdata group="api" />
      <apidata name="HandledEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.HandledEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.HwndDpiChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.HandledEventArgs.#ctor">
          <element api="M:System.ComponentModel.HandledEventArgs.#ctor" />
          <element api="M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.HandledEventArgs.Handled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.HandledEventArgs">
      <topicdata name="HandledEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.HandledEventArgs" />
      <apidata name="HandledEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.HandledEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.HandledEventArgs">
      <topicdata name="HandledEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.HandledEventArgs" />
      <apidata name="HandledEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.HandledEventArgs.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.HandledEventArgs.Handled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.HandledEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.HandledEventArgs.#ctor" />
        <element api="M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.HandledEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.HandledEventArgs.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.HandledEventArgs.#ctor" />
      <parameters>
        <parameter name="defaultHandledValue">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.HandledEventArgs.Handled">
      <topicdata group="api" />
      <apidata name="Handled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Handled" />
      <setter name="set_Handled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.HandledEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.HandledEventHandler">
      <topicdata group="api" />
      <apidata name="HandledEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.HandledEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.IBindingList">
      <topicdata group="api" />
      <apidata name="IBindingList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        <type api="T:System.Data.DataView" ref="true" />
        <type api="T:System.Data.DataViewManager" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.IBindingList.ListChanged" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.AddNew" />
        <element api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveSort" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.ComponentModel.IBindingList.AllowEdit" />
        <element api="P:System.ComponentModel.IBindingList.AllowNew" />
        <element api="P:System.ComponentModel.IBindingList.AllowRemove" />
        <element api="P:System.ComponentModel.IBindingList.IsSorted" />
        <element api="P:System.ComponentModel.IBindingList.SortDirection" />
        <element api="P:System.ComponentModel.IBindingList.SortProperty" />
        <element api="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSearching" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSorting" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IBindingList">
      <topicdata name="IBindingList" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IBindingList" />
      <apidata name="IBindingList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.AddNew" />
        <element api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveSort" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IBindingList">
      <topicdata name="IBindingList" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IBindingList" />
      <apidata name="IBindingList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.ComponentModel.IBindingList.AllowEdit" />
        <element api="P:System.ComponentModel.IBindingList.AllowNew" />
        <element api="P:System.ComponentModel.IBindingList.AllowRemove" />
        <element api="P:System.ComponentModel.IBindingList.IsSorted" />
        <element api="P:System.ComponentModel.IBindingList.SortDirection" />
        <element api="P:System.ComponentModel.IBindingList.SortProperty" />
        <element api="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSearching" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSorting" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.IBindingList">
      <topicdata name="IBindingList" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.IBindingList" />
      <apidata name="IBindingList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.IBindingList.ListChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.AllowEdit">
      <topicdata group="api" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.AllowNew">
      <topicdata group="api" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.AllowRemove">
      <topicdata group="api" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.IsSorted">
      <topicdata group="api" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.IBindingList.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingList.RemoveSort">
      <topicdata group="api" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.SortDirection">
      <topicdata group="api" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.SortProperty">
      <topicdata group="api" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
      <topicdata group="api" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.SupportsSearching">
      <topicdata group="api" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingList.SupportsSorting">
      <topicdata group="api" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IBindingListView">
      <topicdata group="api" />
      <apidata name="IBindingListView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.DataView" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.IBindingList.ListChanged" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.AddNew" />
        <element api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveSort" />
        <element api="Overload:System.ComponentModel.IBindingListView.ApplySort">
          <element api="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
          <element api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        </element>
        <element api="M:System.ComponentModel.IBindingListView.RemoveFilter" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.ComponentModel.IBindingList.AllowEdit" />
        <element api="P:System.ComponentModel.IBindingList.AllowNew" />
        <element api="P:System.ComponentModel.IBindingList.AllowRemove" />
        <element api="P:System.ComponentModel.IBindingList.IsSorted" />
        <element api="P:System.ComponentModel.IBindingList.SortDirection" />
        <element api="P:System.ComponentModel.IBindingList.SortProperty" />
        <element api="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSearching" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSorting" />
        <element api="P:System.ComponentModel.IBindingListView.Filter" />
        <element api="P:System.ComponentModel.IBindingListView.SortDescriptions" />
        <element api="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />
        <element api="P:System.ComponentModel.IBindingListView.SupportsFiltering" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IBindingListView">
      <topicdata name="IBindingListView" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IBindingListView" />
      <apidata name="IBindingListView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.AddNew" />
        <element api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.IBindingList.RemoveSort" />
        <element api="Overload:System.ComponentModel.IBindingListView.ApplySort">
          <element api="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
          <element api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        </element>
        <element api="M:System.ComponentModel.IBindingListView.RemoveFilter" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IBindingListView">
      <topicdata name="IBindingListView" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IBindingListView" />
      <apidata name="IBindingListView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.ComponentModel.IBindingList.AllowEdit" />
        <element api="P:System.ComponentModel.IBindingList.AllowNew" />
        <element api="P:System.ComponentModel.IBindingList.AllowRemove" />
        <element api="P:System.ComponentModel.IBindingList.IsSorted" />
        <element api="P:System.ComponentModel.IBindingList.SortDirection" />
        <element api="P:System.ComponentModel.IBindingList.SortProperty" />
        <element api="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSearching" />
        <element api="P:System.ComponentModel.IBindingList.SupportsSorting" />
        <element api="P:System.ComponentModel.IBindingListView.Filter" />
        <element api="P:System.ComponentModel.IBindingListView.SortDescriptions" />
        <element api="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />
        <element api="P:System.ComponentModel.IBindingListView.SupportsFiltering" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.IBindingListView">
      <topicdata name="IBindingListView" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.IBindingListView" />
      <apidata name="IBindingListView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.IBindingList.ListChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.IBindingListView.ApplySort">
      <topicdata name="ApplySort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
        <element api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <topicdata group="api" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IBindingListView.ApplySort" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sorts">
          <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingListView.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IBindingListView.RemoveFilter">
      <topicdata group="api" />
      <apidata name="RemoveFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingListView.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting">
      <topicdata group="api" />
      <apidata name="SupportsAdvancedSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsAdvancedSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IBindingListView.SupportsFiltering">
      <topicdata group="api" />
      <apidata name="SupportsFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ICancelAddNew">
      <topicdata group="api" />
      <apidata name="ICancelAddNew" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <element api="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ICancelAddNew">
      <topicdata name="ICancelAddNew" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ICancelAddNew" />
      <apidata name="ICancelAddNew" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <element api="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICancelAddNew" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)">
      <topicdata group="api" />
      <apidata name="CancelNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="itemIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICancelAddNew" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)">
      <topicdata group="api" />
      <apidata name="EndNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="itemIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICancelAddNew" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IChangeTracking">
      <topicdata group="api" />
      <apidata name="IChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IChangeTracking.AcceptChanges" />
        <element api="P:System.ComponentModel.IChangeTracking.IsChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IChangeTracking">
      <topicdata name="IChangeTracking" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IChangeTracking" />
      <apidata name="IChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IChangeTracking.AcceptChanges" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IChangeTracking" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IChangeTracking">
      <topicdata name="IChangeTracking" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IChangeTracking" />
      <apidata name="IChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IChangeTracking.IsChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IChangeTracking" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IChangeTracking.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IChangeTracking.IsChanged">
      <topicdata group="api" />
      <apidata name="IsChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ICollectionView">
      <topicdata group="api" />
      <apidata name="ICollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
        <element api="E:System.ComponentModel.ICollectionView.CurrentChanged" />
        <element api="E:System.ComponentModel.ICollectionView.CurrentChanging" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.ComponentModel.ICollectionView.Contains(System.Object)" />
        <element api="M:System.ComponentModel.ICollectionView.DeferRefresh" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToLast" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToNext" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious" />
        <element api="M:System.ComponentModel.ICollectionView.Refresh" />
        <element api="P:System.ComponentModel.ICollectionView.CanFilter" />
        <element api="P:System.ComponentModel.ICollectionView.CanGroup" />
        <element api="P:System.ComponentModel.ICollectionView.CanSort" />
        <element api="P:System.ComponentModel.ICollectionView.Culture" />
        <element api="P:System.ComponentModel.ICollectionView.CurrentItem" />
        <element api="P:System.ComponentModel.ICollectionView.CurrentPosition" />
        <element api="P:System.ComponentModel.ICollectionView.Filter" />
        <element api="P:System.ComponentModel.ICollectionView.GroupDescriptions" />
        <element api="P:System.ComponentModel.ICollectionView.Groups" />
        <element api="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast" />
        <element api="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.ComponentModel.ICollectionView.IsEmpty" />
        <element api="P:System.ComponentModel.ICollectionView.SortDescriptions" />
        <element api="P:System.ComponentModel.ICollectionView.SourceCollection" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ICollectionView">
      <topicdata name="ICollectionView" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ICollectionView" />
      <apidata name="ICollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.ComponentModel.ICollectionView.Contains(System.Object)" />
        <element api="M:System.ComponentModel.ICollectionView.DeferRefresh" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToLast" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToNext" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious" />
        <element api="M:System.ComponentModel.ICollectionView.Refresh" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ICollectionView">
      <topicdata name="ICollectionView" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ICollectionView" />
      <apidata name="ICollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ICollectionView.CanFilter" />
        <element api="P:System.ComponentModel.ICollectionView.CanGroup" />
        <element api="P:System.ComponentModel.ICollectionView.CanSort" />
        <element api="P:System.ComponentModel.ICollectionView.Culture" />
        <element api="P:System.ComponentModel.ICollectionView.CurrentItem" />
        <element api="P:System.ComponentModel.ICollectionView.CurrentPosition" />
        <element api="P:System.ComponentModel.ICollectionView.Filter" />
        <element api="P:System.ComponentModel.ICollectionView.GroupDescriptions" />
        <element api="P:System.ComponentModel.ICollectionView.Groups" />
        <element api="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast" />
        <element api="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.ComponentModel.ICollectionView.IsEmpty" />
        <element api="P:System.ComponentModel.ICollectionView.SortDescriptions" />
        <element api="P:System.ComponentModel.ICollectionView.SourceCollection" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.ICollectionView">
      <topicdata name="ICollectionView" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.ICollectionView" />
      <apidata name="ICollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
        <element api="E:System.ComponentModel.ICollectionView.CurrentChanged" />
        <element api="E:System.ComponentModel.ICollectionView.CurrentChanging" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.CanFilter">
      <topicdata group="api" />
      <apidata name="CanFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.CanGroup">
      <topicdata group="api" />
      <apidata name="CanGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanGroup" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.CanSort">
      <topicdata group="api" />
      <apidata name="CanSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Culture" />
      <setter name="set_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <topicdata group="api" />
      <apidata name="CurrentChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentChanged" />
      <remover name="remove_CurrentChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <topicdata group="api" />
      <apidata name="CurrentChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentChanging" />
      <remover name="remove_CurrentChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.CurrentChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.CurrentItem">
      <topicdata group="api" />
      <apidata name="CurrentItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <topicdata group="api" />
      <apidata name="CurrentPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentPosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <topicdata group="api" />
      <apidata name="DeferRefresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.Predicate`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <topicdata group="api" />
      <apidata name="GroupDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_GroupDescriptions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.Groups">
      <topicdata group="api" />
      <apidata name="Groups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Groups" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <topicdata group="api" />
      <apidata name="IsCurrentAfterLast" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsCurrentAfterLast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <topicdata group="api" />
      <apidata name="IsCurrentBeforeFirst" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsCurrentBeforeFirst" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <topicdata group="api" />
      <apidata name="MoveCurrentTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <topicdata group="api" />
      <apidata name="MoveCurrentToFirst" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <topicdata group="api" />
      <apidata name="MoveCurrentToLast" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <topicdata group="api" />
      <apidata name="MoveCurrentToNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionView.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionView.SourceCollection">
      <topicdata group="api" />
      <apidata name="SourceCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SourceCollection" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ICollectionViewFactory">
      <topicdata group="api" />
      <apidata name="ICollectionViewFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ICollectionViewFactory.CreateView" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ICollectionViewFactory">
      <topicdata name="ICollectionViewFactory" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ICollectionViewFactory" />
      <apidata name="ICollectionViewFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ICollectionViewFactory.CreateView" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewFactory" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <topicdata group="api" />
      <apidata name="CreateView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ICollectionViewLiveShaping">
      <topicdata group="api" />
      <apidata name="ICollectionViewLiveShaping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
        <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ICollectionViewLiveShaping">
      <topicdata name="ICollectionViewLiveShaping" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ICollectionViewLiveShaping" />
      <apidata name="ICollectionViewLiveShaping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties" />
        <element api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <topicdata group="api" />
      <apidata name="CanChangeLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <topicdata group="api" />
      <apidata name="CanChangeLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveGrouping" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <topicdata group="api" />
      <apidata name="CanChangeLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <topicdata group="api" />
      <apidata name="IsLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveFiltering" />
      <setter name="set_IsLiveFiltering" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <topicdata group="api" />
      <apidata name="IsLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveGrouping" />
      <setter name="set_IsLiveGrouping" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <topicdata group="api" />
      <apidata name="IsLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveSorting" />
      <setter name="set_IsLiveSorting" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <topicdata group="api" />
      <apidata name="LiveFilteringProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LiveFilteringProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <topicdata group="api" />
      <apidata name="LiveGroupingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LiveGroupingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <topicdata group="api" />
      <apidata name="LiveSortingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LiveSortingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IComNativeDescriptorHandler">
      <topicdata group="api" />
      <apidata name="IComNativeDescriptorHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetEvents">
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)" />
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])" />
        <element api="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue">
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)" />
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This interface has been deprecated. Add a TypeDescriptionProvider to handle type TypeDescriptor.ComObjectType instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.IComNativeDescriptorHandler">
      <topicdata name="IComNativeDescriptorHandler" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IComNativeDescriptorHandler" />
      <apidata name="IComNativeDescriptorHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetEvents">
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)" />
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])" />
        <element api="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue">
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)" />
          <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue">
      <topicdata name="GetPropertyValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)" />
        <element api="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseEditorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetEvents" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetEvents" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dispid">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="success">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="success">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IComponent">
      <topicdata group="api" />
      <apidata name="IComponent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Component" ref="true" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        <type api="T:System.Web.HttpApplication" ref="true" />
        <type api="T:System.Windows.Forms.Control" ref="true" />
        <type api="T:System.Windows.Forms.DataGridViewColumn" ref="true" />
        <type api="T:System.Windows.Forms.IBindableComponent" ref="true" />
        <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
        <type api="T:System.Windows.Forms.ToolStrip" ref="true" />
        <type api="T:System.Windows.Forms.ToolStripItem" ref="true" />
        <type api="T:System.Windows.Forms.ToolStripOverflow" ref="true" />
        <type api="T:System.Windows.Forms.ToolStripPanel" ref="true" />
        <type api="T:System.Windows.Forms.ToolStripPanelRow" ref="true" />
        <type api="T:System.Web.UI.Control" ref="true" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.ComponentModel.IComponent.Disposed" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.IComponent.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.IComponent">
      <topicdata name="IComponent" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IComponent" />
      <apidata name="IComponent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComponent" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IComponent">
      <topicdata name="IComponent" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IComponent" />
      <apidata name="IComponent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IComponent.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComponent" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.IComponent">
      <topicdata name="IComponent" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.IComponent" />
      <apidata name="IComponent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.IComponent.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComponent" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.IComponent.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IComponent.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IContainer">
      <topicdata group="api" />
      <apidata name="IContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Container" ref="true" />
        <type api="T:System.ComponentModel.INestedContainer" ref="true" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.ComponentModel.IContainer.Add">
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.IContainer.Components" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.IContainer">
      <topicdata name="IContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IContainer" />
      <apidata name="IContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.IContainer.Add">
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IContainer">
      <topicdata name="IContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IContainer" />
      <apidata name="IContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IContainer.Components" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.IContainer.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IContainer.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.IContainer.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IContainer.Components">
      <topicdata group="api" />
      <apidata name="Components" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Components" />
      <returns>
        <type api="T:System.ComponentModel.ComponentCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ICustomTypeDescriptor">
      <topicdata group="api" />
      <apidata name="ICustomTypeDescriptor" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
        <type api="T:System.Activities.Statements.Interop" ref="true" />
        <type api="T:System.Data.DataRowView" ref="true" />
        <type api="T:System.Data.Common.DbConnectionStringBuilder" ref="true" />
        <type api="T:System.Data.Common.DbDataRecord" ref="true" />
        <type api="T:System.Windows.Forms.AxHost" ref="true" />
        <type api="T:System.Web.UI.WebControls.SubMenuStyle" ref="true" />
        <type api="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ICustomTypeDescriptor">
      <topicdata name="ICustomTypeDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ICustomTypeDescriptor" />
      <apidata name="ICustomTypeDescriptor" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
          <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <element api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <topicdata group="api" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IDataErrorInfo">
      <topicdata group="api" />
      <apidata name="IDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.DataRowView" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.ComponentModel.IDataErrorInfo.Error" />
        <element api="P:System.ComponentModel.IDataErrorInfo.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IDataErrorInfo">
      <topicdata name="IDataErrorInfo" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IDataErrorInfo" />
      <apidata name="IDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IDataErrorInfo.Error" />
        <element api="P:System.ComponentModel.IDataErrorInfo.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IDataErrorInfo" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IDataErrorInfo.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IEditableCollectionView">
      <topicdata group="api" />
      <apidata name="IEditableCollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
        <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IEditableCollectionView.AddNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IEditableCollectionView">
      <topicdata name="IEditableCollectionView" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IEditableCollectionView" />
      <apidata name="IEditableCollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IEditableCollectionView.AddNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IEditableCollectionView">
      <topicdata name="IEditableCollectionView" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IEditableCollectionView" />
      <apidata name="IEditableCollectionView" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <topicdata group="api" />
      <apidata name="CanAddNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanAddNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <topicdata group="api" />
      <apidata name="CanCancelEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanCancelEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <topicdata group="api" />
      <apidata name="CancelNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <topicdata group="api" />
      <apidata name="CommitEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <topicdata group="api" />
      <apidata name="CommitNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <topicdata group="api" />
      <apidata name="CurrentAddItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentAddItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <topicdata group="api" />
      <apidata name="CurrentEditItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentEditItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <topicdata group="api" />
      <apidata name="EditItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <topicdata group="api" />
      <apidata name="IsAddingNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAddingNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <topicdata group="api" />
      <apidata name="IsEditingItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEditingItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <topicdata group="api" />
      <apidata name="NewItemPlaceholderPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NewItemPlaceholderPosition" />
      <setter name="set_NewItemPlaceholderPosition" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <topicdata group="api" />
      <apidata name="IEditableCollectionViewAddNewItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
        <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IEditableCollectionView.AddNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <topicdata name="IEditableCollectionViewAddNewItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
      <apidata name="IEditableCollectionViewAddNewItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IEditableCollectionView.AddNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
        <element api="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
        <element api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
        <element api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <topicdata name="IEditableCollectionViewAddNewItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
      <apidata name="IEditableCollectionViewAddNewItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
        <element api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
        <element api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <topicdata group="api" />
      <apidata name="CanAddNewItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanAddNewItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IEditableObject">
      <topicdata group="api" />
      <apidata name="IEditableObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.DataRowView" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IEditableObject.BeginEdit" />
        <element api="M:System.ComponentModel.IEditableObject.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableObject.EndEdit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IEditableObject">
      <topicdata name="IEditableObject" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IEditableObject" />
      <apidata name="IEditableObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IEditableObject.BeginEdit" />
        <element api="M:System.ComponentModel.IEditableObject.CancelEdit" />
        <element api="M:System.ComponentModel.IEditableObject.EndEdit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableObject" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableObject.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableObject.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IEditableObject.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IExtenderProvider">
      <topicdata group="api" />
      <apidata name="IExtenderProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" ref="true" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
        <type api="T:System.Windows.Forms.ErrorProvider" ref="true" />
        <type api="T:System.Windows.Forms.FlowLayoutPanel" ref="true" />
        <type api="T:System.Windows.Forms.HelpProvider" ref="true" />
        <type api="T:System.Windows.Forms.TableLayoutPanel" ref="true" />
        <type api="T:System.Windows.Forms.ToolTip" ref="true" />
        <type api="T:System.Windows.Forms.Design.ComponentTray" ref="true" />
        <type api="T:System.Windows.Forms.Design.PropertyTab" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IExtenderProvider">
      <topicdata name="IExtenderProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IExtenderProvider" />
      <apidata name="IExtenderProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IExtenderProvider" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)">
      <topicdata group="api" />
      <apidata name="CanExtend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="extendee">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IIntellisenseBuilder">
      <topicdata group="api" />
      <apidata name="IIntellisenseBuilder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IIntellisenseBuilder.Show(System.String,System.String,System.String@)" />
        <element api="P:System.ComponentModel.IIntellisenseBuilder.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IIntellisenseBuilder">
      <topicdata name="IIntellisenseBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IIntellisenseBuilder" />
      <apidata name="IIntellisenseBuilder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IIntellisenseBuilder.Show(System.String,System.String,System.String@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IIntellisenseBuilder" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IIntellisenseBuilder">
      <topicdata name="IIntellisenseBuilder" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IIntellisenseBuilder" />
      <apidata name="IIntellisenseBuilder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IIntellisenseBuilder.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IIntellisenseBuilder" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IIntellisenseBuilder.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IIntellisenseBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IIntellisenseBuilder.Show(System.String,System.String,System.String@)">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="language">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newValue">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IIntellisenseBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IItemProperties">
      <topicdata group="api" />
      <apidata name="IItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
        <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.ComponentModel.IItemProperties.ItemProperties" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IItemProperties">
      <topicdata name="IItemProperties" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IItemProperties" />
      <apidata name="IItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IItemProperties.ItemProperties" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IItemProperties" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IItemProperties.ItemProperties">
      <topicdata group="api" />
      <apidata name="ItemProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ItemProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IItemProperties" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IListSource">
      <topicdata group="api" />
      <apidata name="IListSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.DataSet" ref="true" />
        <type api="T:System.Data.DataTable" ref="true" />
        <type api="T:System.Data.Objects.ObjectQuery`1" ref="true" />
        <type api="T:System.Data.Objects.ObjectResult" ref="true" />
        <type api="T:System.Data.Objects.ObjectQuery" ref="true" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
        <type api="T:System.Data.Linq.Table`1" ref="true" />
        <type api="T:System.Data.Linq.EntitySet`1" ref="true" />
        <type api="T:System.Web.UI.DataSourceControl" ref="true" />
        <type api="T:System.Web.UI.WebControls.SiteMapDataSource" ref="true" />
        <type api="T:System.Web.UI.WebControls.XmlDataSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.IListSource.GetList" />
        <element api="P:System.ComponentModel.IListSource.ContainsListCollection" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.IListSource">
      <topicdata name="IListSource" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IListSource" />
      <apidata name="IListSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IListSource.GetList" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IListSource" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IListSource">
      <topicdata name="IListSource" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IListSource" />
      <apidata name="IListSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IListSource.ContainsListCollection" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IListSource" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IListSource.ContainsListCollection">
      <topicdata group="api" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IListSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IListSource.GetList">
      <topicdata group="api" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IListSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ImmutableObjectAttribute">
      <topicdata group="api" />
      <apidata name="ImmutableObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.Default" />
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.No" />
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ImmutableObjectAttribute.Immutable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ImmutableObjectAttribute">
      <topicdata name="ImmutableObjectAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ImmutableObjectAttribute" />
      <apidata name="ImmutableObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ImmutableObjectAttribute">
      <topicdata name="ImmutableObjectAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ImmutableObjectAttribute" />
      <apidata name="ImmutableObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ImmutableObjectAttribute.Immutable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ImmutableObjectAttribute">
      <topicdata name="ImmutableObjectAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ImmutableObjectAttribute" />
      <apidata name="ImmutableObjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.Default" />
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.No" />
        <element api="F:System.ComponentModel.ImmutableObjectAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="immutable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <topicdata group="api" />
      <apidata name="Immutable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Immutable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ImmutableObjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.INestedContainer">
      <topicdata group="api" />
      <apidata name="INestedContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.ComponentModel.INestedContainer.Add">
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.IContainer.Components" />
        <element api="P:System.ComponentModel.INestedContainer.Owner" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.INestedContainer">
      <topicdata name="INestedContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.INestedContainer" />
      <apidata name="INestedContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.INestedContainer.Add">
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.INestedContainer">
      <topicdata name="INestedContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.INestedContainer" />
      <apidata name="INestedContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IContainer.Components" />
        <element api="P:System.ComponentModel.INestedContainer.Owner" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedContainer" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.INestedContainer.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.INestedSite">
      <topicdata group="api" />
      <apidata name="INestedSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.ISite" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
        <element api="P:System.ComponentModel.INestedSite.FullName" />
        <element api="P:System.ComponentModel.ISite.Component" />
        <element api="P:System.ComponentModel.ISite.Container" />
        <element api="P:System.ComponentModel.ISite.DesignMode" />
        <element api="P:System.ComponentModel.ISite.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.INestedSite">
      <topicdata name="INestedSite" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.INestedSite" />
      <apidata name="INestedSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedSite" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.INestedSite">
      <topicdata name="INestedSite" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.INestedSite" />
      <apidata name="INestedSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.INestedSite.FullName" />
        <element api="P:System.ComponentModel.ISite.Component" />
        <element api="P:System.ComponentModel.ISite.Container" />
        <element api="P:System.ComponentModel.ISite.DesignMode" />
        <element api="P:System.ComponentModel.ISite.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedSite" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.INestedSite.FullName">
      <topicdata group="api" />
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INestedSite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InheritanceAttribute">
      <topicdata group="api" />
      <apidata name="InheritanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.InheritanceAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.InheritanceAttribute.Default" />
        <element api="F:System.ComponentModel.InheritanceAttribute.Inherited" />
        <element api="F:System.ComponentModel.InheritanceAttribute.InheritedReadOnly" />
        <element api="F:System.ComponentModel.InheritanceAttribute.NotInherited" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.InheritanceAttribute.#ctor">
          <element api="M:System.ComponentModel.InheritanceAttribute.#ctor" />
          <element api="M:System.ComponentModel.InheritanceAttribute.#ctor(System.ComponentModel.InheritanceLevel)" />
        </element>
        <element api="M:System.ComponentModel.InheritanceAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.InheritanceAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.InheritanceAttribute.IsDefaultAttribute" />
        <element api="M:System.ComponentModel.InheritanceAttribute.ToString" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InheritanceAttribute.InheritanceLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InheritanceAttribute">
      <topicdata name="InheritanceAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InheritanceAttribute" />
      <apidata name="InheritanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.InheritanceAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.InheritanceAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.InheritanceAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.InheritanceAttribute.IsDefaultAttribute" />
        <element api="M:System.ComponentModel.InheritanceAttribute.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InheritanceAttribute">
      <topicdata name="InheritanceAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InheritanceAttribute" />
      <apidata name="InheritanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.InheritanceAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InheritanceAttribute.InheritanceLevel" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.InheritanceAttribute">
      <topicdata name="InheritanceAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.InheritanceAttribute" />
      <apidata name="InheritanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.InheritanceAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.InheritanceAttribute.Default" />
        <element api="F:System.ComponentModel.InheritanceAttribute.Inherited" />
        <element api="F:System.ComponentModel.InheritanceAttribute.InheritedReadOnly" />
        <element api="F:System.ComponentModel.InheritanceAttribute.NotInherited" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.InheritanceAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.InheritanceAttribute.#ctor" />
        <element api="M:System.ComponentModel.InheritanceAttribute.#ctor(System.ComponentModel.InheritanceLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InheritanceAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.#ctor(System.ComponentModel.InheritanceLevel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InheritanceAttribute.#ctor" />
      <parameters>
        <parameter name="inheritanceLevel">
          <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.InheritanceAttribute.InheritanceLevel">
      <topicdata group="api" />
      <apidata name="InheritanceLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InheritanceLevel" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceAttribute.Inherited">
      <topicdata group="api" />
      <apidata name="Inherited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceAttribute.InheritedReadOnly">
      <topicdata group="api" />
      <apidata name="InheritedReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceAttribute.NotInherited">
      <topicdata group="api" />
      <apidata name="NotInherited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InheritanceAttribute.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InheritanceLevel">
      <topicdata group="api" />
      <apidata name="InheritanceLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.InheritanceLevel.Inherited" />
        <element api="F:System.ComponentModel.InheritanceLevel.InheritedReadOnly" />
        <element api="F:System.ComponentModel.InheritanceLevel.NotInherited" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceLevel.Inherited">
      <topicdata group="api" notopic="" />
      <apidata name="Inherited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceLevel.InheritedReadOnly">
      <topicdata group="api" notopic="" />
      <apidata name="InheritedReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.InheritanceLevel.NotInherited">
      <topicdata group="api" notopic="" />
      <apidata name="NotInherited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InheritanceLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InitializationEventAttribute">
      <topicdata group="api" />
      <apidata name="InitializationEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InitializationEventAttribute.EventName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InitializationEventAttribute">
      <topicdata name="InitializationEventAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InitializationEventAttribute" />
      <apidata name="InitializationEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InitializationEventAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InitializationEventAttribute">
      <topicdata name="InitializationEventAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InitializationEventAttribute" />
      <apidata name="InitializationEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InitializationEventAttribute.EventName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InitializationEventAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InitializationEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <topicdata group="api" />
      <apidata name="EventName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InitializationEventAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.INotifyDataErrorInfo">
      <topicdata group="api" />
      <apidata name="INotifyDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
        <element api="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)" />
        <element api="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.INotifyDataErrorInfo">
      <topicdata name="INotifyDataErrorInfo" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.INotifyDataErrorInfo" />
      <apidata name="INotifyDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.INotifyDataErrorInfo">
      <topicdata name="INotifyDataErrorInfo" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.INotifyDataErrorInfo" />
      <apidata name="INotifyDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.INotifyDataErrorInfo">
      <topicdata name="INotifyDataErrorInfo" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.INotifyDataErrorInfo" />
      <apidata name="INotifyDataErrorInfo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
      <topicdata group="api" />
      <apidata name="ErrorsChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorsChanged" />
      <remover name="remove_ErrorsChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
      <topicdata group="api" />
      <apidata name="GetErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.INotifyPropertyChanged">
      <topicdata group="api" />
      <apidata name="INotifyPropertyChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true" />
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true" />
        <type api="T:System.Windows.FreezableCollection`1" ref="true" />
        <type api="T:System.Windows.Ink.DrawingAttributes" ref="true" />
        <type api="T:System.Windows.Ink.Stroke" ref="true" />
        <type api="T:System.Windows.Ink.StrokeCollection" ref="true" />
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        <type api="T:System.Windows.Controls.CalendarDateRange" ref="true" />
        <type api="T:System.Windows.Controls.GridViewColumn" ref="true" />
        <type api="T:System.Windows.Controls.GroupStyle" ref="true" />
        <type api="T:System.Windows.Annotations.AnnotationResource" ref="true" />
        <type api="T:System.Windows.Annotations.ContentLocatorBase" ref="true" />
        <type api="T:System.Windows.Annotations.ContentLocatorPart" ref="true" />
        <type api="T:System.Printing.PrintTicket" ref="true" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
        <type api="T:System.Activities.Presentation.Toolbox.ToolboxCategory" ref="true" />
        <type api="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" ref="true" />
        <type api="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" ref="true" />
        <type api="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" ref="true" />
        <type api="T:System.Activities.Presentation.PropertyEditing.PropertyValue" ref="true" />
        <type api="T:System.Activities.Presentation.View.TypePresenter" ref="true" />
        <type api="T:System.Activities.Presentation.Model.ModelItem" ref="true" />
        <type api="T:System.Dynamic.ExpandoObject" ref="true" />
        <type api="T:System.Data.DataRowView" ref="true" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
        <type api="T:System.Device.Location.GeoCoordinateWatcher" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.INotifyPropertyChanged">
      <topicdata name="INotifyPropertyChanged" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.INotifyPropertyChanged" />
      <apidata name="INotifyPropertyChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.INotifyPropertyChanging">
      <topicdata group="api" />
      <apidata name="INotifyPropertyChanging" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.INotifyPropertyChanging">
      <topicdata name="INotifyPropertyChanging" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.INotifyPropertyChanging" />
      <apidata name="INotifyPropertyChanging" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyPropertyChanging" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging">
      <topicdata group="api" />
      <apidata name="PropertyChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanging" />
      <remover name="remove_PropertyChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.INotifyPropertyChanging" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InstallerTypeAttribute">
      <topicdata group="api" />
      <apidata name="InstallerTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.InstallerTypeAttribute.#ctor">
          <element api="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.InstallerTypeAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.InstallerTypeAttribute.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InstallerTypeAttribute.InstallerType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InstallerTypeAttribute">
      <topicdata name="InstallerTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InstallerTypeAttribute" />
      <apidata name="InstallerTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.InstallerTypeAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.InstallerTypeAttribute.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InstallerTypeAttribute">
      <topicdata name="InstallerTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InstallerTypeAttribute" />
      <apidata name="InstallerTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.InstallerTypeAttribute.InstallerType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.InstallerTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InstallerTypeAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InstallerTypeAttribute.#ctor" />
      <parameters>
        <parameter name="installerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstallerTypeAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstallerTypeAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.InstallerTypeAttribute.InstallerType">
      <topicdata group="api" />
      <apidata name="InstallerType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_InstallerType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstallerTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InstanceCreationEditor">
      <topicdata group="api" />
      <apidata name="InstanceCreationEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.InstanceCreationEditor.#ctor" />
        <element api="M:System.ComponentModel.InstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.InstanceCreationEditor.Text" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InstanceCreationEditor">
      <topicdata name="InstanceCreationEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InstanceCreationEditor" />
      <apidata name="InstanceCreationEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.InstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstanceCreationEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InstanceCreationEditor">
      <topicdata name="InstanceCreationEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InstanceCreationEditor" />
      <apidata name="InstanceCreationEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.InstanceCreationEditor.Text" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstanceCreationEditor" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstanceCreationEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstanceCreationEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="instanceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstanceCreationEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.InstanceCreationEditor.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InstanceCreationEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Int16Converter">
      <topicdata group="api" />
      <apidata name="Int16Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int16Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Int16Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Int16Converter.#ctor" />
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int16Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Int16Converter">
      <topicdata name="Int16Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Int16Converter" />
      <apidata name="Int16Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int16Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Int16Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int16Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int16Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int16Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Int16Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int16Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Int32Converter">
      <topicdata group="api" />
      <apidata name="Int32Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int32Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" ref="true" />
          <type api="T:System.Windows.Forms.ImageIndexConverter" ref="true" />
          <type api="T:System.Web.UI.DataSourceCacheDurationConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Int32Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Int32Converter.#ctor" />
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int32Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Int32Converter">
      <topicdata name="Int32Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Int32Converter" />
      <apidata name="Int32Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int32Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Int32Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int32Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int32Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int32Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Int32Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int32Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Int64Converter">
      <topicdata group="api" />
      <apidata name="Int64Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int64Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Int64Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Int64Converter.#ctor" />
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int64Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Int64Converter">
      <topicdata name="Int64Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Int64Converter" />
      <apidata name="Int64Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Int64Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Int64Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.Int64Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Int64Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int64Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Int64Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Int64Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InvalidAsynchronousStateException">
      <topicdata group="api" />
      <apidata name="InvalidAsynchronousStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ArgumentException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
          <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
          <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ArgumentException.Message" />
        <element api="P:System.ArgumentException.ParamName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InvalidAsynchronousStateException">
      <topicdata name="InvalidAsynchronousStateException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InvalidAsynchronousStateException" />
      <apidata name="InvalidAsynchronousStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <elements>
        <element api="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InvalidAsynchronousStateException">
      <topicdata name="InvalidAsynchronousStateException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InvalidAsynchronousStateException" />
      <apidata name="InvalidAsynchronousStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <elements>
        <element api="P:System.ArgumentException.Message" />
        <element api="P:System.ArgumentException.ParamName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.InvalidAsynchronousStateException">
      <topicdata name="InvalidAsynchronousStateException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.InvalidAsynchronousStateException" />
      <apidata name="InvalidAsynchronousStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
        <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidAsynchronousStateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidAsynchronousStateException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.InvalidEnumArgumentException">
      <topicdata group="api" />
      <apidata name="InvalidEnumArgumentException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ArgumentException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor">
          <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
          <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ArgumentException.Message" />
        <element api="P:System.ArgumentException.ParamName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.InvalidEnumArgumentException">
      <topicdata name="InvalidEnumArgumentException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.InvalidEnumArgumentException" />
      <apidata name="InvalidEnumArgumentException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <elements>
        <element api="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.InvalidEnumArgumentException">
      <topicdata name="InvalidEnumArgumentException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.InvalidEnumArgumentException" />
      <apidata name="InvalidEnumArgumentException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <elements>
        <element api="P:System.ArgumentException.Message" />
        <element api="P:System.ArgumentException.ParamName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.InvalidEnumArgumentException">
      <topicdata name="InvalidEnumArgumentException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.InvalidEnumArgumentException" />
      <apidata name="InvalidEnumArgumentException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
        <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.InvalidEnumArgumentException.#ctor" />
      <parameters>
        <parameter name="argumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invalidValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="enumClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.InvalidEnumArgumentException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IRaiseItemChangedEvents">
      <topicdata group="api" />
      <apidata name="IRaiseItemChangedEvents" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.BindingList`1" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IRaiseItemChangedEvents">
      <topicdata name="IRaiseItemChangedEvents" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IRaiseItemChangedEvents" />
      <apidata name="IRaiseItemChangedEvents" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IRaiseItemChangedEvents" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents">
      <topicdata group="api" />
      <apidata name="RaisesItemChangedEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RaisesItemChangedEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IRaiseItemChangedEvents" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.IRevertibleChangeTracking">
      <topicdata group="api" />
      <apidata name="IRevertibleChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.IChangeTracking.AcceptChanges" />
        <element api="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges" />
        <element api="P:System.ComponentModel.IChangeTracking.IsChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.IRevertibleChangeTracking">
      <topicdata name="IRevertibleChangeTracking" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.IRevertibleChangeTracking" />
      <apidata name="IRevertibleChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.IChangeTracking.AcceptChanges" />
        <element api="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.IRevertibleChangeTracking">
      <topicdata name="IRevertibleChangeTracking" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.IRevertibleChangeTracking" />
      <apidata name="IRevertibleChangeTracking" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.IChangeTracking.IsChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ISite">
      <topicdata group="api" />
      <apidata name="ISite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.INestedSite" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
        <element api="P:System.ComponentModel.ISite.Component" />
        <element api="P:System.ComponentModel.ISite.Container" />
        <element api="P:System.ComponentModel.ISite.DesignMode" />
        <element api="P:System.ComponentModel.ISite.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ISite">
      <topicdata name="ISite" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ISite" />
      <apidata name="ISite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ISite">
      <topicdata name="ISite" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ISite" />
      <apidata name="ISite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ISite.Component" />
        <element api="P:System.ComponentModel.ISite.Container" />
        <element api="P:System.ComponentModel.ISite.DesignMode" />
        <element api="P:System.ComponentModel.ISite.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISite.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISite.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISite.DesignMode">
      <topicdata group="api" />
      <apidata name="DesignMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DesignMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISite.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ISupportInitialize">
      <topicdata group="api" />
      <apidata name="ISupportInitialize" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.IO.FileSystemWatcher" ref="true" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.Argument" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.Category" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.ContentType" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.DataSource" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.ItemType" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.Rule" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.RuleBag" ref="true" />
        <type api="T:Microsoft.Build.Framework.XamlTypes.ValueEditor" ref="true" />
        <type api="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" ref="true" />
        <type api="T:System.Windows.Media.GlyphRun" ref="true" />
        <type api="T:System.Windows.Media.GlyphTypeface" ref="true" />
        <type api="T:System.Windows.Condition" ref="true" />
        <type api="T:System.Windows.FrameworkContentElement" ref="true" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
        <type api="T:System.Windows.Setter" ref="true" />
        <type api="T:System.Windows.TemplateKey" ref="true" />
        <type api="T:System.Windows.Trigger" ref="true" />
        <type api="T:System.Windows.Media.Imaging.BitmapImage" ref="true" />
        <type api="T:System.Windows.Media.Imaging.ColorConvertedBitmap" ref="true" />
        <type api="T:System.Windows.Media.Imaging.CroppedBitmap" ref="true" />
        <type api="T:System.Windows.Media.Imaging.FormatConvertedBitmap" ref="true" />
        <type api="T:System.Windows.Media.Imaging.TransformedBitmap" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.Windows.Shell.JumpList" ref="true" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        <type api="T:System.Timers.Timer" ref="true" />
        <type api="T:System.Data.DataSet" ref="true" />
        <type api="T:System.Data.DataTable" ref="true" />
        <type api="T:System.Data.DataView" ref="true" />
        <type api="T:System.Windows.Forms.AxHost" ref="true" />
        <type api="T:System.Windows.Forms.BindingNavigator" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
        <type api="T:System.Windows.Forms.DataGrid" ref="true" />
        <type api="T:System.Windows.Forms.DataGridView" ref="true" />
        <type api="T:System.Windows.Forms.ErrorProvider" ref="true" />
        <type api="T:System.Windows.Forms.NumericUpDown" ref="true" />
        <type api="T:System.Windows.Forms.PictureBox" ref="true" />
        <type api="T:System.Windows.Forms.SplitContainer" ref="true" />
        <type api="T:System.Windows.Forms.StatusBarPanel" ref="true" />
        <type api="T:System.Windows.Forms.TrackBar" ref="true" />
        <type api="T:System.Windows.Forms.DataVisualization.Charting.Chart" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <element api="M:System.ComponentModel.ISupportInitialize.EndInit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ISupportInitialize">
      <topicdata name="ISupportInitialize" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ISupportInitialize" />
      <apidata name="ISupportInitialize" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <element api="M:System.ComponentModel.ISupportInitialize.EndInit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitialize" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ISupportInitialize.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ISupportInitializeNotification">
      <topicdata group="api" />
      <apidata name="ISupportInitializeNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.DataSet" ref="true" />
        <type api="T:System.Data.DataTable" ref="true" />
        <type api="T:System.Data.DataView" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.ComponentModel.ISupportInitializeNotification.Initialized" />
        <element api="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <element api="M:System.ComponentModel.ISupportInitialize.EndInit" />
        <element api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ISupportInitializeNotification">
      <topicdata name="ISupportInitializeNotification" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ISupportInitializeNotification" />
      <apidata name="ISupportInitializeNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <element api="M:System.ComponentModel.ISupportInitialize.EndInit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ISupportInitializeNotification">
      <topicdata name="ISupportInitializeNotification" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ISupportInitializeNotification" />
      <apidata name="ISupportInitializeNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.ISupportInitializeNotification">
      <topicdata name="ISupportInitializeNotification" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.ISupportInitializeNotification" />
      <apidata name="ISupportInitializeNotification" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.ISupportInitializeNotification.Initialized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ISynchronizeInvoke">
      <topicdata group="api" />
      <apidata name="ISynchronizeInvoke" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Forms.Control" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
        <element api="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
        <element api="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ISynchronizeInvoke">
      <topicdata name="ISynchronizeInvoke" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ISynchronizeInvoke" />
      <apidata name="ISynchronizeInvoke" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
        <element api="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ISynchronizeInvoke">
      <topicdata name="ISynchronizeInvoke" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ISynchronizeInvoke" />
      <apidata name="ISynchronizeInvoke" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <topicdata group="api" />
      <apidata name="InvokeRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InvokeRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ItemPropertyInfo">
      <topicdata group="api" />
      <apidata name="ItemPropertyInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ItemPropertyInfo.Descriptor" />
        <element api="P:System.ComponentModel.ItemPropertyInfo.Name" />
        <element api="P:System.ComponentModel.ItemPropertyInfo.PropertyType" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ItemPropertyInfo">
      <topicdata name="ItemPropertyInfo" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ItemPropertyInfo" />
      <apidata name="ItemPropertyInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ItemPropertyInfo">
      <topicdata name="ItemPropertyInfo" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ItemPropertyInfo" />
      <apidata name="ItemPropertyInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ItemPropertyInfo.Descriptor" />
        <element api="P:System.ComponentModel.ItemPropertyInfo.Name" />
        <element api="P:System.ComponentModel.ItemPropertyInfo.PropertyType" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="descriptor">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <topicdata group="api" />
      <apidata name="Descriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Descriptor" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ItemPropertyInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ITypeDescriptorContext">
      <topicdata group="api" />
      <apidata name="ITypeDescriptorContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
        <element api="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
        <element api="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <element api="P:System.ComponentModel.ITypeDescriptorContext.Instance" />
        <element api="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ITypeDescriptorContext">
      <topicdata name="ITypeDescriptorContext" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ITypeDescriptorContext" />
      <apidata name="ITypeDescriptorContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
        <element api="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ITypeDescriptorContext">
      <topicdata name="ITypeDescriptorContext" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ITypeDescriptorContext" />
      <apidata name="ITypeDescriptorContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <element api="P:System.ComponentModel.ITypeDescriptorContext.Instance" />
        <element api="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <topicdata group="api" />
      <apidata name="OnComponentChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <topicdata group="api" />
      <apidata name="OnComponentChanging" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <topicdata group="api" />
      <apidata name="PropertyDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyDescriptor" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ITypedList">
      <topicdata group="api" />
      <apidata name="ITypedList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.DataView" ref="true" />
        <type api="T:System.Data.DataViewManager" ref="true" />
        <type api="T:System.Windows.Forms.BindingSource" ref="true" />
        <type api="T:System.Web.UI.WebControls.PagedDataSource" ref="true" />
        <type api="T:System.Web.UI.WebControls.ListViewPagedDataSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.ITypedList">
      <topicdata name="ITypedList" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ITypedList" />
      <apidata name="ITypedList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypedList" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" />
      <apidata name="GetItemProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" />
      <apidata name="GetListName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.License">
      <topicdata group="api" />
      <apidata name="License" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.License.#ctor" />
        <element api="M:System.ComponentModel.License.Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.License.LicenseKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.License">
      <topicdata name="License" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.License" />
      <apidata name="License" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.License.Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.License" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.License">
      <topicdata name="License" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.License" />
      <apidata name="License" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.License.LicenseKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.License" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.License.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.License" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.License.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.License" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.License.LicenseKey">
      <topicdata group="api" />
      <apidata name="LicenseKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LicenseKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.License" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseContext">
      <topicdata group="api" />
      <apidata name="LicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.LicenseContext.#ctor" />
        <element api="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
        <element api="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.LicenseContext.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicenseContext">
      <topicdata name="LicenseContext" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicenseContext" />
      <apidata name="LicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseContext.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
        <element api="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LicenseContext">
      <topicdata name="LicenseContext" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LicenseContext" />
      <apidata name="LicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseContext.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.LicenseContext.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetSavedLicenseKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="resourceAssembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseContext.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="SetSavedLicenseKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseContext.UsageMode">
      <topicdata group="api" />
      <apidata name="UsageMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_UsageMode" />
      <returns>
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseException">
      <topicdata group="api" />
      <apidata name="LicenseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.ComponentModel.LicenseException.#ctor">
          <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)" />
          <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)" />
        </element>
        <element api="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.LicenseException.LicensedType" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicenseException">
      <topicdata name="LicenseException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicenseException" />
      <apidata name="LicenseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LicenseException">
      <topicdata name="LicenseException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LicenseException" />
      <apidata name="LicenseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.ComponentModel.LicenseException.LicensedType" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.LicenseException">
      <topicdata name="LicenseException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.LicenseException" />
      <apidata name="LicenseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LicenseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)" />
        <element api="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.LicenseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseException.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseException.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseException.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseException.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseException.LicensedType">
      <topicdata group="api" />
      <apidata name="LicensedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LicensedType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseManager">
      <topicdata group="api" />
      <apidata name="LicenseManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.LicenseManager.CreateWithContext">
          <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)" />
          <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])" />
        </element>
        <element api="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)" />
        <element api="Overload:System.ComponentModel.LicenseManager.IsValid">
          <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type)" />
          <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)" />
        </element>
        <element api="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />
        <element api="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)" />
        <element api="Overload:System.ComponentModel.LicenseManager.Validate">
          <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type)" />
          <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.LicenseManager.CurrentContext" />
        <element api="P:System.ComponentModel.LicenseManager.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalProcessMgmt">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicenseManager">
      <topicdata name="LicenseManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicenseManager" />
      <apidata name="LicenseManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.LicenseManager.CreateWithContext">
          <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)" />
          <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])" />
        </element>
        <element api="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)" />
        <element api="Overload:System.ComponentModel.LicenseManager.IsValid">
          <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type)" />
          <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)" />
        </element>
        <element api="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />
        <element api="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)" />
        <element api="Overload:System.ComponentModel.LicenseManager.Validate">
          <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type)" />
          <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LicenseManager">
      <topicdata name="LicenseManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LicenseManager" />
      <apidata name="LicenseManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.LicenseManager.CurrentContext" />
        <element api="P:System.ComponentModel.LicenseManager.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LicenseManager.CreateWithContext">
      <topicdata name="CreateWithContext" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateWithContext" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)" />
        <element api="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LicenseManager.IsValid">
      <topicdata name="IsValid" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type)" />
        <element api="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LicenseManager.Validate">
      <topicdata name="Validate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Validate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type)" />
        <element api="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)">
      <topicdata group="api" />
      <apidata name="CreateWithContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.CreateWithContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="creationContext">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateWithContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.CreateWithContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="creationContext">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseManager.CurrentContext">
      <topicdata group="api" />
      <apidata name="CurrentContext" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentContext" />
      <setter name="set_CurrentContext" />
      <returns>
        <type api="T:System.ComponentModel.LicenseContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)">
      <topicdata group="api" />
      <apidata name="IsLicensed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.IsValid(System.Type)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.IsValid" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.IsValid" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="license" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.License" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.LockContext(System.Object)">
      <topicdata group="api" />
      <apidata name="LockContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contextUser">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)">
      <topicdata group="api" />
      <apidata name="UnlockContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contextUser">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseManager.UsageMode">
      <topicdata group="api" />
      <apidata name="UsageMode" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsageMode" />
      <returns>
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.Validate(System.Type)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.Validate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.LicenseManager.Validate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.License" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseProvider">
      <topicdata group="api" />
      <apidata name="LicenseProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.LicFileLicenseProvider" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.LicenseProvider.#ctor" />
        <element api="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicenseProvider">
      <topicdata name="LicenseProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicenseProvider" />
      <apidata name="LicenseProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProvider" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetLicense" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="allowExceptions">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.License" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseProviderAttribute">
      <topicdata group="api" />
      <apidata name="LicenseProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.LicenseProviderAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.LicenseProviderAttribute.#ctor">
          <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
          <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider" />
        <element api="P:System.ComponentModel.LicenseProviderAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicenseProviderAttribute">
      <topicdata name="LicenseProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicenseProviderAttribute" />
      <apidata name="LicenseProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LicenseProviderAttribute">
      <topicdata name="LicenseProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LicenseProviderAttribute" />
      <apidata name="LicenseProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider" />
        <element api="P:System.ComponentModel.LicenseProviderAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.LicenseProviderAttribute">
      <topicdata name="LicenseProviderAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.LicenseProviderAttribute" />
      <apidata name="LicenseProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.LicenseProviderAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LicenseProviderAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor" />
        <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProviderAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LicenseProviderAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LicenseProviderAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider">
      <topicdata group="api" />
      <apidata name="LicenseProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LicenseProvider" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LicenseProviderAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicenseUsageMode">
      <topicdata group="api" />
      <apidata name="LicenseUsageMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.LicenseUsageMode.Runtime" />
        <element api="F:System.ComponentModel.LicenseUsageMode.Designtime" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LicenseUsageMode.Designtime">
      <topicdata group="api" notopic="" />
      <apidata name="Designtime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LicenseUsageMode.Runtime">
      <topicdata group="api" notopic="" />
      <apidata name="Runtime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LicFileLicenseProvider">
      <topicdata group="api" />
      <apidata name="LicFileLicenseProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.LicFileLicenseProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.LicenseProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.LicFileLicenseProvider.#ctor" />
        <element api="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)" />
        <element api="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LicFileLicenseProvider">
      <topicdata name="LicFileLicenseProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LicFileLicenseProvider" />
      <apidata name="LicFileLicenseProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.LicFileLicenseProvider.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)" />
        <element api="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicFileLicenseProvider" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicFileLicenseProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicFileLicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicFileLicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetLicense" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
          <type api="T:System.ComponentModel.LicenseProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="allowExceptions">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.License" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicFileLicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="IsKeyValid" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LicFileLicenseProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListBindableAttribute">
      <topicdata group="api" />
      <apidata name="ListBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ListBindableAttribute.Default" />
        <element api="F:System.ComponentModel.ListBindableAttribute.No" />
        <element api="F:System.ComponentModel.ListBindableAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ListBindableAttribute.#ctor">
          <element api="M:System.ComponentModel.ListBindableAttribute.#ctor(System.ComponentModel.BindableSupport)" />
          <element api="M:System.ComponentModel.ListBindableAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.ListBindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ListBindableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ListBindableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ListBindableAttribute.ListBindable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ListBindableAttribute">
      <topicdata name="ListBindableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ListBindableAttribute" />
      <apidata name="ListBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ListBindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ListBindableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ListBindableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ListBindableAttribute">
      <topicdata name="ListBindableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ListBindableAttribute" />
      <apidata name="ListBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ListBindableAttribute.ListBindable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ListBindableAttribute">
      <topicdata name="ListBindableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ListBindableAttribute" />
      <apidata name="ListBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ListBindableAttribute.Default" />
        <element api="F:System.ComponentModel.ListBindableAttribute.No" />
        <element api="F:System.ComponentModel.ListBindableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ListBindableAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ListBindableAttribute.#ctor(System.ComponentModel.BindableSupport)" />
        <element api="M:System.ComponentModel.ListBindableAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListBindableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListBindableAttribute.#ctor" />
      <parameters>
        <parameter name="listBindable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListBindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListBindableAttribute.#ctor" />
      <parameters>
        <parameter name="flags">
          <type api="T:System.ComponentModel.BindableSupport" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListBindableAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListBindableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListBindableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListBindableAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListBindableAttribute.ListBindable">
      <topicdata group="api" />
      <apidata name="ListBindable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ListBindable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListBindableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListBindableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.ListChangedEventArgs.#ctor">
          <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)" />
          <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)" />
          <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)" />
          <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.ListChangedType" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.NewIndex" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.OldIndex" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.PropertyDescriptor" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ListChangedEventArgs">
      <topicdata name="ListChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ListChangedEventArgs" />
      <apidata name="ListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ListChangedEventArgs">
      <topicdata name="ListChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ListChangedEventArgs" />
      <apidata name="ListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ListChangedEventArgs.ListChangedType" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.NewIndex" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.OldIndex" />
        <element api="P:System.ComponentModel.ListChangedEventArgs.PropertyDescriptor" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ListChangedEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)" />
        <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="listChangedType">
          <type api="T:System.ComponentModel.ListChangedType" ref="false" />
        </parameter>
        <parameter name="propDesc">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="listChangedType">
          <type api="T:System.ComponentModel.ListChangedType" ref="false" />
        </parameter>
        <parameter name="newIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="listChangedType">
          <type api="T:System.ComponentModel.ListChangedType" ref="false" />
        </parameter>
        <parameter name="newIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="propDesc">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="listChangedType">
          <type api="T:System.ComponentModel.ListChangedType" ref="false" />
        </parameter>
        <parameter name="newIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListChangedEventArgs.ListChangedType">
      <topicdata group="api" />
      <apidata name="ListChangedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ListChangedType" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListChangedEventArgs.NewIndex">
      <topicdata group="api" />
      <apidata name="NewIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListChangedEventArgs.OldIndex">
      <topicdata group="api" />
      <apidata name="OldIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListChangedEventArgs.PropertyDescriptor">
      <topicdata group="api" />
      <apidata name="PropertyDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyDescriptor" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListChangedEventHandler">
      <topicdata group="api" />
      <apidata name="ListChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.ListChangedType">
      <topicdata group="api" />
      <apidata name="ListChangedType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ListChangedType.Reset" />
        <element api="F:System.ComponentModel.ListChangedType.ItemAdded" />
        <element api="F:System.ComponentModel.ListChangedType.ItemDeleted" />
        <element api="F:System.ComponentModel.ListChangedType.ItemMoved" />
        <element api="F:System.ComponentModel.ListChangedType.ItemChanged" />
        <element api="F:System.ComponentModel.ListChangedType.PropertyDescriptorAdded" />
        <element api="F:System.ComponentModel.ListChangedType.PropertyDescriptorDeleted" />
        <element api="F:System.ComponentModel.ListChangedType.PropertyDescriptorChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.ItemAdded">
      <topicdata group="api" notopic="" />
      <apidata name="ItemAdded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.ItemChanged">
      <topicdata group="api" notopic="" />
      <apidata name="ItemChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.ItemDeleted">
      <topicdata group="api" notopic="" />
      <apidata name="ItemDeleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.ItemMoved">
      <topicdata group="api" notopic="" />
      <apidata name="ItemMoved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.PropertyDescriptorAdded">
      <topicdata group="api" notopic="" />
      <apidata name="PropertyDescriptorAdded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.PropertyDescriptorChanged">
      <topicdata group="api" notopic="" />
      <apidata name="PropertyDescriptorChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.PropertyDescriptorDeleted">
      <topicdata group="api" notopic="" />
      <apidata name="PropertyDescriptorDeleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListChangedType.Reset">
      <topicdata group="api" notopic="" />
      <apidata name="Reset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListChangedType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListSortDescription">
      <topicdata group="api" />
      <apidata name="ListSortDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ListSortDescription.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ListSortDescription.PropertyDescriptor" />
        <element api="P:System.ComponentModel.ListSortDescription.SortDirection" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ListSortDescription">
      <topicdata name="ListSortDescription" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ListSortDescription" />
      <apidata name="ListSortDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescription" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ListSortDescription">
      <topicdata name="ListSortDescription" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ListSortDescription" />
      <apidata name="ListSortDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ListSortDescription.PropertyDescriptor" />
        <element api="P:System.ComponentModel.ListSortDescription.SortDirection" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescription" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescription.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescription.PropertyDescriptor">
      <topicdata group="api" />
      <apidata name="PropertyDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyDescriptor" />
      <setter name="set_PropertyDescriptor" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescription.SortDirection">
      <topicdata group="api" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SortDirection" />
      <setter name="set_SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescription" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListSortDescriptionCollection">
      <topicdata group="api" />
      <apidata name="ListSortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.ListSortDescriptionCollection.#ctor">
          <element api="M:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
          <element api="M:System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])" />
        </element>
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.Count" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ListSortDescriptionCollection">
      <topicdata name="ListSortDescriptionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ListSortDescriptionCollection" />
      <apidata name="ListSortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ListSortDescriptionCollection">
      <topicdata name="ListSortDescriptionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ListSortDescriptionCollection" />
      <apidata name="ListSortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.Count" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ListSortDescriptionCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
        <element api="M:System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ListSortDescriptionCollection.#ctor" />
      <parameters>
        <parameter name="sorts">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.ListSortDescription" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ListSortDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ListSortDirection">
      <topicdata group="api" />
      <apidata name="ListSortDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ListSortDirection.Ascending" />
        <element api="F:System.ComponentModel.ListSortDirection.Descending" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListSortDirection.Ascending">
      <topicdata group="api" notopic="" />
      <apidata name="Ascending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ListSortDirection.Descending">
      <topicdata group="api" notopic="" />
      <apidata name="Descending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LocalizableAttribute">
      <topicdata group="api" />
      <apidata name="LocalizableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.LocalizableAttribute.Default" />
        <element api="F:System.ComponentModel.LocalizableAttribute.No" />
        <element api="F:System.ComponentModel.LocalizableAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LocalizableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.LocalizableAttribute.IsLocalizable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LocalizableAttribute">
      <topicdata name="LocalizableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LocalizableAttribute" />
      <apidata name="LocalizableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LocalizableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LocalizableAttribute">
      <topicdata name="LocalizableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LocalizableAttribute" />
      <apidata name="LocalizableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.LocalizableAttribute.IsLocalizable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.LocalizableAttribute">
      <topicdata name="LocalizableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.LocalizableAttribute" />
      <apidata name="LocalizableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.LocalizableAttribute.Default" />
        <element api="F:System.ComponentModel.LocalizableAttribute.No" />
        <element api="F:System.ComponentModel.LocalizableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isLocalizable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LocalizableAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <topicdata group="api" />
      <apidata name="IsLocalizable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLocalizable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LocalizableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LocalizableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LocalizableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <topicdata group="api" />
      <apidata name="LookupBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.LookupBindingPropertiesAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor">
          <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
          <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.DataSource" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.DisplayMember" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.LookupMember" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.ValueMember" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <topicdata name="LookupBindingPropertiesAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      <apidata name="LookupBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <topicdata name="LookupBindingPropertiesAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      <apidata name="LookupBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.DataSource" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.DisplayMember" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.LookupMember" />
        <element api="P:System.ComponentModel.LookupBindingPropertiesAttribute.ValueMember" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <topicdata name="LookupBindingPropertiesAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      <apidata name="LookupBindingPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.LookupBindingPropertiesAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
        <element api="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor" />
      <parameters>
        <parameter name="dataSource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayMember">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueMember">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lookupMember">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LookupBindingPropertiesAttribute.DataSource">
      <topicdata group="api" />
      <apidata name="DataSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataSource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.LookupBindingPropertiesAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LookupBindingPropertiesAttribute.DisplayMember">
      <topicdata group="api" />
      <apidata name="DisplayMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayMember" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LookupBindingPropertiesAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LookupBindingPropertiesAttribute.LookupMember">
      <topicdata group="api" />
      <apidata name="LookupMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LookupMember" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.LookupBindingPropertiesAttribute.ValueMember">
      <topicdata group="api" />
      <apidata name="ValueMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValueMember" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.LookupBindingPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MarshalByValueComponent">
      <topicdata group="api" />
      <apidata name="MarshalByValueComponent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MarshalByValueComponent.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.DataColumn" ref="true" />
          <type api="T:System.Data.DataSet" ref="true" />
          <type api="T:System.Data.DataTable" ref="true" />
          <type api="T:System.Data.DataView" ref="true" />
          <type api="T:System.Data.DataViewManager" ref="true" />
          <type api="T:System.Web.Services.WebService" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.#ctor" />
        <element api="Overload:System.ComponentModel.MarshalByValueComponent.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.MarshalByValueComponent">
      <topicdata name="MarshalByValueComponent" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.MarshalByValueComponent" />
      <apidata name="MarshalByValueComponent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MarshalByValueComponent.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.MarshalByValueComponent.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.MarshalByValueComponent">
      <topicdata name="MarshalByValueComponent" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.MarshalByValueComponent" />
      <apidata name="MarshalByValueComponent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MarshalByValueComponent.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.MarshalByValueComponent">
      <topicdata name="MarshalByValueComponent" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.MarshalByValueComponent" />
      <apidata name="MarshalByValueComponent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MarshalByValueComponent.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MarshalByValueComponent.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MarshalByValueComponent.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
      <topicdata group="api" />
      <apidata name="DesignMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DesignMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MarshalByValueComponent.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.MarshalByValueComponent.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.MarshalByValueComponent.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IComponent.Disposed">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MarshalByValueComponent.Events">
      <topicdata group="api" />
      <apidata name="Events" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Events" />
      <returns>
        <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MarshalByValueComponent.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.MarshalByValueComponent.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MaskedTextProvider">
      <topicdata group="api" />
      <apidata name="MaskedTextProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.#ctor">
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Add">
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Clear">
          <element api="M:System.ComponentModel.MaskedTextProvider.Clear" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.InsertAt">
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Remove">
          <element api="M:System.ComponentModel.MaskedTextProvider.Remove" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt">
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Replace">
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Set">
          <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.ToString">
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.VerifyString">
          <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <element api="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <element api="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <element api="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Length" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <element api="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <element api="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <element api="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <element api="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <element api="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.MaskedTextProvider">
      <topicdata name="MaskedTextProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.MaskedTextProvider" />
      <apidata name="MaskedTextProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Add">
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Clear">
          <element api="M:System.ComponentModel.MaskedTextProvider.Clear" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.InsertAt">
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Remove">
          <element api="M:System.ComponentModel.MaskedTextProvider.Remove" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt">
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Replace">
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="Overload:System.ComponentModel.MaskedTextProvider.Set">
          <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.ToString">
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <element api="Overload:System.ComponentModel.MaskedTextProvider.VerifyString">
          <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
          <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.MaskedTextProvider">
      <topicdata name="MaskedTextProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.MaskedTextProvider" />
      <apidata name="MaskedTextProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <element api="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <element api="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <element api="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
        <element api="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <element api="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Length" />
        <element api="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <element api="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <element api="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <element api="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <element api="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <element api="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <element api="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.Clear">
      <topicdata name="Clear" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Clear" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.Clear" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.InsertAt">
      <topicdata name="InsertAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.Remove" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.Replace">
      <topicdata name="Replace" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Replace" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MaskedTextProvider.VerifyString">
      <topicdata name="VerifyString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="VerifyString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
        <element api="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="restrictToAscii">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="passwordChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="allowPromptAsInput">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="restrictToAscii">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="allowPromptAsInput">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="promptChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="passwordChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="restrictToAscii">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
      <parameters>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="passwordChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="allowPromptAsInput">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput">
      <topicdata group="api" />
      <apidata name="AllowPromptAsInput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowPromptAsInput" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.AsciiOnly">
      <topicdata group="api" />
      <apidata name="AsciiOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AsciiOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount">
      <topicdata group="api" />
      <apidata name="AssignedEditPositionCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssignedEditPositionCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount">
      <topicdata group="api" />
      <apidata name="AvailableEditPositionCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AvailableEditPositionCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar">
      <topicdata group="api" />
      <apidata name="DefaultPasswordChar" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultPasswordChar" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.EditPositionCount">
      <topicdata group="api" />
      <apidata name="EditPositionCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EditPositionCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.EditPositions">
      <topicdata group="api" />
      <apidata name="EditPositions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EditPositions" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindAssignedEditPositionFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindAssignedEditPositionInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindEditPositionFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindEditPositionInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindNonEditPositionFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindNonEditPositionInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindUnassignedEditPositionFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindUnassignedEditPositionInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)">
      <topicdata group="api" />
      <apidata name="GetOperationResultFromHint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hint">
          <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals">
      <topicdata group="api" />
      <apidata name="IncludeLiterals" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeLiterals" />
      <setter name="set_IncludeLiterals" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.IncludePrompt">
      <topicdata group="api" />
      <apidata name="IncludePrompt" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludePrompt" />
      <setter name="set_IncludePrompt" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.InvalidIndex">
      <topicdata group="api" />
      <apidata name="InvalidIndex" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InvalidIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAvailablePosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsEditPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.IsPassword">
      <topicdata group="api" />
      <apidata name="IsPassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPassword" />
      <setter name="set_IsPassword" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)">
      <topicdata group="api" />
      <apidata name="IsValidInputChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)">
      <topicdata group="api" />
      <apidata name="IsValidMaskChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)">
      <topicdata group="api" />
      <apidata name="IsValidPasswordChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition">
      <topicdata group="api" />
      <apidata name="LastAssignedPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastAssignedPosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.Mask">
      <topicdata group="api" />
      <apidata name="Mask" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mask" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.MaskCompleted">
      <topicdata group="api" />
      <apidata name="MaskCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaskCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.MaskFull">
      <topicdata group="api" />
      <apidata name="MaskFull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaskFull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.PasswordChar">
      <topicdata group="api" />
      <apidata name="PasswordChar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordChar" />
      <setter name="set_PasswordChar" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.PromptChar">
      <topicdata group="api" />
      <apidata name="PromptChar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PromptChar" />
      <setter name="set_PromptChar" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Remove">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt">
      <topicdata group="api" />
      <apidata name="ResetOnPrompt" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResetOnPrompt" />
      <setter name="set_ResetOnPrompt" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace">
      <topicdata group="api" />
      <apidata name="ResetOnSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResetOnSpace" />
      <setter name="set_ResetOnSpace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Set(System.String)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MaskedTextProvider.SkipLiterals">
      <topicdata group="api" />
      <apidata name="SkipLiterals" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SkipLiterals" />
      <setter name="set_SkipLiterals" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToDisplayString">
      <topicdata group="api" />
      <apidata name="ToDisplayString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ignorePasswordChar">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="includePrompt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="includeLiterals">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ignorePasswordChar">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="includePrompt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="includeLiterals">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="includePrompt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="includeLiterals">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ignorePasswordChar">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="VerifyChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)">
      <topicdata group="api" />
      <apidata name="VerifyEscapeChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)">
      <topicdata group="api" />
      <apidata name="VerifyString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <topicdata group="api" />
      <apidata name="VerifyString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="testPosition" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="resultHint" out="true">
          <referenceTo>
            <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MaskedTextResultHint">
      <topicdata group="api" />
      <apidata name="MaskedTextResultHint" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.MaskedTextResultHint.Unknown" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.CharacterEscaped" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.NoEffect" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.SideEffect" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.Success" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.DigitExpected" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.LetterExpected" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.SignedDigitExpected" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.InvalidInput" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.NonEditPosition" />
        <element api="F:System.ComponentModel.MaskedTextResultHint.PositionOutOfRange" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected">
      <topicdata group="api" notopic="" />
      <apidata name="AlphanumericCharacterExpected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected">
      <topicdata group="api" notopic="" />
      <apidata name="AsciiCharacterExpected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.CharacterEscaped">
      <topicdata group="api" notopic="" />
      <apidata name="CharacterEscaped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.DigitExpected">
      <topicdata group="api" notopic="" />
      <apidata name="DigitExpected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.InvalidInput">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidInput" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-51</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.LetterExpected">
      <topicdata group="api" notopic="" />
      <apidata name="LetterExpected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.NoEffect">
      <topicdata group="api" notopic="" />
      <apidata name="NoEffect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.NonEditPosition">
      <topicdata group="api" notopic="" />
      <apidata name="NonEditPosition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-54</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.PositionOutOfRange">
      <topicdata group="api" notopic="" />
      <apidata name="PositionOutOfRange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-55</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="PromptCharNotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-52</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.SideEffect">
      <topicdata group="api" notopic="" />
      <apidata name="SideEffect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.SignedDigitExpected">
      <topicdata group="api" notopic="" />
      <apidata name="SignedDigitExpected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition">
      <topicdata group="api" notopic="" />
      <apidata name="UnavailableEditPosition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>-53</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MaskedTextResultHint.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MaskedTextResultHint" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MemberDescriptor">
      <topicdata group="api" />
      <apidata name="MemberDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.MemberDescriptor.#ctor">
          <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
          <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)" />
          <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.MemberDescriptor.FindMethod">
          <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)" />
          <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MemberDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.MemberDescriptor">
      <topicdata name="MemberDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.MemberDescriptor" />
      <apidata name="MemberDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.MemberDescriptor.FindMethod">
          <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)" />
          <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MemberDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.MemberDescriptor">
      <topicdata name="MemberDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.MemberDescriptor" />
      <apidata name="MemberDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MemberDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)" />
        <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
        <element api="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MemberDescriptor.FindMethod">
      <topicdata name="FindMethod" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindMethod" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)" />
        <element api="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.MemberDescriptor.#ctor" />
      <parameters>
        <parameter name="descr">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.MemberDescriptor.#ctor" />
      <parameters>
        <parameter name="oldMemberDescriptor">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="newAttributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.MemberDescriptor.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.MemberDescriptor.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.AttributeArray">
      <topicdata group="api" />
      <apidata name="AttributeArray" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeArray" />
      <setter name="set_AttributeArray" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Attribute" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection">
      <topicdata group="api" />
      <apidata name="CreateAttributeCollection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly">
      <topicdata group="api" />
      <apidata name="DesignTimeOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DesignTimeOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name="FillAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributeList">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)">
      <topicdata group="api" />
      <apidata name="FindMethod" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.ComponentModel.MemberDescriptor.FindMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindMethod" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.ComponentModel.MemberDescriptor.FindMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="publicOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetInvocationTarget" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetInvokee" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated. Use GetInvocationTarget instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)">
      <topicdata group="api" />
      <apidata name="GetSite" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.IsBrowsable">
      <topicdata group="api" />
      <apidata name="IsBrowsable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsBrowsable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MemberDescriptor.NameHashCode">
      <topicdata group="api" />
      <apidata name="NameHashCode" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_NameHashCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MergablePropertyAttribute">
      <topicdata group="api" />
      <apidata name="MergablePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.MergablePropertyAttribute.Default" />
        <element api="F:System.ComponentModel.MergablePropertyAttribute.No" />
        <element api="F:System.ComponentModel.MergablePropertyAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.MergablePropertyAttribute">
      <topicdata name="MergablePropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.MergablePropertyAttribute" />
      <apidata name="MergablePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.MergablePropertyAttribute">
      <topicdata name="MergablePropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.MergablePropertyAttribute" />
      <apidata name="MergablePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.MergablePropertyAttribute">
      <topicdata name="MergablePropertyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.MergablePropertyAttribute" />
      <apidata name="MergablePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.MergablePropertyAttribute.Default" />
        <element api="F:System.ComponentModel.MergablePropertyAttribute.No" />
        <element api="F:System.ComponentModel.MergablePropertyAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="allowMerge">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <topicdata group="api" />
      <apidata name="AllowMerge" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowMerge" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MergablePropertyAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MergablePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.MultilineStringConverter">
      <topicdata group="api" />
      <apidata name="MultilineStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MultilineStringConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.MultilineStringConverter.#ctor" />
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.MultilineStringConverter">
      <topicdata name="MultilineStringConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.MultilineStringConverter" />
      <apidata name="MultilineStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.MultilineStringConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.MultilineStringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MultilineStringConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MultilineStringConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MultilineStringConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MultilineStringConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MultilineStringConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.NestedContainer">
      <topicdata group="api" />
      <apidata name="NestedContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Container" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INestedContainer" ref="true" />
        <type api="T:System.ComponentModel.IContainer" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.ComponentModel.NestedContainer.Add">
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Container.Finalize" />
        <element api="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
        <element api="Overload:System.ComponentModel.NestedContainer.Dispose">
          <element api="M:System.ComponentModel.Container.Dispose" />
          <element api="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Container.Components" />
        <element api="P:System.ComponentModel.NestedContainer.Owner" />
        <element api="P:System.ComponentModel.NestedContainer.OwnerName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.NestedContainer">
      <topicdata name="NestedContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.NestedContainer" />
      <apidata name="NestedContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.NestedContainer.Add">
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Container.Finalize" />
        <element api="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
        <element api="Overload:System.ComponentModel.NestedContainer.Dispose">
          <element api="M:System.ComponentModel.Container.Dispose" />
          <element api="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.NestedContainer">
      <topicdata name="NestedContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.NestedContainer" />
      <apidata name="NestedContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Container.Components" />
        <element api="P:System.ComponentModel.NestedContainer.Owner" />
        <element api="P:System.ComponentModel.NestedContainer.OwnerName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NestedContainer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Container.Dispose" />
        <element api="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSite" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <type api="T:System.ComponentModel.Container" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.NestedContainer.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Container" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NestedContainer.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Container.GetService(System.Type)">
          <type api="T:System.ComponentModel.Container" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="service">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NestedContainer.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.INestedContainer.Owner">
          <type api="T:System.ComponentModel.INestedContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NestedContainer.OwnerName">
      <topicdata group="api" />
      <apidata name="OwnerName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_OwnerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NestedContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.NewItemPlaceholderPosition">
      <topicdata group="api" />
      <apidata name="NewItemPlaceholderPosition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.NewItemPlaceholderPosition.None" />
        <element api="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning" />
        <element api="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <topicdata group="api" notopic="" />
      <apidata name="AtBeginning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <topicdata group="api" notopic="" />
      <apidata name="AtEnd" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <topicdata group="api" />
      <apidata name="NotifyParentPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.Default" />
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.No" />
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.NotifyParentPropertyAttribute">
      <topicdata name="NotifyParentPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      <apidata name="NotifyParentPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.NotifyParentPropertyAttribute">
      <topicdata name="NotifyParentPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      <apidata name="NotifyParentPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.NotifyParentPropertyAttribute">
      <topicdata name="NotifyParentPropertyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      <apidata name="NotifyParentPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.Default" />
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.No" />
        <element api="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="notifyParent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <topicdata group="api" />
      <apidata name="NotifyParent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NotifyParent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NotifyParentPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.NullableConverter">
      <topicdata group="api" />
      <apidata name="NullableConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.NullableBoolConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.NullableConverter.#ctor(System.Type)" />
        <element api="Overload:System.ComponentModel.NullableConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.NullableConverter.NullableType" />
        <element api="P:System.ComponentModel.NullableConverter.UnderlyingType" />
        <element api="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.NullableConverter">
      <topicdata name="NullableConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.NullableConverter" />
      <apidata name="NullableConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.NullableConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.NullableConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.NullableConverter">
      <topicdata name="NullableConverter" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.NullableConverter" />
      <apidata name="NullableConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.NullableConverter.NullableType" />
        <element api="P:System.ComponentModel.NullableConverter.UnderlyingType" />
        <element api="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.CreateInstance">
      <topicdata name="CreateInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetCreateInstanceSupported">
      <topicdata name="GetCreateInstanceSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
        <element api="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.NullableConverter.IsValid">
      <topicdata name="IsValid" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
        <element api="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.CreateInstance" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="propertyValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetCreateInstanceSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.NullableConverter.IsValid" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NullableConverter.NullableType">
      <topicdata group="api" />
      <apidata name="NullableType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NullableType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NullableConverter.UnderlyingType">
      <topicdata group="api" />
      <apidata name="UnderlyingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnderlyingType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter">
      <topicdata group="api" />
      <apidata name="UnderlyingTypeConverter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnderlyingTypeConverter" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.NullableConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <topicdata group="api" />
      <apidata name="ParenthesizePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
          <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
          <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <topicdata name="ParenthesizePropertyNameAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      <apidata name="ParenthesizePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <topicdata name="ParenthesizePropertyNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      <apidata name="ParenthesizePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <topicdata name="ParenthesizePropertyNameAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      <apidata name="ParenthesizePropertyNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
        <element api="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor" />
      <parameters>
        <parameter name="needParenthesis">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <topicdata group="api" />
      <apidata name="NeedParenthesis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NeedParenthesis" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ParenthesizePropertyNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PasswordPropertyTextAttribute">
      <topicdata group="api" />
      <apidata name="PasswordPropertyTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.Default" />
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.No" />
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.PasswordPropertyTextAttribute.#ctor">
          <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
          <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PasswordPropertyTextAttribute.Password" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PasswordPropertyTextAttribute">
      <topicdata name="PasswordPropertyTextAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      <apidata name="PasswordPropertyTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PasswordPropertyTextAttribute">
      <topicdata name="PasswordPropertyTextAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      <apidata name="PasswordPropertyTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PasswordPropertyTextAttribute.Password" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.PasswordPropertyTextAttribute">
      <topicdata name="PasswordPropertyTextAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      <apidata name="PasswordPropertyTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.Default" />
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.No" />
        <element api="F:System.ComponentModel.PasswordPropertyTextAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PasswordPropertyTextAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
        <element api="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PasswordPropertyTextAttribute.#ctor" />
      <parameters>
        <parameter name="password">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PasswordPropertyTextAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PasswordPropertyTextAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PasswordPropertyTextAttribute.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Password" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PasswordPropertyTextAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PasswordPropertyTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ProgressChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs" ref="true" />
          <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
          <type api="T:System.Net.UploadProgressChangedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.DeploymentProgressChangedEventArgs" ref="true" />
          <type api="T:System.Deployment.Application.DownloadProgressChangedEventArgs" ref="true" />
          <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
          <type api="T:System.ServiceModel.Discovery.FindProgressChangedEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ProgressChangedEventArgs">
      <topicdata name="ProgressChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ProgressChangedEventArgs" />
      <apidata name="ProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ProgressChangedEventArgs">
      <topicdata name="ProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ProgressChangedEventArgs" />
      <apidata name="ProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="progressPercentage">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <topicdata group="api" />
      <apidata name="ProgressPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProgressPercentage" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <topicdata group="api" />
      <apidata name="UserState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ProgressChangedEventHandler">
      <topicdata group="api" />
      <apidata name="ProgressChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.PropertyChangedEventArgs">
      <topicdata group="api" />
      <apidata name="PropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.PropertyChangedEventArgs.#ctor(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyChangedEventArgs">
      <topicdata name="PropertyChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyChangedEventArgs" />
      <apidata name="PropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyChangedEventArgs">
      <topicdata name="PropertyChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyChangedEventArgs" />
      <apidata name="PropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventArgs.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyChangedEventHandler">
      <topicdata group="api" />
      <apidata name="PropertyChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.PropertyChangedEventManager">
      <topicdata group="api" />
      <apidata name="PropertyChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyChangedEventManager">
      <topicdata name="PropertyChangedEventManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyChangedEventManager" />
      <apidata name="PropertyChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyChangedEventManager">
      <topicdata name="PropertyChangedEventManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyChangedEventManager" />
      <apidata name="PropertyChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <topicdata group="api" />
      <apidata name="AddListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Purge" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="purgeAll">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyChangingEventArgs">
      <topicdata group="api" />
      <apidata name="PropertyChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyChangingEventArgs">
      <topicdata name="PropertyChangingEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyChangingEventArgs" />
      <apidata name="PropertyChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyChangingEventArgs">
      <topicdata name="PropertyChangingEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyChangingEventArgs" />
      <apidata name="PropertyChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyChangingEventHandler">
      <topicdata group="api" />
      <apidata name="PropertyChangingEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.PropertyDescriptor">
      <topicdata group="api" />
      <apidata name="PropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
            <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          </type>
          <type api="T:System.ComponentModel.DependencyPropertyDescriptor" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="Overload:System.ComponentModel.PropertyDescriptor.#ctor">
          <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
          <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
        <element api="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.PropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyDescriptor">
      <topicdata name="PropertyDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyDescriptor" />
      <apidata name="PropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyDescriptor">
      <topicdata name="PropertyDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyDescriptor" />
      <apidata name="PropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
        <element api="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.PropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
        <element api="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties">
      <topicdata name="GetChildProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.PropertyDescriptor.#ctor" />
      <parameters>
        <parameter name="descr">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.PropertyDescriptor.#ctor" />
      <parameters>
        <parameter name="descr">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="attrs">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.PropertyDescriptor.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attrs">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <topicdata group="api" />
      <apidata name="AddValueChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="CanResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.ComponentType">
      <topicdata group="api" />
      <apidata name="ComponentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ComponentType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Converter" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name="FillAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="attributeList">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
      <topicdata group="api" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
      <topicdata group="api" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetChildProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="filter">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MemberDescriptor.GetHashCode">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetInvocationTarget" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
      <topicdata group="api" />
      <apidata name="GetTypeFromName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
      <topicdata group="api" />
      <apidata name="GetValueChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.EventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
      <topicdata group="api" />
      <apidata name="IsLocalizable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsLocalizable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <topicdata group="api" />
      <apidata name="RemoveValueChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
      <topicdata group="api" />
      <apidata name="SerializationVisibility" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SerializationVisibility" />
      <returns>
        <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
      <topicdata group="api" />
      <apidata name="SupportsChangeEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsChangeEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyDescriptorCollection">
      <topicdata group="api" />
      <apidata name="PropertyDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.IDictionary" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.#ctor">
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort">
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort">
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.Count" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.Item">
          <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyDescriptorCollection">
      <topicdata name="PropertyDescriptorCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyDescriptorCollection" />
      <apidata name="PropertyDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort">
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort">
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])" />
          <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyDescriptorCollection">
      <topicdata name="PropertyDescriptorCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyDescriptorCollection" />
      <apidata name="PropertyDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.Count" />
        <element api="Overload:System.ComponentModel.PropertyDescriptorCollection.Item">
          <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.PropertyDescriptorCollection">
      <topicdata name="PropertyDescriptorCollection" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.PropertyDescriptorCollection" />
      <apidata name="PropertyDescriptorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptorCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort">
      <topicdata name="InternalSort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptorCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort">
      <topicdata name="Sort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Sort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])" />
        <element api="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.#ctor" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.#ctor" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="readOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyDescriptorCollection.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sorter">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])">
      <topicdata group="api" />
      <apidata name="InternalSort" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <topicdata group="api" eiiName="IDictionary.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear">
      <topicdata group="api" eiiName="IDictionary.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator">
      <topicdata group="api" eiiName="IDictionary.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize">
      <topicdata group="api" eiiName="IDictionary.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly">
      <topicdata group="api" eiiName="IDictionary.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IDictionary.Item" />
      <setter name="set_System.Collections.IDictionary.Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys">
      <topicdata group="api" eiiName="IDictionary.Keys" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values">
      <topicdata group="api" eiiName="IDictionary.Values" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyFilterAttribute">
      <topicdata group="api" />
      <apidata name="PropertyFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.PropertyFilterAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PropertyFilterAttribute.Filter" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyFilterAttribute">
      <topicdata name="PropertyFilterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyFilterAttribute" />
      <apidata name="PropertyFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyFilterAttribute">
      <topicdata name="PropertyFilterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyFilterAttribute" />
      <apidata name="PropertyFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PropertyFilterAttribute.Filter" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.PropertyFilterAttribute">
      <topicdata name="PropertyFilterAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.PropertyFilterAttribute" />
      <apidata name="PropertyFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.PropertyFilterAttribute.Default" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filter" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Match(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyFilterOptions">
      <topicdata group="api" />
      <apidata name="PropertyFilterOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.PropertyFilterOptions.None" />
        <element api="F:System.ComponentModel.PropertyFilterOptions.Invalid" />
        <element api="F:System.ComponentModel.PropertyFilterOptions.SetValues" />
        <element api="F:System.ComponentModel.PropertyFilterOptions.UnsetValues" />
        <element api="F:System.ComponentModel.PropertyFilterOptions.Valid" />
        <element api="F:System.ComponentModel.PropertyFilterOptions.All" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <topicdata group="api" notopic="" />
      <apidata name="Invalid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <topicdata group="api" notopic="" />
      <apidata name="SetValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <topicdata group="api" notopic="" />
      <apidata name="UnsetValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <topicdata group="api" notopic="" />
      <apidata name="Valid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyFilterOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyTabAttribute">
      <topicdata group="api" />
      <apidata name="PropertyTabAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.PropertyTabAttribute.#ctor">
          <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)" />
        </element>
        <element api="Overload:System.ComponentModel.PropertyTabAttribute.Equals">
          <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)" />
        </element>
        <element api="M:System.ComponentModel.PropertyTabAttribute.GetHashCode" />
        <element api="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays">
          <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabClasses" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabScopes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.PropertyTabAttribute">
      <topicdata name="PropertyTabAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.PropertyTabAttribute" />
      <apidata name="PropertyTabAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.PropertyTabAttribute.Equals">
          <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)" />
        </element>
        <element api="M:System.ComponentModel.PropertyTabAttribute.GetHashCode" />
        <element api="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays">
          <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])" />
          <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.PropertyTabAttribute">
      <topicdata name="PropertyTabAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.PropertyTabAttribute" />
      <apidata name="PropertyTabAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabClasses" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />
        <element api="P:System.ComponentModel.PropertyTabAttribute.TabScopes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyTabAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyTabAttribute.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays">
      <topicdata name="InitializeArrays" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InitializeArrays" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])" />
        <element api="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <parameters>
        <parameter name="tabClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <parameters>
        <parameter name="tabClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tabScope">
          <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <parameters>
        <parameter name="tabClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.PropertyTabAttribute.#ctor" />
      <parameters>
        <parameter name="tabClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="tabScope">
          <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyTabAttribute.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.PropertyTabAttribute.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])">
      <topicdata group="api" />
      <apidata name="InitializeArrays" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tabClassNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="tabScopes">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])">
      <topicdata group="api" />
      <apidata name="InitializeArrays" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tabClasses">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="tabScopes">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyTabAttribute.TabClasses">
      <topicdata group="api" />
      <apidata name="TabClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TabClasses" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyTabAttribute.TabClassNames">
      <topicdata group="api" />
      <apidata name="TabClassNames" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TabClassNames" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.PropertyTabAttribute.TabScopes">
      <topicdata group="api" />
      <apidata name="TabScopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TabScopes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.PropertyTabScope">
      <topicdata group="api" />
      <apidata name="PropertyTabScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.PropertyTabScope.Static" />
        <element api="F:System.ComponentModel.PropertyTabScope.Global" />
        <element api="F:System.ComponentModel.PropertyTabScope.Document" />
        <element api="F:System.ComponentModel.PropertyTabScope.Component" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyTabScope.Component">
      <topicdata group="api" notopic="" />
      <apidata name="Component" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyTabScope.Document">
      <topicdata group="api" notopic="" />
      <apidata name="Document" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyTabScope.Global">
      <topicdata group="api" notopic="" />
      <apidata name="Global" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.PropertyTabScope.Static">
      <topicdata group="api" notopic="" />
      <apidata name="Static" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.PropertyTabScope" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ProvidePropertyAttribute">
      <topicdata group="api" />
      <apidata name="ProvidePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ProvidePropertyAttribute.#ctor">
          <element api="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName" />
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName" />
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ProvidePropertyAttribute">
      <topicdata name="ProvidePropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ProvidePropertyAttribute" />
      <apidata name="ProvidePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ProvidePropertyAttribute">
      <topicdata name="ProvidePropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ProvidePropertyAttribute" />
      <apidata name="ProvidePropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName" />
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName" />
        <element api="P:System.ComponentModel.ProvidePropertyAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ProvidePropertyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ProvidePropertyAttribute.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receiverTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ProvidePropertyAttribute.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receiverType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName">
      <topicdata group="api" />
      <apidata name="ReceiverTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReceiverTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ProvidePropertyAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ProvidePropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ReadOnlyAttribute">
      <topicdata group="api" />
      <apidata name="ReadOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ReadOnlyAttribute.Default" />
        <element api="F:System.ComponentModel.ReadOnlyAttribute.No" />
        <element api="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ReadOnlyAttribute">
      <topicdata name="ReadOnlyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ReadOnlyAttribute" />
      <apidata name="ReadOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ReadOnlyAttribute">
      <topicdata name="ReadOnlyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ReadOnlyAttribute" />
      <apidata name="ReadOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ReadOnlyAttribute">
      <topicdata name="ReadOnlyAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ReadOnlyAttribute" />
      <apidata name="ReadOnlyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ReadOnlyAttribute.Default" />
        <element api="F:System.ComponentModel.ReadOnlyAttribute.No" />
        <element api="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isReadOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ReadOnlyAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReadOnlyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <topicdata group="api" />
      <apidata name="RecommendedAsConfigurableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default" />
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No" />
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use System.ComponentModel.SettingsBindableAttribute instead to work with the new settings model.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <topicdata name="RecommendedAsConfigurableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      <apidata name="RecommendedAsConfigurableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <topicdata name="RecommendedAsConfigurableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      <apidata name="RecommendedAsConfigurableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <topicdata name="RecommendedAsConfigurableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      <apidata name="RecommendedAsConfigurableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default" />
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No" />
        <element api="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="recommendedAsConfigurable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable">
      <topicdata group="api" />
      <apidata name="RecommendedAsConfigurable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecommendedAsConfigurable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RecommendedAsConfigurableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ReferenceConverter">
      <topicdata group="api" />
      <apidata name="ReferenceConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.ComponentConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)" />
        <element api="Overload:System.ComponentModel.ReferenceConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="Overload:System.ComponentModel.ReferenceConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ReferenceConverter">
      <topicdata name="ReferenceConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ReferenceConverter" />
      <apidata name="ReferenceConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.ReferenceConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="Overload:System.ComponentModel.ReferenceConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.ReferenceConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="IsValueAllowed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RefreshEventArgs">
      <topicdata group="api" />
      <apidata name="RefreshEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.RefreshEventArgs.#ctor">
          <element api="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)" />
          <element api="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.RefreshEventArgs.ComponentChanged" />
        <element api="P:System.ComponentModel.RefreshEventArgs.TypeChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.RefreshEventArgs">
      <topicdata name="RefreshEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.RefreshEventArgs" />
      <apidata name="RefreshEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.RefreshEventArgs">
      <topicdata name="RefreshEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.RefreshEventArgs" />
      <apidata name="RefreshEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.RefreshEventArgs.ComponentChanged" />
        <element api="P:System.ComponentModel.RefreshEventArgs.TypeChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.RefreshEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)" />
        <element api="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.RefreshEventArgs.#ctor" />
      <parameters>
        <parameter name="componentChanged">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.RefreshEventArgs.#ctor" />
      <parameters>
        <parameter name="typeChanged">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RefreshEventArgs.ComponentChanged">
      <topicdata group="api" />
      <apidata name="ComponentChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComponentChanged" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RefreshEventArgs.TypeChanged">
      <topicdata group="api" />
      <apidata name="TypeChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeChanged" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RefreshEventHandler">
      <topicdata group="api" />
      <apidata name="RefreshEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.RefreshEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.RefreshProperties">
      <topicdata group="api" />
      <apidata name="RefreshProperties" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.RefreshProperties.None" />
        <element api="F:System.ComponentModel.RefreshProperties.All" />
        <element api="F:System.ComponentModel.RefreshProperties.Repaint" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshProperties.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshProperties.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshProperties.Repaint">
      <topicdata group="api" notopic="" />
      <apidata name="Repaint" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RefreshPropertiesAttribute">
      <topicdata group="api" />
      <apidata name="RefreshPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.All" />
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.Default" />
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.RefreshPropertiesAttribute">
      <topicdata name="RefreshPropertiesAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.RefreshPropertiesAttribute" />
      <apidata name="RefreshPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.RefreshPropertiesAttribute">
      <topicdata name="RefreshPropertiesAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.RefreshPropertiesAttribute" />
      <apidata name="RefreshPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.RefreshPropertiesAttribute">
      <topicdata name="RefreshPropertiesAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.RefreshPropertiesAttribute" />
      <apidata name="RefreshPropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.All" />
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.Default" />
        <element api="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="refresh">
          <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <topicdata group="api" />
      <apidata name="RefreshProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RefreshProperties" />
      <returns>
        <type api="T:System.ComponentModel.RefreshProperties" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <topicdata group="api" />
      <apidata name="Repaint" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RefreshPropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RunInstallerAttribute">
      <topicdata group="api" />
      <apidata name="RunInstallerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.RunInstallerAttribute.Default" />
        <element api="F:System.ComponentModel.RunInstallerAttribute.No" />
        <element api="F:System.ComponentModel.RunInstallerAttribute.Yes" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RunInstallerAttribute.RunInstaller" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.RunInstallerAttribute">
      <topicdata name="RunInstallerAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.RunInstallerAttribute" />
      <apidata name="RunInstallerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.RunInstallerAttribute">
      <topicdata name="RunInstallerAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.RunInstallerAttribute" />
      <apidata name="RunInstallerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.RunInstallerAttribute.RunInstaller" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.RunInstallerAttribute">
      <topicdata name="RunInstallerAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.RunInstallerAttribute" />
      <apidata name="RunInstallerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.RunInstallerAttribute.Default" />
        <element api="F:System.ComponentModel.RunInstallerAttribute.No" />
        <element api="F:System.ComponentModel.RunInstallerAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="runInstaller">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RunInstallerAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RunInstallerAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RunInstallerAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RunInstallerAttribute.RunInstaller">
      <topicdata group="api" />
      <apidata name="RunInstaller" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RunInstaller" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.RunInstallerAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunInstallerAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="RunWorkerCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <topicdata name="RunWorkerCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
      <apidata name="RunWorkerCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <topicdata name="RunWorkerCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
      <apidata name="RunWorkerCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="cancelled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="RunWorkerCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.RunWorkerCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.SByteConverter">
      <topicdata group="api" />
      <apidata name="SByteConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SByteConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.SByteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.SByteConverter.#ctor" />
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.SByteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.SByteConverter">
      <topicdata name="SByteConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SByteConverter" />
      <apidata name="SByteConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SByteConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.SByteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.SByteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SByteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SByteConverter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SByteConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SByteConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.SettingsBindableAttribute">
      <topicdata group="api" />
      <apidata name="SettingsBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.SettingsBindableAttribute.No" />
        <element api="F:System.ComponentModel.SettingsBindableAttribute.Yes" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.SettingsBindableAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.SettingsBindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.SettingsBindableAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.SettingsBindableAttribute.Bindable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.SettingsBindableAttribute">
      <topicdata name="SettingsBindableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SettingsBindableAttribute" />
      <apidata name="SettingsBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.SettingsBindableAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.SettingsBindableAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.SettingsBindableAttribute">
      <topicdata name="SettingsBindableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.SettingsBindableAttribute" />
      <apidata name="SettingsBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.SettingsBindableAttribute.Bindable" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.SettingsBindableAttribute">
      <topicdata name="SettingsBindableAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.SettingsBindableAttribute" />
      <apidata name="SettingsBindableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.SettingsBindableAttribute.No" />
        <element api="F:System.ComponentModel.SettingsBindableAttribute.Yes" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SettingsBindableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="bindable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.SettingsBindableAttribute.Bindable">
      <topicdata group="api" />
      <apidata name="Bindable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SettingsBindableAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SettingsBindableAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.SettingsBindableAttribute.No">
      <topicdata group="api" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.SettingsBindableAttribute.Yes">
      <topicdata group="api" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.SingleConverter">
      <topicdata group="api" />
      <apidata name="SingleConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SingleConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.SingleConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.SingleConverter.#ctor" />
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.SingleConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.SingleConverter">
      <topicdata name="SingleConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SingleConverter" />
      <apidata name="SingleConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SingleConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.SingleConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.SingleConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.SingleConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SingleConverter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SingleConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SingleConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.SortDescription">
      <topicdata group="api" />
      <apidata name="SortDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.ComponentModel.SortDescription.Equals(System.Object)" />
        <element api="M:System.ComponentModel.SortDescription.GetHashCode" />
        <element api="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
        <element api="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.ComponentModel.SortDescription.Direction" />
        <element api="P:System.ComponentModel.SortDescription.IsSealed" />
        <element api="P:System.ComponentModel.SortDescription.PropertyName" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.SortDescription">
      <topicdata name="SortDescription" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SortDescription" />
      <apidata name="SortDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.SortDescription.Equals(System.Object)" />
        <element api="M:System.ComponentModel.SortDescription.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" />
      </containers>
    </api>
    <api id="Operators.T:System.ComponentModel.SortDescription">
      <topicdata name="SortDescription" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ComponentModel.SortDescription" />
      <apidata name="SortDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
        <element api="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.SortDescription">
      <topicdata name="SortDescription" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.SortDescription" />
      <apidata name="SortDescription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.SortDescription.Direction" />
        <element api="P:System.ComponentModel.SortDescription.IsSealed" />
        <element api="P:System.ComponentModel.SortDescription.PropertyName" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.SortDescription.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescription.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.SortDescription.IsSealed">
      <topicdata group="api" />
      <apidata name="IsSealed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSealed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sd1">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
        <parameter name="sd2">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sd1">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
        <parameter name="sd2">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.SortDescription.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescription" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.SortDescriptionCollection">
      <topicdata group="api" />
      <apidata name="SortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.SortDescription" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged" />
        <element api="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="F:System.ComponentModel.SortDescriptionCollection.Empty" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.ClearItems" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.SortDescriptionCollection">
      <topicdata name="SortDescriptionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SortDescriptionCollection" />
      <apidata name="SortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.ClearItems" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.SortDescriptionCollection">
      <topicdata name="SortDescriptionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.SortDescriptionCollection" />
      <apidata name="SortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.SortDescriptionCollection">
      <topicdata name="SortDescriptionCollection" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.SortDescriptionCollection" />
      <apidata name="SortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged" />
        <element api="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.SortDescriptionCollection">
      <topicdata name="SortDescriptionCollection" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.SortDescriptionCollection" />
      <apidata name="SortDescriptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.SortDescriptionCollection.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.SortDescriptionCollection.Empty" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <topicdata group="api" />
      <apidata name="ClearItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.SortDescription" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.SortDescription" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.SortDescription" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.SortDescription" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ComponentModel.SortDescription" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.StringConverter">
      <topicdata group="api" />
      <apidata name="StringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.StringConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter" ref="true" />
          <type api="T:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter" ref="true" />
          <type api="T:System.Web.UI.Design.PostBackTriggerControlIDConverter" ref="true" />
          <type api="T:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" ref="true" />
          <type api="T:System.Windows.Forms.ImageKeyConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.ControlIDConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.ControlPropertyNameConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.TargetConverter" ref="true" />
          <type api="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.StringConverter.#ctor" />
        <element api="Overload:System.ComponentModel.StringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.StringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.StringConverter">
      <topicdata name="StringConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.StringConverter" />
      <apidata name="StringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.StringConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.StringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.StringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.StringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.StringConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.StringConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.StringConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.StringConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.StringConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.StringConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.SyntaxCheck">
      <topicdata group="api" />
      <apidata name="SyntaxCheck" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)" />
        <element api="M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)" />
        <element api="M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.SyntaxCheck">
      <topicdata name="SyntaxCheck" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.SyntaxCheck" />
      <apidata name="SyntaxCheck" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)" />
        <element api="M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)" />
        <element api="M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SyntaxCheck" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)">
      <topicdata group="api" />
      <apidata name="CheckMachineName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SyntaxCheck" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)">
      <topicdata group="api" />
      <apidata name="CheckPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SyntaxCheck" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)">
      <topicdata group="api" />
      <apidata name="CheckRootedPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.SyntaxCheck" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TimeSpanConverter">
      <topicdata group="api" />
      <apidata name="TimeSpanConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.TimeSpanConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.TimeSpanConverter.#ctor" />
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TimeSpanConverter">
      <topicdata name="TimeSpanConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TimeSpanConverter" />
      <apidata name="TimeSpanConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.TimeSpanConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TimeSpanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TimeSpanConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TimeSpanConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TimeSpanConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TimeSpanConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TimeSpanConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TimeSpanConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TimeSpanConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TimeSpanConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TimeSpanConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ToolboxItemAttribute">
      <topicdata group="api" />
      <apidata name="ToolboxItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.ToolboxItemAttribute.Default" />
        <element api="F:System.ComponentModel.ToolboxItemAttribute.None" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ToolboxItemAttribute.#ctor">
          <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.ToolboxItemAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType" />
        <element api="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ToolboxItemAttribute">
      <topicdata name="ToolboxItemAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ToolboxItemAttribute" />
      <apidata name="ToolboxItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ToolboxItemAttribute">
      <topicdata name="ToolboxItemAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ToolboxItemAttribute" />
      <apidata name="ToolboxItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType" />
        <element api="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.ToolboxItemAttribute">
      <topicdata name="ToolboxItemAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.ToolboxItemAttribute" />
      <apidata name="ToolboxItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ToolboxItemAttribute.Default" />
        <element api="F:System.ComponentModel.ToolboxItemAttribute.None" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ToolboxItemAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ToolboxItemAttribute.#ctor" />
      <parameters>
        <parameter name="defaultType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ToolboxItemAttribute.#ctor" />
      <parameters>
        <parameter name="toolboxItemTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ToolboxItemAttribute.#ctor" />
      <parameters>
        <parameter name="toolboxItemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemAttribute.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType">
      <topicdata group="api" />
      <apidata name="ToolboxItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolboxItemType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName">
      <topicdata group="api" />
      <apidata name="ToolboxItemTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolboxItemTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ToolboxItemFilterAttribute">
      <topicdata group="api" />
      <apidata name="ToolboxItemFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.ToolboxItemFilterAttribute.#ctor">
          <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String,System.ComponentModel.ToolboxItemFilterType)" />
        </element>
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.Match(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterString" />
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterType" />
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.ToolboxItemFilterAttribute">
      <topicdata name="ToolboxItemFilterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.ToolboxItemFilterAttribute" />
      <apidata name="ToolboxItemFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.Match(System.Object)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.ToolboxItemFilterAttribute">
      <topicdata name="ToolboxItemFilterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.ToolboxItemFilterAttribute" />
      <apidata name="ToolboxItemFilterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterString" />
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterType" />
        <element api="P:System.ComponentModel.ToolboxItemFilterAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.ToolboxItemFilterAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String,System.ComponentModel.ToolboxItemFilterType)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ToolboxItemFilterAttribute.#ctor" />
      <parameters>
        <parameter name="filterString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String,System.ComponentModel.ToolboxItemFilterType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.ToolboxItemFilterAttribute.#ctor" />
      <parameters>
        <parameter name="filterString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filterType">
          <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterString">
      <topicdata group="api" />
      <apidata name="FilterString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilterString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterType">
      <topicdata group="api" />
      <apidata name="FilterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilterType" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.Match(System.Object)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Match(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.ToolboxItemFilterAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.ToolboxItemFilterType">
      <topicdata group="api" />
      <apidata name="ToolboxItemFilterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.ToolboxItemFilterType.Allow" />
        <element api="F:System.ComponentModel.ToolboxItemFilterType.Custom" />
        <element api="F:System.ComponentModel.ToolboxItemFilterType.Prevent" />
        <element api="F:System.ComponentModel.ToolboxItemFilterType.Require" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemFilterType.Allow">
      <topicdata group="api" notopic="" />
      <apidata name="Allow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemFilterType.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemFilterType.Prevent">
      <topicdata group="api" notopic="" />
      <apidata name="Prevent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.ToolboxItemFilterType.Require">
      <topicdata group="api" notopic="" />
      <apidata name="Require" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.ToolboxItemFilterType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeConverter">
      <topicdata group="api" />
      <apidata name="TypeConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.UriTypeConverter" ref="true" />
          <type api="T:System.Resources.ResXFileRef.Converter" ref="true">
            <type api="T:System.Resources.ResXFileRef" ref="true" />
          </type>
          <type api="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" ref="true" />
          <type api="T:System.Windows.Media.ColorConverter" ref="true" />
          <type api="T:System.Windows.Media.FontFamilyConverter" ref="true" />
          <type api="T:System.Windows.Media.BrushConverter" ref="true" />
          <type api="T:System.Windows.Media.CacheModeConverter" ref="true" />
          <type api="T:System.Windows.Media.DoubleCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.GeometryConverter" ref="true" />
          <type api="T:System.Windows.Media.Int32CollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.PathFigureCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.PointCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.TransformConverter" ref="true" />
          <type api="T:System.Windows.Media.VectorCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.ImageSourceConverter" ref="true" />
          <type api="T:System.Windows.Media.PixelFormatConverter" ref="true" />
          <type api="T:System.Windows.Media.RequestCachePolicyConverter" ref="true" />
          <type api="T:System.Windows.Media.MatrixConverter" ref="true" />
          <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
          <type api="T:System.Windows.DurationConverter" ref="true" />
          <type api="T:System.Windows.FontStyleConverter" ref="true" />
          <type api="T:System.Windows.FontStretchConverter" ref="true" />
          <type api="T:System.Windows.FontWeightConverter" ref="true" />
          <type api="T:System.Windows.TextDecorationCollectionConverter" ref="true" />
          <type api="T:System.Windows.StrokeCollectionConverter" ref="true" />
          <type api="T:System.Windows.KeySplineConverter" ref="true" />
          <type api="T:System.Windows.KeyTimeConverter" ref="true" />
          <type api="T:System.Windows.CornerRadiusConverter" ref="true" />
          <type api="T:System.Windows.DeferrableContentConverter" ref="true" />
          <type api="T:System.Windows.DialogResultConverter" ref="true" />
          <type api="T:System.Windows.DynamicResourceExtensionConverter" ref="true" />
          <type api="T:System.Windows.FigureLengthConverter" ref="true" />
          <type api="T:System.Windows.FontSizeConverter" ref="true" />
          <type api="T:System.Windows.GridLengthConverter" ref="true" />
          <type api="T:System.Windows.LengthConverter" ref="true" />
          <type api="T:System.Windows.PropertyPathConverter" ref="true" />
          <type api="T:System.Windows.TemplateBindingExpressionConverter" ref="true" />
          <type api="T:System.Windows.TemplateBindingExtensionConverter" ref="true" />
          <type api="T:System.Windows.ThicknessConverter" ref="true" />
          <type api="T:System.Windows.ExpressionConverter" ref="true" />
          <type api="T:System.Windows.Int32RectConverter" ref="true" />
          <type api="T:System.Windows.PointConverter" ref="true" />
          <type api="T:System.Windows.RectConverter" ref="true" />
          <type api="T:System.Windows.SizeConverter" ref="true" />
          <type api="T:System.Windows.VectorConverter" ref="true" />
          <type api="T:System.Windows.Markup.XmlLanguageConverter" ref="true" />
          <type api="T:System.Windows.Markup.EventSetterHandlerConverter" ref="true" />
          <type api="T:System.Windows.Markup.DependencyPropertyConverter" ref="true" />
          <type api="T:System.Windows.Markup.RoutedEventConverter" ref="true" />
          <type api="T:System.Windows.Markup.SetterTriggerConditionValueConverter" ref="true" />
          <type api="T:System.Windows.Markup.TemplateKeyConverter" ref="true" />
          <type api="T:System.Windows.Markup.NameReferenceConverter" ref="true" />
          <type api="T:System.Windows.Input.KeyGestureConverter" ref="true" />
          <type api="T:System.Windows.Input.MouseActionConverter" ref="true" />
          <type api="T:System.Windows.Input.MouseGestureConverter" ref="true" />
          <type api="T:System.Windows.Input.CursorConverter" ref="true" />
          <type api="T:System.Windows.Input.InputScopeConverter" ref="true" />
          <type api="T:System.Windows.Input.InputScopeNameConverter" ref="true" />
          <type api="T:System.Windows.Input.CommandConverter" ref="true" />
          <type api="T:System.Windows.Input.KeyConverter" ref="true" />
          <type api="T:System.Windows.Input.ModifierKeysConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Matrix3DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Point3DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Point3DCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Point4DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.QuaternionConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Rect3DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Size3DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Vector3DConverter" ref="true" />
          <type api="T:System.Windows.Media.Media3D.Vector3DCollectionConverter" ref="true" />
          <type api="T:System.Windows.Media.Animation.RepeatBehaviorConverter" ref="true" />
          <type api="T:System.Windows.Media.Converters.BaseIListConverter" ref="true" />
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.BooleanConverter" ref="true" />
          <type api="T:System.ComponentModel.CharConverter" ref="true" />
          <type api="T:System.ComponentModel.CollectionConverter" ref="true" />
          <type api="T:System.ComponentModel.CultureInfoConverter" ref="true" />
          <type api="T:System.ComponentModel.DateTimeConverter" ref="true" />
          <type api="T:System.ComponentModel.DateTimeOffsetConverter" ref="true" />
          <type api="T:System.ComponentModel.EnumConverter" ref="true" />
          <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
          <type api="T:System.ComponentModel.GuidConverter" ref="true" />
          <type api="T:System.ComponentModel.MultilineStringConverter" ref="true" />
          <type api="T:System.ComponentModel.NullableConverter" ref="true" />
          <type api="T:System.ComponentModel.ReferenceConverter" ref="true" />
          <type api="T:System.ComponentModel.StringConverter" ref="true" />
          <type api="T:System.ComponentModel.TimeSpanConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
          <type api="T:System.Windows.Controls.DataGridLengthConverter" ref="true" />
          <type api="T:System.Windows.Controls.VirtualizationCacheLengthConverter" ref="true" />
          <type api="T:System.Drawing.ColorConverter" ref="true" />
          <type api="T:System.Drawing.FontConverter" ref="true" />
          <type api="T:System.Drawing.FontConverter.FontNameConverter" ref="true">
            <type api="T:System.Drawing.FontConverter" ref="true" />
          </type>
          <type api="T:System.Drawing.ImageConverter" ref="true" />
          <type api="T:System.Drawing.PointConverter" ref="true" />
          <type api="T:System.Drawing.RectangleConverter" ref="true" />
          <type api="T:System.Drawing.SizeConverter" ref="true" />
          <type api="T:System.Drawing.ImageFormatConverter" ref="true" />
          <type api="T:System.Drawing.SizeFConverter" ref="true" />
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" ref="true" />
          <type api="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" ref="true" />
          <type api="T:System.Activities.XamlIntegration.AssemblyReferenceConverter" ref="true" />
          <type api="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter" ref="true" />
          <type api="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter" ref="true" />
          <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
          <type api="T:System.Activities.XamlIntegration.TypeConverterBase" ref="true" />
          <type api="T:System.Activities.XamlIntegration.WorkflowIdentityConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataBindingCollectionConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataColumnSelectionConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataFieldConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataMemberConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataSourceConverter" ref="true" />
          <type api="T:System.Web.UI.Design.DataSourceViewSchemaConverter" ref="true" />
          <type api="T:System.Web.UI.Design.ExpressionsCollectionConverter" ref="true" />
          <type api="T:System.Web.UI.Design.SkinIDTypeConverter" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" ref="true" />
          <type api="T:System.Diagnostics.Design.LogConverter" ref="true" />
          <type api="T:System.Windows.Forms.AxHost.StateConverter" ref="true">
            <type api="T:System.Windows.Forms.AxHost" ref="true" />
          </type>
          <type api="T:System.Windows.Forms.CursorConverter" ref="true" />
          <type api="T:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter" ref="true" />
          <type api="T:System.Windows.Forms.DataGridViewCellStyleConverter" ref="true" />
          <type api="T:System.Windows.Forms.KeysConverter" ref="true" />
          <type api="T:System.Windows.Forms.LinkArea.LinkAreaConverter" ref="true">
            <type api="T:System.Windows.Forms.LinkArea" ref="false" />
          </type>
          <type api="T:System.Windows.Forms.LinkConverter" ref="true" />
          <type api="T:System.Windows.Forms.ListBindingConverter" ref="true" />
          <type api="T:System.Windows.Forms.OpacityConverter" ref="true" />
          <type api="T:System.Windows.Forms.PaddingConverter" ref="true" />
          <type api="T:System.Windows.Forms.ScrollableControl.DockPaddingEdgesConverter" ref="true">
            <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
          </type>
          <type api="T:System.Windows.Forms.SelectionRangeConverter" ref="true" />
          <type api="T:System.Windows.Forms.TreeNodeConverter" ref="true" />
          <type api="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" ref="true" />
          <type api="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" ref="true" />
          <type api="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.FontNamesConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.FontUnitConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.StringArrayConverter" ref="true" />
          <type api="T:System.Web.UI.WebControls.UnitConverter" ref="true" />
          <type api="T:System.Web.Configuration.LowerCaseStringConverter" ref="true" />
          <type api="T:System.Web.UI.Design.MobileControls.Converters.DataFieldConverter" ref="true" />
          <type api="T:System.Web.UI.Design.MobileControls.Converters.DataMemberConverter" ref="true" />
          <type api="T:System.Windows.Controls.Ribbon.RibbonControlLengthConverter" ref="true" />
          <type api="T:System.Windows.Controls.Ribbon.StringCollectionConverter" ref="true" />
          <type api="T:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter" ref="true" />
          <type api="T:System.Xaml.Schema.XamlTypeTypeConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.#ctor" />
        <element api="Overload:System.ComponentModel.TypeConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeConverter">
      <topicdata name="TypeConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeConverter" />
      <apidata name="TypeConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.TypeConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString">
      <topicdata name="ConvertFromInvariantString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFromInvariantString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertFromString">
      <topicdata name="ConvertFromString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFromString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString">
      <topicdata name="ConvertToInvariantString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertToInvariantString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.ConvertToString">
      <topicdata name="ConvertToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.CreateInstance">
      <topicdata name="CreateInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
      <topicdata name="GetCreateInstanceSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
        <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported">
      <topicdata name="GetPropertiesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
        <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.IsValid">
      <topicdata name="IsValid" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CanConvertTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertFromInvariantString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
      <topicdata group="api" />
      <apidata name="ConvertFromInvariantString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertFromString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFromString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertFromString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFromString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <topicdata group="api" />
      <apidata name="ConvertFromString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertFromString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertToInvariantString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertToInvariantString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.ConvertToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CreateInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.CreateInstance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="propertyValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
      <topicdata group="api" />
      <apidata name="GetConvertFromException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="GetConvertToException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
      <topicdata group="api" />
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetProperties" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValues">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValues" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.IsValid" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeConverter.IsValid" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
      <topicdata group="api" />
      <apidata name="SortProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="props">
          <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
        </parameter>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
      <topicdata group="api" />
      <apidata name="SimplePropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor">
          <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
        <element api="P:System.ComponentModel.PropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
      <topicdata name="SimplePropertyDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
      <apidata name="SimplePropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection" />
        <element api="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
        <element api="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.GetChildProperties">
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
          <element api="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
        <element api="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
      <topicdata name="SimplePropertyDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
      <apidata name="SimplePropertyDescriptor" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.MemberDescriptor.AttributeArray" />
        <element api="P:System.ComponentModel.MemberDescriptor.Attributes" />
        <element api="P:System.ComponentModel.MemberDescriptor.Category" />
        <element api="P:System.ComponentModel.MemberDescriptor.Description" />
        <element api="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly" />
        <element api="P:System.ComponentModel.MemberDescriptor.DisplayName" />
        <element api="P:System.ComponentModel.MemberDescriptor.IsBrowsable" />
        <element api="P:System.ComponentModel.MemberDescriptor.Name" />
        <element api="P:System.ComponentModel.MemberDescriptor.NameHashCode" />
        <element api="P:System.ComponentModel.PropertyDescriptor.Converter" />
        <element api="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
        <element api="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly" />
        <element api="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)" />
        <element api="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="CanResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType">
      <topicdata group="api" />
      <apidata name="ComponentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ComponentType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ResetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeConverter.StandardValuesCollection">
      <topicdata group="api" />
      <apidata name="StandardValuesCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeConverter.StandardValuesCollection">
      <topicdata name="StandardValuesCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      <apidata name="StandardValuesCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.TypeConverter.StandardValuesCollection">
      <topicdata name="StandardValuesCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      <apidata name="StandardValuesCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeConverterAttribute">
      <topicdata group="api" />
      <apidata name="TypeConverterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.TypeConverterAttribute.Default" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.TypeConverterAttribute.#ctor">
          <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
          <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeConverterAttribute">
      <topicdata name="TypeConverterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeConverterAttribute" />
      <apidata name="TypeConverterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.TypeConverterAttribute">
      <topicdata name="TypeConverterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.TypeConverterAttribute" />
      <apidata name="TypeConverterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.TypeConverterAttribute">
      <topicdata name="TypeConverterAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.TypeConverterAttribute" />
      <apidata name="TypeConverterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.TypeConverterAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeConverterAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
        <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <topicdata group="api" />
      <apidata name="ConverterTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConverterTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.TypeConverterAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeDescriptionProvider">
      <topicdata group="api" />
      <apidata name="TypeDescriptionProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <element api="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType">
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
        <element api="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor">
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeDescriptionProvider">
      <topicdata name="TypeDescriptionProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeDescriptionProvider" />
      <apidata name="TypeDescriptionProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType">
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
        <element api="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor">
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptionProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType">
      <topicdata name="GetReflectionType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor">
      <topicdata name="GetTypeDescriptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetTypeDescriptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="argTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
      <topicdata group="api" />
      <apidata name="GetCache" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
      <topicdata group="api" />
      <apidata name="GetExtendedTypeDescriptor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
      <topicdata group="api" />
      <apidata name="GetExtenderProviders" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetFullComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
      <topicdata group="api" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetRuntimeType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reflectionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
      <topicdata group="api" />
      <apidata name="GetTypeDescriptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTypeDescriptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetTypeDescriptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
      <topicdata group="api" />
      <apidata name="IsSupportedType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeDescriptionProviderAttribute">
      <topicdata group="api" />
      <apidata name="TypeDescriptionProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor">
          <element api="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.TypeDescriptionProviderAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeDescriptionProviderAttribute">
      <topicdata name="TypeDescriptionProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
      <apidata name="TypeDescriptionProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.TypeDescriptionProviderAttribute">
      <topicdata name="TypeDescriptionProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
      <apidata name="TypeDescriptionProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.TypeDescriptionProviderAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.TypeDescriptionProviderAttribute.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptionProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeDescriptor">
      <topicdata group="api" />
      <apidata name="TypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.TypeDescriptor.Refreshed" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddAttributes">
          <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddProviderTransparent">
          <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.CreateEvent">
          <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.CreateProperty">
          <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetAttributes">
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetClassName">
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetComponentName">
          <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetConverter">
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent">
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty">
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetEditor">
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType">
          <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.Refresh">
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent">
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
        <element api="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
        <element api="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeDescriptor">
      <topicdata name="TypeDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeDescriptor" />
      <apidata name="TypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddAttributes">
          <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.AddProviderTransparent">
          <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.CreateEvent">
          <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.CreateProperty">
          <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetAttributes">
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetClassName">
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetComponentName">
          <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetConverter">
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent">
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty">
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetEditor">
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetEvents">
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetProperties">
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType">
          <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.Refresh">
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
        <element api="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider">
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent">
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
          <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.TypeDescriptor">
      <topicdata name="TypeDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.TypeDescriptor" />
      <apidata name="TypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
        <element api="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
        <element api="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.TypeDescriptor">
      <topicdata name="TypeDescriptor" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.TypeDescriptor" />
      <apidata name="TypeDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.AddAttributes">
      <topicdata name="AddAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.AddProvider">
      <topicdata name="AddProvider" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddProvider" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.AddProviderTransparent">
      <topicdata name="AddProviderTransparent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddProviderTransparent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.CreateEvent">
      <topicdata name="CreateEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.CreateProperty">
      <topicdata name="CreateProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetAttributes">
      <topicdata name="GetAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetClassName">
      <topicdata name="GetClassName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetComponentName">
      <topicdata name="GetComponentName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetConverter">
      <topicdata name="GetConverter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent">
      <topicdata name="GetDefaultEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty">
      <topicdata name="GetDefaultProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetEditor">
      <topicdata name="GetEditor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetProvider">
      <topicdata name="GetProvider" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType">
      <topicdata name="GetReflectionType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.Refresh">
      <topicdata name="Refresh" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
        <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider">
      <topicdata name="RemoveProvider" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveProvider" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent">
      <topicdata name="RemoveProviderTransparent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveProviderTransparent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
        <element api="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="AddAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="AddAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
      <topicdata group="api" />
      <apidata name="AddEditorTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="table">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="AddProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <topicdata group="api" />
      <apidata name="AddProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="AddProviderTransparent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddProviderTransparent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <topicdata group="api" />
      <apidata name="AddProviderTransparent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.AddProviderTransparent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
      <topicdata group="api" />
      <apidata name="ComNativeDescriptorHandler" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComNativeDescriptorHandler" />
      <setter name="set_ComNativeDescriptorHandler" />
      <returns>
        <type api="T:System.ComponentModel.IComNativeDescriptorHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.TypeDescriptor.ComObjectType">
      <topicdata group="api" />
      <apidata name="ComObjectType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComObjectType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="CreateAssociation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primary">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="secondary">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
      <topicdata group="api" />
      <apidata name="CreateDesigner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="designerBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="CreateEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="oldEventDescriptor">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="CreateEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="argTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="CreateProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="oldPropertyDescriptor">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="CreateProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="GetAssociation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="primary">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
      <topicdata group="api" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
      <topicdata group="api" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
      <topicdata group="api" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetFullComponentName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="noCustomTypeDesc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
      <topicdata group="api" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
      <topicdata group="api" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
      <topicdata group="api" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
      <topicdata group="api" />
      <apidata name="GetReflectionType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.TypeDescriptor.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InterfaceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="module">
          <type api="T:System.Reflection.Module" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.TypeDescriptor.Refreshed">
      <topicdata group="api" />
      <apidata name="Refreshed" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Refreshed" />
      <remover name="remove_Refreshed" />
      <eventhandler>
        <type api="T:System.ComponentModel.RefreshEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveAssociation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primary">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="secondary">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveAssociations" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primary">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <topicdata group="api" />
      <apidata name="RemoveProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveProviderTransparent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <topicdata group="api" />
      <apidata name="RemoveProviderTransparent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name="SortDescriptorArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="infos">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.TypeListConverter">
      <topicdata group="api" />
      <apidata name="TypeListConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeListConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])" />
        <element api="Overload:System.ComponentModel.TypeListConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.TypeListConverter">
      <topicdata name="TypeListConverter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.TypeListConverter" />
      <apidata name="TypeListConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.TypeListConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.ComponentModel.TypeListConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.GetStandardValues">
      <topicdata name="GetStandardValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <element api="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive">
      <topicdata name="GetStandardValuesExclusive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesSupported">
      <topicdata name="GetStandardValuesSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <element api="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="types">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.GetStandardValues" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.TypeListConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.UInt16Converter">
      <topicdata group="api" />
      <apidata name="UInt16Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt16Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.UInt16Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt16Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.ComponentModel.UInt16Converter.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.UInt16Converter">
      <topicdata name="UInt16Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.UInt16Converter" />
      <apidata name="UInt16Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt16Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.UInt16Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt16Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt16Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt16Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.UInt16Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt16Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.UInt32Converter">
      <topicdata group="api" />
      <apidata name="UInt32Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt32Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.UInt32Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt32Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.ComponentModel.UInt32Converter.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.UInt32Converter">
      <topicdata name="UInt32Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.UInt32Converter" />
      <apidata name="UInt32Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt32Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.UInt32Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt32Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt32Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt32Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.UInt32Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt32Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.UInt64Converter">
      <topicdata group="api" />
      <apidata name="UInt64Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt64Converter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.BaseNumberConverter" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.UInt64Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt64Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.ComponentModel.UInt64Converter.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.UInt64Converter">
      <topicdata name="UInt64Converter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.UInt64Converter" />
      <apidata name="UInt64Converter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.UInt64Converter.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.UInt64Converter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ComponentModel.UInt64Converter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.UInt64Converter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt64Converter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.UInt64Converter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.UInt64Converter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.WarningException">
      <topicdata group="api" />
      <apidata name="WarningException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.WarningException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.ComponentModel.WarningException.#ctor">
          <element api="M:System.ComponentModel.WarningException.#ctor" />
          <element api="M:System.ComponentModel.WarningException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.ComponentModel.WarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.WarningException.HelpTopic" />
        <element api="P:System.ComponentModel.WarningException.HelpUrl" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.WarningException">
      <topicdata name="WarningException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.WarningException" />
      <apidata name="WarningException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.WarningException.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.WarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.WarningException">
      <topicdata name="WarningException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.WarningException" />
      <apidata name="WarningException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.WarningException.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.WarningException.HelpTopic" />
        <element api="P:System.ComponentModel.WarningException.HelpUrl" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.WarningException">
      <topicdata name="WarningException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.WarningException" />
      <apidata name="WarningException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.WarningException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.WarningException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.WarningException.#ctor" />
        <element api="M:System.ComponentModel.WarningException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.WarningException.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helpUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.WarningException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helpUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="helpTopic">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.WarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.WarningException.HelpTopic">
      <topicdata group="api" />
      <apidata name="HelpTopic" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpTopic" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.WarningException.HelpUrl">
      <topicdata group="api" />
      <apidata name="HelpUrl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpUrl" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.WarningException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Win32Exception">
      <topicdata group="api" />
      <apidata name="Win32Exception" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Win32Exception.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.HttpListenerException" ref="true" />
          <type api="T:System.Net.WebSockets.WebSocketException" ref="true" />
          <type api="T:System.Net.NetworkInformation.NetworkInformationException" ref="true" />
          <type api="T:System.Net.Sockets.SocketException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.ComponentModel.Win32Exception.#ctor">
          <element api="M:System.ComponentModel.Win32Exception.#ctor" />
          <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Int32)" />
          <element api="M:System.ComponentModel.Win32Exception.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Int32,System.String)" />
          <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.Win32Exception.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
        <element api="P:System.ComponentModel.Win32Exception.NativeErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Win32Exception">
      <topicdata name="Win32Exception" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Win32Exception" />
      <apidata name="Win32Exception" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Win32Exception.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Win32Exception">
      <topicdata name="Win32Exception" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Win32Exception" />
      <apidata name="Win32Exception" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Win32Exception.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Win32Exception.NativeErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Win32Exception">
      <topicdata name="Win32Exception" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Win32Exception" />
      <apidata name="Win32Exception" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Win32Exception.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Win32Exception.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Win32Exception.#ctor" />
        <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Int32)" />
        <element api="M:System.ComponentModel.Win32Exception.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Int32,System.String)" />
        <element api="M:System.ComponentModel.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.Win32Exception.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Win32Exception.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Win32Exception.NativeErrorCode">
      <topicdata group="api" />
      <apidata name="NativeErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NativeErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel" />
        <type api="T:System.ComponentModel.Win32Exception" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>