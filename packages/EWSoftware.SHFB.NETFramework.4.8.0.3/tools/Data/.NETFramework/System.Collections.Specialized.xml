<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WindowsBase">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Collections.Specialized">
      <topicdata group="api" />
      <apidata name="System.Collections.Specialized" group="namespace" />
      <elements>
        <element api="T:System.Collections.Specialized.BitVector32" />
        <element api="T:System.Collections.Specialized.BitVector32.Section" />
        <element api="T:System.Collections.Specialized.CollectionsUtil" />
        <element api="T:System.Collections.Specialized.HybridDictionary" />
        <element api="T:System.Collections.Specialized.INotifyCollectionChanged" />
        <element api="T:System.Collections.Specialized.IOrderedDictionary" />
        <element api="T:System.Collections.Specialized.ListDictionary" />
        <element api="T:System.Collections.Specialized.NameObjectCollectionBase" />
        <element api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
        <element api="T:System.Collections.Specialized.NameValueCollection" />
        <element api="T:System.Collections.Specialized.NotifyCollectionChangedAction" />
        <element api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
        <element api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" />
        <element api="T:System.Collections.Specialized.OrderedDictionary" />
        <element api="T:System.Collections.Specialized.StringCollection" />
        <element api="T:System.Collections.Specialized.StringEnumerator" />
        <element api="T:System.Collections.Specialized.StringDictionary" />
        <element api="T:System.Collections.Specialized.CollectionChangedEventManager" />
      </elements>
    </api>
    <api id="T:System.Collections.Specialized.BitVector32">
      <topicdata group="api" />
      <apidata name="BitVector32" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Collections.Specialized.BitVector32.#ctor">
          <element api="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
          <element api="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.Collections.Specialized.BitVector32.CreateMask">
          <element api="M:System.Collections.Specialized.BitVector32.CreateMask" />
          <element api="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
        </element>
        <element api="Overload:System.Collections.Specialized.BitVector32.CreateSection">
          <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
          <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
        <element api="M:System.Collections.Specialized.BitVector32.GetHashCode" />
        <element api="Overload:System.Collections.Specialized.BitVector32.ToString">
          <element api="M:System.Collections.Specialized.BitVector32.ToString" />
          <element api="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="P:System.Collections.Specialized.BitVector32.Data" />
        <element api="Overload:System.Collections.Specialized.BitVector32.Item">
          <element api="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.BitVector32">
      <topicdata name="BitVector32" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.BitVector32" />
      <apidata name="BitVector32" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Collections.Specialized.BitVector32.CreateMask">
          <element api="M:System.Collections.Specialized.BitVector32.CreateMask" />
          <element api="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
        </element>
        <element api="Overload:System.Collections.Specialized.BitVector32.CreateSection">
          <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
          <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
        <element api="M:System.Collections.Specialized.BitVector32.GetHashCode" />
        <element api="Overload:System.Collections.Specialized.BitVector32.ToString">
          <element api="M:System.Collections.Specialized.BitVector32.ToString" />
          <element api="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
        </element>
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.BitVector32">
      <topicdata name="BitVector32" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.BitVector32" />
      <apidata name="BitVector32" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.Specialized.BitVector32.Data" />
        <element api="Overload:System.Collections.Specialized.BitVector32.Item">
          <element api="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
        <element api="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.CreateMask">
      <topicdata name="CreateMask" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateMask" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.CreateMask" />
        <element api="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.CreateSection">
      <topicdata name="CreateSection" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateSection" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <element api="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.ToString" />
        <element api="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.BitVector32.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.BitVector32.#ctor" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.CreateMask">
      <topicdata group="api" />
      <apidata name="CreateMask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.CreateMask" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)">
      <topicdata group="api" />
      <apidata name="CreateMask" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.CreateMask" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="previous">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)">
      <topicdata group="api" />
      <apidata name="CreateSection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.CreateSection" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="maxValue">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="CreateSection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.CreateSection" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="maxValue">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="previous">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.BitVector32.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="section">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.BitVector32.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="bit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.BitVector32.Section">
      <topicdata group="api" />
      <apidata name="Section" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Collections.Specialized.BitVector32.Section.Equals">
          <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)" />
          <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Collections.Specialized.BitVector32.Section.GetHashCode" />
        <element api="M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)" />
        <element api="M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)" />
        <element api="Overload:System.Collections.Specialized.BitVector32.Section.ToString">
          <element api="M:System.Collections.Specialized.BitVector32.Section.ToString" />
          <element api="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="P:System.Collections.Specialized.BitVector32.Section.Mask" />
        <element api="P:System.Collections.Specialized.BitVector32.Section.Offset" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.BitVector32.Section">
      <topicdata name="Section" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.BitVector32.Section" />
      <apidata name="Section" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="Overload:System.Collections.Specialized.BitVector32.Section.Equals">
          <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)" />
          <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Collections.Specialized.BitVector32.Section.GetHashCode" />
        <element api="Overload:System.Collections.Specialized.BitVector32.Section.ToString">
          <element api="M:System.Collections.Specialized.BitVector32.Section.ToString" />
          <element api="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)" />
        </element>
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" />
      </containers>
    </api>
    <api id="Operators.T:System.Collections.Specialized.BitVector32.Section">
      <topicdata name="Section" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Collections.Specialized.BitVector32.Section" />
      <apidata name="Section" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)" />
        <element api="M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.BitVector32.Section">
      <topicdata name="Section" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.BitVector32.Section" />
      <apidata name="Section" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Collections.Specialized.BitVector32.Section.Mask" />
        <element api="P:System.Collections.Specialized.BitVector32.Section.Offset" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.Section.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)" />
        <element api="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.BitVector32.Section.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.BitVector32.Section.ToString" />
        <element api="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.Section.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.Section.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.BitVector32.Section.Mask">
      <topicdata group="api" />
      <apidata name="Mask" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mask" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.BitVector32.Section.Offset">
      <topicdata group="api" />
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Offset" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
        <parameter name="b">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
        <parameter name="b">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.BitVector32.Section.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.BitVector32.Section.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
            <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.BitVector32.Section" ref="false">
          <type api="T:System.Collections.Specialized.BitVector32" ref="false" />
        </type>
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.CollectionChangedEventManager">
      <topicdata group="api" />
      <apidata name="CollectionChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.CollectionChangedEventManager">
      <topicdata name="CollectionChangedEventManager" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.CollectionChangedEventManager" />
      <apidata name="CollectionChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.CollectionChangedEventManager">
      <topicdata name="CollectionChangedEventManager" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.CollectionChangedEventManager" />
      <apidata name="CollectionChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="AddListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="RemoveListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.CollectionsUtil">
      <topicdata group="api" />
      <apidata name="CollectionsUtil" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Collections.Specialized.CollectionsUtil.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.CollectionsUtil.#ctor" />
        <element api="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)" />
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)" />
        </element>
        <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.CollectionsUtil">
      <topicdata name="CollectionsUtil" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.CollectionsUtil" />
      <apidata name="CollectionsUtil" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Collections.Specialized.CollectionsUtil.#ctor" />
      <elements>
        <element api="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)" />
          <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)" />
        </element>
        <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <topicdata name="CreateCaseInsensitiveHashtable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateCaseInsensitiveHashtable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
        <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)" />
        <element api="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <topicdata group="api" />
      <apidata name="CreateCaseInsensitiveHashtable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="CreateCaseInsensitiveHashtable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <topicdata group="api" />
      <apidata name="CreateCaseInsensitiveHashtable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <topicdata group="api" />
      <apidata name="CreateCaseInsensitiveSortedList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.SortedList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.CollectionsUtil" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.HybridDictionary">
      <topicdata group="api" />
      <apidata name="HybridDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.HybridDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.Mobile.CookielessData" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Collections.Specialized.HybridDictionary.#ctor">
          <element api="M:System.Collections.Specialized.HybridDictionary.#ctor" />
          <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)" />
          <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)" />
          <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)" />
        </element>
        <element api="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Clear" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Count" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsFixedSize" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsReadOnly" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Keys" />
        <element api="P:System.Collections.Specialized.HybridDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.HybridDictionary">
      <topicdata name="HybridDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.HybridDictionary" />
      <apidata name="HybridDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.HybridDictionary.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Clear" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.HybridDictionary">
      <topicdata name="HybridDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.HybridDictionary" />
      <apidata name="HybridDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.HybridDictionary.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.HybridDictionary.Count" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsFixedSize" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsReadOnly" />
        <element api="P:System.Collections.Specialized.HybridDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Keys" />
        <element api="P:System.Collections.Specialized.HybridDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.HybridDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.HybridDictionary.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.HybridDictionary.#ctor" />
        <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)" />
        <element api="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.HybridDictionary.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.HybridDictionary.#ctor" />
      <parameters>
        <parameter name="caseInsensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.HybridDictionary.#ctor" />
      <parameters>
        <parameter name="initialSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.HybridDictionary.#ctor" />
      <parameters>
        <parameter name="initialSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="caseInsensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.HybridDictionary.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.HybridDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.INotifyCollectionChanged">
      <topicdata group="api" />
      <apidata name="INotifyCollectionChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true" />
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true" />
        <type api="T:System.Windows.FreezableCollection`1" ref="true" />
        <type api="T:System.Windows.Documents.DocumentReferenceCollection" ref="true" />
        <type api="T:System.Windows.Ink.StrokeCollection" ref="true" />
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
        <type api="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" ref="true" />
        <type api="T:System.Activities.Presentation.Model.ModelItemCollection" ref="true" />
        <type api="T:System.Activities.Presentation.Model.ModelItemDictionary" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Events.T:System.Collections.Specialized.INotifyCollectionChanged">
      <topicdata name="INotifyCollectionChanged" group="list" subgroup="Events" typeTopicId="T:System.Collections.Specialized.INotifyCollectionChanged" />
      <apidata name="INotifyCollectionChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" />
      </containers>
    </api>
    <api id="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.IOrderedDictionary">
      <topicdata group="api" />
      <apidata name="IOrderedDictionary" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.IDictionary.Clear" />
        <element api="M:System.Collections.IDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.IDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IDictionary.IsFixedSize" />
        <element api="P:System.Collections.IDictionary.IsReadOnly" />
        <element api="P:System.Collections.IDictionary.Keys" />
        <element api="P:System.Collections.IDictionary.Values" />
        <element api="Overload:System.Collections.Specialized.IOrderedDictionary.Item">
          <element api="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
          <element api="P:System.Collections.IDictionary.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.IOrderedDictionary">
      <topicdata name="IOrderedDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.IOrderedDictionary" />
      <apidata name="IOrderedDictionary" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.IDictionary.Clear" />
        <element api="M:System.Collections.IDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.IDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.IOrderedDictionary">
      <topicdata name="IOrderedDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.IOrderedDictionary" />
      <apidata name="IOrderedDictionary" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IDictionary.IsFixedSize" />
        <element api="P:System.Collections.IDictionary.IsReadOnly" />
        <element api="P:System.Collections.IDictionary.Keys" />
        <element api="P:System.Collections.IDictionary.Values" />
        <element api="Overload:System.Collections.Specialized.IOrderedDictionary.Item">
          <element api="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
          <element api="P:System.Collections.IDictionary.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.IOrderedDictionary.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
        <element api="P:System.Collections.IDictionary.Item(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.IOrderedDictionary.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.ListDictionary">
      <topicdata group="api" />
      <apidata name="ListDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.ListDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Collections.Specialized.ListDictionary.#ctor">
          <element api="M:System.Collections.Specialized.ListDictionary.#ctor" />
          <element api="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)" />
        </element>
        <element api="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.Clear" />
        <element api="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.ListDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.ListDictionary.Count" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsFixedSize" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsReadOnly" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.ListDictionary.Item(System.Object)" />
        <element api="P:System.Collections.Specialized.ListDictionary.Keys" />
        <element api="P:System.Collections.Specialized.ListDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.ListDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.ListDictionary">
      <topicdata name="ListDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.ListDictionary" />
      <apidata name="ListDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.ListDictionary.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.Clear" />
        <element api="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.ListDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.ListDictionary">
      <topicdata name="ListDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.ListDictionary" />
      <apidata name="ListDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.ListDictionary.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.ListDictionary.Count" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsFixedSize" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsReadOnly" />
        <element api="P:System.Collections.Specialized.ListDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.ListDictionary.Item(System.Object)" />
        <element api="P:System.Collections.Specialized.ListDictionary.Keys" />
        <element api="P:System.Collections.Specialized.ListDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.ListDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.ListDictionary.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.ListDictionary.#ctor" />
        <element api="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.ListDictionary.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.ListDictionary.#ctor" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.ListDictionary.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.ListDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NameObjectCollectionBase">
      <topicdata group="api" />
      <apidata name="NameObjectCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.HttpApplicationStateBase" ref="true" />
          <type api="T:System.Web.HttpFileCollectionBase" ref="true" />
          <type api="T:System.Web.HttpApplicationState" ref="true" />
          <type api="T:System.Web.HttpCookieCollection" ref="true" />
          <type api="T:System.Web.HttpFileCollection" ref="true" />
          <type api="T:System.Web.HttpModuleCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
          <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
          <type api="T:System.Management.ManagementNamedValueCollection" ref="true" />
          <type api="T:System.Web.SessionState.SessionStateItemCollection" ref="true" />
          <type api="T:System.Web.Configuration.VirtualDirectoryMappingCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.NameObjectCollectionBase">
      <topicdata name="NameObjectCollectionBase" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.NameObjectCollectionBase" />
      <apidata name="NameObjectCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.NameObjectCollectionBase">
      <topicdata name="NameObjectCollectionBase" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.NameObjectCollectionBase" />
      <apidata name="NameObjectCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet">
      <topicdata name="BaseGet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
      <topicdata name="BaseGetAllValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BaseGetAllValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet">
      <topicdata name="BaseSet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BaseSet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="equalityComparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="hashProvider">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use NameObjectCollectionBase(IEqualityComparer) instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="equalityComparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hashProvider">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use NameObjectCollectionBase(Int32, IEqualityComparer) instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="BaseAdd" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
      <topicdata group="api" />
      <apidata name="BaseClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
      <topicdata group="api" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
      <topicdata group="api" />
      <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
      <topicdata group="api" />
      <apidata name="BaseGetAllValues" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
      <topicdata group="api" />
      <apidata name="BaseGetAllValues" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseGetKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
      <topicdata group="api" />
      <apidata name="BaseHasKeys" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
      <topicdata group="api" />
      <apidata name="BaseRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseRemoveAt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="BaseSet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="BaseSet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReadOnly" />
      <setter name="set_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection">
      <topicdata group="api" />
      <apidata name="KeysCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection">
      <topicdata name="KeysCollection" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
      <apidata name="KeysCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection">
      <topicdata name="KeysCollection" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
      <apidata name="KeysCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NameValueCollection">
      <topicdata group="api" />
      <apidata name="NameValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.HttpClientCertificate" ref="true" />
          <type api="T:System.Net.WebHeaderCollection" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.#ctor">
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        </element>
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear" />
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Item">
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.NameValueCollection">
      <topicdata name="NameValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.NameValueCollection" />
      <apidata name="NameValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseGet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseGetAllValues">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.BaseSet">
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
          <element api="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
        </element>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Add">
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.Clear" />
        <element api="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Get">
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.GetValues">
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
          <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        </element>
        <element api="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
        <element api="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.NameValueCollection">
      <topicdata name="NameValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.NameValueCollection" />
      <apidata name="NameValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <element api="Overload:System.Collections.Specialized.NameValueCollection.Item">
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameValueCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameValueCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameValueCollection.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameValueCollection.GetValues">
      <topicdata name="GetValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
        <element api="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NameValueCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="equalityComparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="hashProvider">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use NameValueCollection(IEqualityComparer) instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="col">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="equalityComparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hashProvider">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use NameValueCollection(Int32, IEqualityComparer) instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="col">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.NameValueCollection.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameValueCollection.AllKeys">
      <topicdata group="api" />
      <apidata name="AllKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_AllKeys" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dest">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.GetValues" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.GetValues" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.HasKeys">
      <topicdata group="api" />
      <apidata name="HasKeys" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
      <topicdata group="api" />
      <apidata name="InvalidateCachedArrays" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.NameValueCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NotifyCollectionChangedAction">
      <topicdata group="api" />
      <apidata name="NotifyCollectionChangedAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" />
        <element api="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />
        <element api="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />
        <element api="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />
        <element api="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move">
      <topicdata group="api" notopic="" />
      <apidata name="Move" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
      <topicdata group="api" notopic="" />
      <apidata name="Replace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
      <topicdata group="api" notopic="" />
      <apidata name="Reset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <topicdata group="api" />
      <apidata name="NotifyCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor">
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)" />
          <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <topicdata name="NotifyCollectionChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      <apidata name="NotifyCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <topicdata name="NotifyCollectionChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      <apidata name="NotifyCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems" />
        <element api="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)" />
        <element api="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="newItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="oldItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="newItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="oldItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="startingIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItems">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="changedItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="oldItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="oldItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
      <topicdata group="api" />
      <apidata name="NewItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewItems" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <topicdata group="api" />
      <apidata name="NewStartingIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewStartingIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
      <topicdata group="api" />
      <apidata name="OldItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldItems" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <topicdata group="api" />
      <apidata name="OldStartingIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldStartingIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
      <topicdata group="api" />
      <apidata name="NotifyCollectionChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.OrderedDictionary">
      <topicdata group="api" />
      <apidata name="OrderedDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.Configuration.AdapterDictionary" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Collections.Specialized.OrderedDictionary.#ctor">
          <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor" />
          <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)" />
          <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
          <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.AsReadOnly" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Clear" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.Count" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.IsReadOnly" />
        <element api="Overload:System.Collections.Specialized.OrderedDictionary.Item">
          <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)" />
        </element>
        <element api="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.OrderedDictionary">
      <topicdata name="OrderedDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.OrderedDictionary" />
      <apidata name="OrderedDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.AsReadOnly" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Clear" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.Remove(System.Object)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.OrderedDictionary">
      <topicdata name="OrderedDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.OrderedDictionary" />
      <apidata name="OrderedDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.OrderedDictionary.Count" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.IsReadOnly" />
        <element api="Overload:System.Collections.Specialized.OrderedDictionary.Item">
          <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Int32)" />
          <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)" />
        </element>
        <element api="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.OrderedDictionary.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
        <element api="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Collections.Specialized.OrderedDictionary.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Specialized.OrderedDictionary.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.AsReadOnly">
      <topicdata group="api" />
      <apidata name="AsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
        </member>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.OrderedDictionary.Item" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Collections.Specialized.OrderedDictionary.Item" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Specialized.IOrderedDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize">
      <topicdata group="api" eiiName="IDictionary.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <topicdata group="api" eiiName="IDeserializationCallback.OnDeserialization" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.OrderedDictionary.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.StringCollection">
      <topicdata group="api" />
      <apidata name="StringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.StringCollection.#ctor" />
        <element api="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
        <element api="M:System.Collections.Specialized.StringCollection.Clear" />
        <element api="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.Remove(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.StringCollection.Count" />
        <element api="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.StringCollection.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.StringCollection">
      <topicdata name="StringCollection" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.StringCollection" />
      <apidata name="StringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
        <element api="M:System.Collections.Specialized.StringCollection.Clear" />
        <element api="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.Remove(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.StringCollection">
      <topicdata name="StringCollection" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.StringCollection" />
      <apidata name="StringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.StringCollection.Count" />
        <element api="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringCollection.Item(System.Int32)" />
        <element api="P:System.Collections.Specialized.StringCollection.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Specialized.StringEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.StringDictionary">
      <topicdata group="api" />
      <apidata name="StringDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.StringDictionary.#ctor" />
        <element api="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.Clear" />
        <element api="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.ContainsValue(System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringDictionary.Remove(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.StringDictionary.Count" />
        <element api="P:System.Collections.Specialized.StringDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringDictionary.Item(System.String)" />
        <element api="P:System.Collections.Specialized.StringDictionary.Keys" />
        <element api="P:System.Collections.Specialized.StringDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.StringDictionary">
      <topicdata name="StringDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.StringDictionary" />
      <apidata name="StringDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringDictionary.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.Clear" />
        <element api="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.ContainsValue(System.String)" />
        <element api="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringDictionary.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringDictionary.Remove(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.StringDictionary">
      <topicdata name="StringDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.StringDictionary" />
      <apidata name="StringDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Collections.Specialized.StringDictionary.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.StringDictionary.Count" />
        <element api="P:System.Collections.Specialized.StringDictionary.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringDictionary.Item(System.String)" />
        <element api="P:System.Collections.Specialized.StringDictionary.Keys" />
        <element api="P:System.Collections.Specialized.StringDictionary.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.ContainsValue(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringDictionary.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringDictionary.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Collections.Specialized.StringEnumerator">
      <topicdata group="api" />
      <apidata name="StringEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <element api="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.StringEnumerator.Current" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
      </containers>
    </api>
    <api id="Methods.T:System.Collections.Specialized.StringEnumerator">
      <topicdata name="StringEnumerator" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Specialized.StringEnumerator" />
      <apidata name="StringEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <element api="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringEnumerator" />
      </containers>
    </api>
    <api id="Properties.T:System.Collections.Specialized.StringEnumerator">
      <topicdata name="StringEnumerator" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Specialized.StringEnumerator" />
      <apidata name="StringEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Specialized.StringEnumerator.Current" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringEnumerator" />
      </containers>
    </api>
    <api id="P:System.Collections.Specialized.StringEnumerator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringEnumerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringEnumerator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringEnumerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Collections.Specialized.StringEnumerator.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Collections.Specialized" />
        <type api="T:System.Collections.Specialized.StringEnumerator" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>