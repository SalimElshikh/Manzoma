<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.Build">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.Build.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.Build.Evaluation">
      <topicdata group="api" />
      <apidata name="Microsoft.Build.Evaluation" group="namespace" />
      <elements>
        <element api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" />
        <element api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" />
        <element api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" />
        <element api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" />
        <element api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" />
        <element api="T:Microsoft.Build.Evaluation.ProjectCollection" />
        <element api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler" />
        <element api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" />
        <element api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" />
        <element api="T:Microsoft.Build.Evaluation.Project" />
        <element api="T:Microsoft.Build.Evaluation.ProjectItem" />
        <element api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <element api="T:Microsoft.Build.Evaluation.ProjectMetadata" />
        <element api="T:Microsoft.Build.Evaluation.ProjectProperty" />
        <element api="T:Microsoft.Build.Evaluation.ResolvedImport" />
        <element api="T:Microsoft.Build.Evaluation.SubToolset" />
        <element api="T:Microsoft.Build.Evaluation.Toolset" />
      </elements>
    </api>
    <api id="T:Microsoft.Build.Evaluation.Project">
      <topicdata group="api" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.Evaluation.Project.#ctor">
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
          <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.AddItem">
          <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.AddItemFast">
          <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.Build">
          <element api="M:Microsoft.Build.Evaluation.Project.Build" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
          <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
          <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped">
          <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped">
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
        <element api="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.Save">
          <element api="M:Microsoft.Build.Evaluation.Project.Save" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
        <element api="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
        <element api="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
        <element api="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
        <element api="P:Microsoft.Build.Evaluation.Project.FullPath" />
        <element api="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.Imports" />
        <element api="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
        <element api="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
        <element api="P:Microsoft.Build.Evaluation.Project.IsDirty" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
        <element api="P:Microsoft.Build.Evaluation.Project.Items" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
        <element api="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
        <element api="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
        <element api="P:Microsoft.Build.Evaluation.Project.Properties" />
        <element api="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
        <element api="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
        <element api="P:Microsoft.Build.Evaluation.Project.Targets" />
        <element api="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
        <element api="P:Microsoft.Build.Evaluation.Project.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.Project">
      <topicdata name="Project" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.Project" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <elements>
        <element api="Overload:Microsoft.Build.Evaluation.Project.AddItem">
          <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.AddItemFast">
          <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.Build">
          <element api="M:Microsoft.Build.Evaluation.Project.Build" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
          <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
          <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
          <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped">
          <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped">
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
        <element api="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
        <element api="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="Overload:Microsoft.Build.Evaluation.Project.Save">
          <element api="M:Microsoft.Build.Evaluation.Project.Save" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
          <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
        <element api="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.Project">
      <topicdata name="Project" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.Project" />
      <apidata name="Project" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
        <element api="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
        <element api="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
        <element api="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
        <element api="P:Microsoft.Build.Evaluation.Project.FullPath" />
        <element api="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
        <element api="P:Microsoft.Build.Evaluation.Project.Imports" />
        <element api="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
        <element api="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
        <element api="P:Microsoft.Build.Evaluation.Project.IsDirty" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
        <element api="P:Microsoft.Build.Evaluation.Project.Items" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
        <element api="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
        <element api="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
        <element api="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
        <element api="P:Microsoft.Build.Evaluation.Project.Properties" />
        <element api="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
        <element api="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
        <element api="P:Microsoft.Build.Evaluation.Project.Targets" />
        <element api="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
        <element api="P:Microsoft.Build.Evaluation.Project.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
        <element api="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.AddItem">
      <topicdata name="AddItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.AddItemFast">
      <topicdata name="AddItemFast" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddItemFast" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.Build">
      <topicdata name="Build" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Build" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.Build" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        <element api="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
      <topicdata name="CreateProjectInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateProjectInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
        <element api="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped">
      <topicdata name="GetEvaluatedItemIncludeEscaped" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvaluatedItemIncludeEscaped" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped">
      <topicdata name="GetMetadataValueEscaped" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetMetadataValueEscaped" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Project.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Project.Save" />
        <element api="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
        <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
        <element api="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xml">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xml">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xml">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xml">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xml">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subToolsetVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="projectFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subToolsetVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Project.#ctor" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subToolsetVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="loadSettings">
          <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.AddItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <topicdata group="api" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.AddItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddItemFast" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.AddItemFast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <topicdata group="api" />
      <apidata name="AddItemFast" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.AddItemFast" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata">
      <topicdata group="api" />
      <apidata name="AllEvaluatedItemDefinitionMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllEvaluatedItemDefinitionMetadata" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems">
      <topicdata group="api" />
      <apidata name="AllEvaluatedItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllEvaluatedItems" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties">
      <topicdata group="api" />
      <apidata name="AllEvaluatedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllEvaluatedProperties" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logger">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteLoggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Logging.ForwardingLoggerRecord" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String)">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteLoggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Logging.ForwardingLoggerRecord" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String[])">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targets">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targets">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <topicdata group="api" />
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Build" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targets">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteLoggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Logging.ForwardingLoggerRecord" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ConditionedProperties">
      <topicdata group="api" />
      <apidata name="ConditionedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConditionedProperties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
      <topicdata group="api" />
      <apidata name="CreateProjectInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.Build.Execution.ProjectInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)">
      <topicdata group="api" />
      <apidata name="CreateProjectInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:Microsoft.Build.Execution.ProjectInstanceSettings" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Execution.ProjectInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.DirectoryPath">
      <topicdata group="api" />
      <apidata name="DirectoryPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DirectoryPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty">
      <topicdata group="api" />
      <apidata name="DisableMarkDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisableMarkDirty" />
      <setter name="set_DisableMarkDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.EvaluationCounter">
      <topicdata group="api" />
      <apidata name="EvaluationCounter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluationCounter" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)">
      <topicdata group="api" />
      <apidata name="ExpandString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unexpandedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.FullPath">
      <topicdata group="api" />
      <apidata name="FullPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullPath" />
      <setter name="set_FullPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedItemIncludeEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)">
      <topicdata group="api" />
      <apidata name="GetEvaluatedItemIncludeEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)">
      <topicdata group="api" />
      <apidata name="GetItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)">
      <topicdata group="api" />
      <apidata name="GetItemsByEvaluatedInclude" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="evaluatedInclude">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)">
      <topicdata group="api" />
      <apidata name="GetItemsIgnoringCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetLogicalProject">
      <topicdata group="api" />
      <apidata name="GetLogicalProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Construction.ProjectElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadataValueEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadataValueEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)">
      <topicdata group="api" />
      <apidata name="GetMetadataValueEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadatum">
          <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)">
      <topicdata group="api" />
      <apidata name="GetPropertyValueEscaped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.GlobalProperties">
      <topicdata group="api" />
      <apidata name="GlobalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalProperties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.Imports">
      <topicdata group="api" />
      <apidata name="Imports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Imports" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ResolvedImport" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates">
      <topicdata group="api" />
      <apidata name="ImportsIncludingDuplicates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImportsIncludingDuplicates" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ResolvedImport" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled">
      <topicdata group="api" />
      <apidata name="IsBuildEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsBuildEnabled" />
      <setter name="set_IsBuildEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ItemDefinitions">
      <topicdata group="api" />
      <apidata name="ItemDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemDefinitions" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition">
      <topicdata group="api" />
      <apidata name="ItemsIgnoringCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemsIgnoringCondition" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ItemTypes">
      <topicdata group="api" />
      <apidata name="ItemTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemTypes" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.MarkDirty">
      <topicdata group="api" />
      <apidata name="MarkDirty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ProjectCollection">
      <topicdata group="api" />
      <apidata name="ProjectCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProjectCollection" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation">
      <topicdata group="api" />
      <apidata name="ProjectFileLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProjectFileLocation" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ElementLocation" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary">
      <topicdata group="api" />
      <apidata name="ReevaluateIfNecessary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveGlobalProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
      <topicdata group="api" />
      <apidata name="RemoveItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)">
      <topicdata group="api" />
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Save" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Save(System.String)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Project.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="SaveLogicalProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetGlobalProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="escapedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.SkipEvaluation">
      <topicdata group="api" />
      <apidata name="SkipEvaluation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SkipEvaluation" />
      <setter name="set_SkipEvaluation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion">
      <topicdata group="api" />
      <apidata name="SubToolsetVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubToolsetVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.Targets">
      <topicdata group="api" />
      <apidata name="Targets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Targets" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.Build.Execution.ProjectTargetInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.ToolsVersion">
      <topicdata group="api" />
      <apidata name="ToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Project.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ProjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectChangedEventArgs">
      <topicdata name="ProjectChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" />
      <apidata name="ProjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectChangedEventArgs">
      <topicdata name="ProjectChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" />
      <apidata name="ProjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Project" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectCollection">
      <topicdata group="api" />
      <apidata name="ProjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Count" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Loggers" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Version" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectCollection">
      <topicdata name="ProjectCollection" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollection" />
      <apidata name="ProjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects" />
        <element api="Overload:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject">
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)" />
          <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectCollection">
      <topicdata name="ProjectCollection" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollection" />
      <apidata name="ProjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Count" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Loggers" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.Version" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" />
      </containers>
    </api>
    <api id="Events.T:Microsoft.Build.Evaluation.ProjectCollection">
      <topicdata name="ProjectCollection" group="list" subgroup="Events" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollection" />
      <apidata name="ProjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <elements>
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged" />
        <element api="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject">
      <topicdata name="LoadProject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject">
      <topicdata name="UnloadProject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnloadProject" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <parameters>
        <parameter name="toolsetLocations">
          <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsetDefinitionLocations">
          <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.#ctor" />
      <parameters>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteLoggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Logging.ForwardingLoggerRecord" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsetDefinitionLocations">
          <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
        </parameter>
        <parameter name="maxNodeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="onlyLogCriticalEvents">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)">
      <topicdata group="api" />
      <apidata name="AddToolset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toolset">
          <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsToolset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion">
      <topicdata group="api" />
      <apidata name="DefaultToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultToolsVersion" />
      <setter name="set_DefaultToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty">
      <topicdata group="api" />
      <apidata name="DisableMarkDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisableMarkDirty" />
      <setter name="set_DisableMarkDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)">
      <topicdata group="api" />
      <apidata name="Escape" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unescapedString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)">
      <topicdata group="api" />
      <apidata name="GetGlobalProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Execution.ProjectPropertyInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)">
      <topicdata group="api" />
      <apidata name="GetLoadedProjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fullPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)">
      <topicdata group="api" />
      <apidata name="GetToolset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection">
      <topicdata group="api" />
      <apidata name="GlobalProjectCollection" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalProjectCollection" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties">
      <topicdata group="api" />
      <apidata name="GlobalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalProperties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices">
      <topicdata group="api" />
      <apidata name="HostServices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostServices" />
      <setter name="set_HostServices" />
      <returns>
        <type api="T:Microsoft.Build.Execution.HostServices" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled">
      <topicdata group="api" />
      <apidata name="IsBuildEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsBuildEnabled" />
      <setter name="set_IsBuildEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects">
      <topicdata group="api" />
      <apidata name="LoadedProjects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoadedProjects" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="globalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)">
      <topicdata group="api" />
      <apidata name="LoadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.LoadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.Loggers">
      <topicdata group="api" />
      <apidata name="Loggers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Loggers" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents">
      <topicdata group="api" />
      <apidata name="OnlyLogCriticalEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnlyLogCriticalEvents" />
      <setter name="set_OnlyLogCriticalEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded">
      <topicdata group="api" />
      <apidata name="ProjectAdded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProjectAdded" />
      <remover name="remove_ProjectAdded" />
      <eventhandler>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler" ref="true">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" ref="true">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </type>
      </eventargs>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged">
      <topicdata group="api" />
      <apidata name="ProjectChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProjectChanged" />
      <remover name="remove_ProjectChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged">
      <topicdata group="api" />
      <apidata name="ProjectCollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProjectCollectionChanged" />
      <remover name="remove_ProjectCollectionChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged">
      <topicdata group="api" />
      <apidata name="ProjectXmlChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProjectXmlChanged" />
      <remover name="remove_ProjectXmlChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <topicdata group="api" />
      <apidata name="RegisterForwardingLoggers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="remoteLoggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Logging.ForwardingLoggerRecord" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)">
      <topicdata group="api" />
      <apidata name="RegisterLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logger">
          <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <topicdata group="api" />
      <apidata name="RegisterLoggers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loggers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Framework.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets">
      <topicdata group="api" />
      <apidata name="RemoveAllToolsets" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveGlobalProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveToolset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetGlobalProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation">
      <topicdata group="api" />
      <apidata name="SkipEvaluation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SkipEvaluation" />
      <setter name="set_SkipEvaluation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations">
      <topicdata group="api" />
      <apidata name="ToolsetLocations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsetLocations" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets">
      <topicdata group="api" />
      <apidata name="Toolsets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Toolsets" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <topicdata group="api" />
      <apidata name="TryUnloadProject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectRootElement">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)">
      <topicdata group="api" />
      <apidata name="Unescape" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="escapedString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects">
      <topicdata group="api" />
      <apidata name="UnloadAllProjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <topicdata group="api" />
      <apidata name="UnloadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="projectRootElement">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)">
      <topicdata group="api" />
      <apidata name="UnloadProject" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="project">
          <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers">
      <topicdata group="api" />
      <apidata name="UnregisterAllLoggers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler">
      <topicdata group="api" />
      <apidata name="ProjectAddedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" ref="true">
            <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs">
      <topicdata group="api" />
      <apidata name="ProjectAddedToProjectCollectionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs">
      <topicdata name="ProjectAddedToProjectCollectionEventArgs" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" />
      <apidata name="ProjectAddedToProjectCollectionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs">
      <topicdata name="ProjectAddedToProjectCollectionEventArgs" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" />
      <apidata name="ProjectAddedToProjectCollectionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="element">
          <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" ref="true">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement">
      <topicdata group="api" />
      <apidata name="ProjectRootElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProjectRootElement" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs" ref="true">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ProjectCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs">
      <topicdata name="ProjectCollectionChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" />
      <apidata name="ProjectCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs">
      <topicdata name="ProjectCollectionChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" />
      <apidata name="ProjectCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Changed" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState">
      <topicdata group="api" />
      <apidata name="ProjectCollectionChangedState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DefaultToolsVersion" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Toolsets" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Loggers" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.GlobalProperties" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.IsBuildEnabled" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.OnlyLogCriticalEvents" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.HostServices" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DisableMarkDirty" />
        <element api="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.SkipEvaluation" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DefaultToolsVersion">
      <topicdata group="api" notopic="" />
      <apidata name="DefaultToolsVersion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DisableMarkDirty">
      <topicdata group="api" notopic="" />
      <apidata name="DisableMarkDirty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.GlobalProperties">
      <topicdata group="api" notopic="" />
      <apidata name="GlobalProperties" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.HostServices">
      <topicdata group="api" notopic="" />
      <apidata name="HostServices" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.IsBuildEnabled">
      <topicdata group="api" notopic="" />
      <apidata name="IsBuildEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Loggers">
      <topicdata group="api" notopic="" />
      <apidata name="Loggers" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.OnlyLogCriticalEvents">
      <topicdata group="api" notopic="" />
      <apidata name="OnlyLogCriticalEvents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.SkipEvaluation">
      <topicdata group="api" notopic="" />
      <apidata name="SkipEvaluation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Toolsets">
      <topicdata group="api" notopic="" />
      <apidata name="Toolsets" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectItem">
      <topicdata group="api" />
      <apidata name="ProjectItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectItem">
      <topicdata name="ProjectItem" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectItem" />
      <apidata name="ProjectItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectItem">
      <topicdata name="ProjectItem" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectItem" />
      <apidata name="ProjectItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata">
      <topicdata group="api" />
      <apidata name="DirectMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DirectMetadata" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount">
      <topicdata group="api" />
      <apidata name="DirectMetadataCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DirectMetadataCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude">
      <topicdata group="api" />
      <apidata name="EvaluatedInclude" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_EvaluatedInclude" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadataValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="HasMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.ItemType">
      <topicdata group="api" />
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ItemType" />
      <setter name="set_ItemType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.Metadata">
      <topicdata group="api" />
      <apidata name="Metadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Metadata" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount">
      <topicdata group="api" />
      <apidata name="MetadataCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MetadataCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.Project">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Project" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)">
      <topicdata group="api" />
      <apidata name="Rename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetMetadataValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude">
      <topicdata group="api" />
      <apidata name="UnevaluatedInclude" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnevaluatedInclude" />
      <setter name="set_UnevaluatedInclude" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItem.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectItemElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItem" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectItemDefinition">
      <topicdata group="api" />
      <apidata name="ProjectItemDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectItemDefinition">
      <topicdata name="ProjectItemDefinition" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
      <apidata name="ProjectItemDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)" />
        <element api="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectItemDefinition">
      <topicdata name="ProjectItemDefinition" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
      <apidata name="ProjectItemDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount" />
        <element api="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)">
      <topicdata group="api" />
      <apidata name="GetMetadataValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType">
      <topicdata group="api" />
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ItemType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata">
      <topicdata group="api" />
      <apidata name="Metadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Metadata" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount">
      <topicdata group="api" />
      <apidata name="MetadataCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MetadataCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Project" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetMetadataValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="unevaluatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectItemDefinition" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectLoadSettings">
      <topicdata group="api" />
      <apidata name="ProjectLoadSettings" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.Evaluation.ProjectLoadSettings.Default" />
        <element api="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports" />
        <element api="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports" />
        <element api="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectLoadSettings.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreMissingImports" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports">
      <topicdata group="api" notopic="" />
      <apidata name="RecordDuplicateButNotCircularImports" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports">
      <topicdata group="api" notopic="" />
      <apidata name="RejectCircularImports" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectLoadSettings" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectMetadata">
      <topicdata group="api" />
      <apidata name="ProjectMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectMetadata">
      <topicdata name="ProjectMetadata" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectMetadata" />
      <apidata name="ProjectMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectMetadata">
      <topicdata name="ProjectMetadata" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectMetadata" />
      <apidata name="ProjectMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation">
      <topicdata group="api" />
      <apidata name="ConditionLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConditionLocation" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ElementLocation" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue">
      <topicdata group="api" />
      <apidata name="EvaluatedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluatedValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType">
      <topicdata group="api" />
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Location" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ElementLocation" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor">
      <topicdata group="api" />
      <apidata name="Predecessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Predecessor" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.Project">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Project" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)">
      <topicdata group="api" eiiName="IEquatable`1.Equals" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue">
      <topicdata group="api" />
      <apidata name="UnevaluatedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnevaluatedValue" />
      <setter name="set_UnevaluatedValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectMetadataElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectProperty">
      <topicdata group="api" />
      <apidata name="ProjectProperty" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Name" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectProperty">
      <topicdata name="ProjectProperty" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectProperty" />
      <apidata name="ProjectProperty" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectProperty">
      <topicdata name="ProjectProperty" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectProperty" />
      <apidata name="ProjectProperty" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Name" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Project" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
        <element api="P:Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue">
      <topicdata group="api" />
      <apidata name="EvaluatedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_EvaluatedValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty">
      <topicdata group="api" />
      <apidata name="IsEnvironmentProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEnvironmentProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty">
      <topicdata group="api" />
      <apidata name="IsGlobalProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsGlobalProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty">
      <topicdata group="api" />
      <apidata name="IsReservedProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReservedProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor">
      <topicdata group="api" />
      <apidata name="Predecessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Predecessor" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.Project">
      <topicdata group="api" />
      <apidata name="Project" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Project" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.Project" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)">
      <topicdata group="api" eiiName="IEquatable`1.Equals" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue">
      <topicdata group="api" />
      <apidata name="UnevaluatedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UnevaluatedValue" />
      <setter name="set_UnevaluatedValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectProperty.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectPropertyElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectProperty" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ProjectXmlChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml" />
        <element api="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs">
      <topicdata name="ProjectXmlChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" />
      <apidata name="ProjectXmlChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs">
      <topicdata name="ProjectXmlChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" />
      <apidata name="ProjectXmlChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml" />
        <element api="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml">
      <topicdata group="api" />
      <apidata name="ProjectXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProjectXml" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ResolvedImport">
      <topicdata group="api" />
      <apidata name="ResolvedImport" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject" />
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement" />
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.IsImported" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.ResolvedImport">
      <topicdata name="ResolvedImport" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.ResolvedImport" />
      <apidata name="ResolvedImport" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ResolvedImport" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.ResolvedImport">
      <topicdata name="ResolvedImport" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.ResolvedImport" />
      <apidata name="ResolvedImport" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject" />
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement" />
        <element api="P:Microsoft.Build.Evaluation.ResolvedImport.IsImported" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ResolvedImport" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject">
      <topicdata group="api" />
      <apidata name="ImportedProject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImportedProject" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectRootElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ResolvedImport" ref="false" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement">
      <topicdata group="api" />
      <apidata name="ImportingElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImportingElement" />
      <returns>
        <type api="T:Microsoft.Build.Construction.ProjectImportElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ResolvedImport" ref="false" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.ResolvedImport.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsImported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ResolvedImport" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.SubToolset">
      <topicdata group="api" />
      <apidata name="SubToolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.SubToolset.Properties" />
        <element api="P:Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.SubToolset">
      <topicdata name="SubToolset" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.SubToolset" />
      <apidata name="SubToolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.SubToolset" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.SubToolset">
      <topicdata name="SubToolset" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.SubToolset" />
      <apidata name="SubToolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.SubToolset.Properties" />
        <element api="P:Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.SubToolset" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.SubToolset.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.Build.Execution.ProjectPropertyInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.SubToolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion">
      <topicdata group="api" />
      <apidata name="SubToolsetVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubToolsetVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.SubToolset" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.Toolset">
      <topicdata group="api" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Microsoft.Build.Evaluation.Toolset.#ctor">
          <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)" />
          <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)" />
        </element>
        <element api="Overload:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion">
          <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion" />
          <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.Properties" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.SubToolsets" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.ToolsPath" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.ToolsVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.Build.Evaluation.Toolset">
      <topicdata name="Toolset" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Build.Evaluation.Toolset" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion">
          <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion" />
          <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)" />
        </element>
        <element api="M:Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.Build.Evaluation.Toolset">
      <topicdata name="Toolset" group="list" subgroup="Properties" typeTopicId="T:Microsoft.Build.Evaluation.Toolset" />
      <apidata name="Toolset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.Properties" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.SubToolsets" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.ToolsPath" />
        <element api="P:Microsoft.Build.Evaluation.Toolset.ToolsVersion" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Toolset.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)" />
        <element api="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion">
      <topicdata name="GenerateSubToolsetVersion" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GenerateSubToolsetVersion" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion" />
        <element api="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Toolset.#ctor" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="msbuildOverrideTasksPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Toolset.#ctor" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buildProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="subToolsets">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Microsoft.Build.Evaluation.SubToolset" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="msbuildOverrideTasksPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.Build.Evaluation.Toolset.#ctor" />
      <parameters>
        <parameter name="toolsVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toolsPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buildProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projectCollection">
          <type api="T:Microsoft.Build.Evaluation.ProjectCollection" ref="true" />
        </parameter>
        <parameter name="msbuildOverrideTasksPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion">
      <topicdata group="api" />
      <apidata name="DefaultSubToolsetVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultSubToolsetVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion">
      <topicdata group="api" />
      <apidata name="GenerateSubToolsetVersion" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateSubToolsetVersion" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="overrideGlobalProperties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="solutionVersion">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subToolsetVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Build.Execution.ProjectPropertyInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Toolset.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.Build.Execution.ProjectPropertyInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Toolset.SubToolsets">
      <topicdata group="api" />
      <apidata name="SubToolsets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubToolsets" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.Build.Evaluation.SubToolset" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Toolset.ToolsPath">
      <topicdata group="api" />
      <apidata name="ToolsPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.Build.Evaluation.Toolset.ToolsVersion">
      <topicdata group="api" />
      <apidata name="ToolsVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ToolsVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.Toolset" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations">
      <topicdata group="api" />
      <apidata name="ToolsetDefinitionLocations" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None" />
        <element api="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile" />
        <element api="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry" />
      </elements>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile">
      <topicdata group="api" notopic="" />
      <apidata name="ConfigurationFile" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry">
      <topicdata group="api" notopic="" />
      <apidata name="Registry" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.Build" module="Microsoft.Build" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.Build.Evaluation" />
        <type api="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>