<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.IdentityModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Security">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Security" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />
        <element api="T:System.ServiceModel.Security.KeyNameIdentifierClause" />
        <element api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />
        <element api="T:System.ServiceModel.Security.X509CertificateValidationMode" />
        <element api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />
        <element api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />
        <element api="T:System.ServiceModel.Security.SecureConversationVersion" />
        <element api="T:System.ServiceModel.Security.SecurityVersion" />
        <element api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />
        <element api="T:System.ServiceModel.Security.SecurityPolicyVersion" />
        <element api="T:System.ServiceModel.Security.TrustVersion" />
        <element api="T:System.ServiceModel.Security.NonceCache" />
        <element api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />
        <element api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />
        <element api="T:System.ServiceModel.Security.SecurityTokenSpecification" />
        <element api="T:System.ServiceModel.Security.SupportingTokenSpecification" />
        <element api="T:System.ServiceModel.Security.IdentityVerifier" />
        <element api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
        <element api="T:System.ServiceModel.Security.MessagePartSpecification" />
        <element api="T:System.ServiceModel.Security.MessageProtectionOrder" />
        <element api="T:System.ServiceModel.Security.MessageSecurityException" />
        <element api="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
        <element api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
        <element api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
        <element api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />
        <element api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />
        <element api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />
        <element api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />
        <element api="T:System.ServiceModel.Security.SecurityMessageProperty" />
        <element api="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
        <element api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />
        <element api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />
        <element api="T:System.ServiceModel.Security.SecurityStateEncoder" />
        <element api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />
        <element api="T:System.ServiceModel.Security.SecurityNegotiationException" />
        <element api="T:System.ServiceModel.Security.ISecureConversationSession" />
        <element api="T:System.ServiceModel.Security.ISecuritySession" />
        <element api="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" />
        <element api="T:System.ServiceModel.Security.SecurityCredentialsManager" />
        <element api="T:System.ServiceModel.Security.HttpDigestClientCredential" />
        <element api="T:System.ServiceModel.Security.IEndpointIdentityProvider" />
        <element api="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
        <element api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />
        <element api="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
        <element api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
        <element api="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />
        <element api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
        <element api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />
        <element api="T:System.ServiceModel.Security.WindowsClientCredential" />
        <element api="T:System.ServiceModel.Security.WindowsServiceCredential" />
        <element api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />
        <element api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
        <element api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
        <element api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
        <element api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
        <element api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />
        <element api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
        <element api="T:System.ServiceModel.Security.PeerCredential" />
        <element api="T:System.ServiceModel.Security.DispatchContext" />
        <element api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" />
        <element api="T:System.ServiceModel.Security.IWSTrust13SyncContract" />
        <element api="T:System.ServiceModel.Security.IWSTrustChannelContract" />
        <element api="T:System.ServiceModel.Security.IWSTrustContract" />
        <element api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" />
        <element api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" />
        <element api="T:System.ServiceModel.Security.WSTrustChannel" />
        <element api="T:System.ServiceModel.Security.WSTrustChannelFactory" />
        <element api="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" />
        <element api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" />
        <element api="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" />
        <element api="T:System.ServiceModel.Security.WSTrustServiceContract" />
        <element api="T:System.ServiceModel.Security.WSTrustServiceHost" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="Basic128SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite">
      <topicdata name="Basic128SecurityAlgorithmSuite" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />
      <apidata name="Basic128SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite">
      <topicdata name="Basic128SecurityAlgorithmSuite" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />
      <apidata name="Basic128SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultCanonicalizationAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCanonicalizationAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultDigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultDigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultSignatureKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSignatureKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="Basic192SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite">
      <topicdata name="Basic192SecurityAlgorithmSuite" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />
      <apidata name="Basic192SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite">
      <topicdata name="Basic192SecurityAlgorithmSuite" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />
      <apidata name="Basic192SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultCanonicalizationAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCanonicalizationAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultDigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultDigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultSignatureKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSignatureKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="Basic256SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite">
      <topicdata name="Basic256SecurityAlgorithmSuite" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />
      <apidata name="Basic256SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite">
      <topicdata name="Basic256SecurityAlgorithmSuite" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />
      <apidata name="Basic256SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultCanonicalizationAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCanonicalizationAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultDigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultDigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultSignatureKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSignatureKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <topicdata group="api" />
      <apidata name="BasicSecurityProfileVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <topicdata name="BasicSecurityProfileVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />
      <apidata name="BasicSecurityProfileVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <topicdata name="BasicSecurityProfileVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />
      <apidata name="BasicSecurityProfileVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10">
      <topicdata group="api" />
      <apidata name="BasicSecurityProfile10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BasicSecurityProfile10" />
      <returns>
        <type api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BasicSecurityProfileVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="BinarySecretKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor">
          <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean)" />
          <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CreateKey" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.GetKeyBytes" />
        <element api="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CanCreateKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause">
      <topicdata name="BinarySecretKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />
      <apidata name="BinarySecretKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CreateKey" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.GetKeyBytes" />
        <element api="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause">
      <topicdata name="BinarySecretKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />
      <apidata name="BinarySecretKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CanCreateKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean)" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.GetKeyBytes">
      <topicdata group="api" />
      <apidata name="GetKeyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ChannelProtectionRequirements">
      <topicdata group="api" />
      <apidata name="ChannelProtectionRequirements" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor">
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.Add">
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)" />
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse" />
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ChannelProtectionRequirements">
      <topicdata name="ChannelProtectionRequirements" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      <apidata name="ChannelProtectionRequirements" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.Add">
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)" />
          <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse" />
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ChannelProtectionRequirements">
      <topicdata name="ChannelProtectionRequirements" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      <apidata name="ChannelProtectionRequirements" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts" />
        <element api="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)" />
        <element api="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="protectionRequirements">
          <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ChannelProtectionRequirements.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="protectionRequirements">
          <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
        </parameter>
        <parameter name="channelScopeOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse">
      <topicdata group="api" />
      <apidata name="CreateInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts">
      <topicdata group="api" />
      <apidata name="IncomingEncryptionParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingEncryptionParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts">
      <topicdata group="api" />
      <apidata name="IncomingSignatureParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingSignatureParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts">
      <topicdata group="api" />
      <apidata name="OutgoingEncryptionParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingEncryptionParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts">
      <topicdata group="api" />
      <apidata name="OutgoingSignatureParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingSignatureParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ChannelProtectionRequirements" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder">
      <topicdata group="api" />
      <apidata name="DataProtectionSecurityStateEncoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor">
          <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
          <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean)" />
          <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean,System.Byte[])" />
        </element>
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.DecodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.EncodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.GetEntropy" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.ToString" />
        <element api="P:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.UseCurrentUserProtectionScope" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder">
      <topicdata name="DataProtectionSecurityStateEncoder" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />
      <apidata name="DataProtectionSecurityStateEncoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.DecodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.EncodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.GetEntropy" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder">
      <topicdata name="DataProtectionSecurityStateEncoder" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />
      <apidata name="DataProtectionSecurityStateEncoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.UseCurrentUserProtectionScope" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean)" />
        <element api="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <parameters>
        <parameter name="useCurrentUserProtectionScope">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor" />
      <parameters>
        <parameter name="useCurrentUserProtectionScope">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="entropy">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecodeSecurityState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncodeSecurityState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.GetEntropy">
      <topicdata group="api" />
      <apidata name="GetEntropy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.UseCurrentUserProtectionScope">
      <topicdata group="api" />
      <apidata name="UseCurrentUserProtectionScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseCurrentUserProtectionScope" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.DispatchContext">
      <topicdata group="api" />
      <apidata name="DispatchContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DispatchContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.DispatchContext.#ctor" />
        <element api="P:System.ServiceModel.Security.DispatchContext.Principal" />
        <element api="P:System.ServiceModel.Security.DispatchContext.RequestAction" />
        <element api="P:System.ServiceModel.Security.DispatchContext.RequestMessage" />
        <element api="P:System.ServiceModel.Security.DispatchContext.ResponseAction" />
        <element api="P:System.ServiceModel.Security.DispatchContext.ResponseMessage" />
        <element api="P:System.ServiceModel.Security.DispatchContext.SecurityTokenService" />
        <element api="P:System.ServiceModel.Security.DispatchContext.TrustNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.DispatchContext">
      <topicdata name="DispatchContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.DispatchContext" />
      <apidata name="DispatchContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DispatchContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.DispatchContext">
      <topicdata name="DispatchContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.DispatchContext" />
      <apidata name="DispatchContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.DispatchContext.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.DispatchContext.Principal" />
        <element api="P:System.ServiceModel.Security.DispatchContext.RequestAction" />
        <element api="P:System.ServiceModel.Security.DispatchContext.RequestMessage" />
        <element api="P:System.ServiceModel.Security.DispatchContext.ResponseAction" />
        <element api="P:System.ServiceModel.Security.DispatchContext.ResponseMessage" />
        <element api="P:System.ServiceModel.Security.DispatchContext.SecurityTokenService" />
        <element api="P:System.ServiceModel.Security.DispatchContext.TrustNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.DispatchContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.Principal">
      <topicdata group="api" />
      <apidata name="Principal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Principal" />
      <setter name="set_Principal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.RequestAction">
      <topicdata group="api" />
      <apidata name="RequestAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestAction" />
      <setter name="set_RequestAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.RequestMessage">
      <topicdata group="api" />
      <apidata name="RequestMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestMessage" />
      <setter name="set_RequestMessage" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.ResponseAction">
      <topicdata group="api" />
      <apidata name="ResponseAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseAction" />
      <setter name="set_ResponseAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.ResponseMessage">
      <topicdata group="api" />
      <apidata name="ResponseMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseMessage" />
      <setter name="set_ResponseMessage" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.SecurityTokenService">
      <topicdata group="api" />
      <apidata name="SecurityTokenService" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityTokenService" />
      <setter name="set_SecurityTokenService" />
      <returns>
        <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.DispatchContext.TrustNamespace">
      <topicdata group="api" />
      <apidata name="TrustNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustNamespace" />
      <setter name="set_TrustNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <topicdata group="api" />
      <apidata name="ExpiredSecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor">
          <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
          <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <topicdata name="ExpiredSecurityTokenException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      <apidata name="ExpiredSecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <topicdata name="ExpiredSecurityTokenException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      <apidata name="ExpiredSecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <topicdata name="ExpiredSecurityTokenException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      <apidata name="ExpiredSecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
        <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <topicdata group="api" />
      <apidata name="HttpDigestClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
        <element api="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.HttpDigestClientCredential">
      <topicdata name="HttpDigestClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.HttpDigestClientCredential" />
      <apidata name="HttpDigestClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.HttpDigestClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.HttpDigestClientCredential">
      <topicdata name="HttpDigestClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.HttpDigestClientCredential" />
      <apidata name="HttpDigestClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
        <element api="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.HttpDigestClientCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel">
      <topicdata group="api" />
      <apidata name="AllowedImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowedImpersonationLevel" />
      <setter name="set_AllowedImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.HttpDigestClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <topicdata group="api" />
      <apidata name="ClientCredential" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredential" />
      <setter name="set_ClientCredential" />
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.HttpDigestClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IdentityVerifier">
      <topicdata group="api" />
      <apidata name="IdentityVerifier" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IdentityVerifier">
      <topicdata name="IdentityVerifier" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IdentityVerifier" />
      <apidata name="IdentityVerifier" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
        <element api="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IdentityVerifier" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IdentityVerifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IdentityVerifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)">
      <topicdata group="api" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
        </parameter>
        <parameter name="authContext">
          <type api="T:System.IdentityModel.Policy.AuthorizationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IdentityVerifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault">
      <topicdata group="api" />
      <apidata name="CreateDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.Security.IdentityVerifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IdentityVerifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)">
      <topicdata group="api" />
      <apidata name="TryGetIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reference">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="identity" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IdentityVerifier" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IEndpointIdentityProvider">
      <topicdata group="api" />
      <apidata name="IEndpointIdentityProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IEndpointIdentityProvider">
      <topicdata name="IEndpointIdentityProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IEndpointIdentityProvider" />
      <apidata name="IEndpointIdentityProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IEndpointIdentityProvider" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="GetIdentityOfSelf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IEndpointIdentityProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
      <topicdata group="api" />
      <apidata name="ImpersonateOnSerializingReplyMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet">
          <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
          <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
        </element>
        <element api="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
      <topicdata name="ImpersonateOnSerializingReplyMessageProperty" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
      <apidata name="ImpersonateOnSerializingReplyMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet">
          <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
          <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
      <topicdata name="ImpersonateOnSerializingReplyMessageProperty" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
      <apidata name="ImpersonateOnSerializingReplyMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet">
      <topicdata name="TryGet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryGet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
        <element api="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
          <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="StartImpersonation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="impersonationContext" out="true">
          <referenceTo>
            <type api="T:System.IDisposable" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="originalPrincipal" out="true">
          <referenceTo>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="isThreadPrincipalSet" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
      <topicdata group="api" />
      <apidata name="StopImpersonation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="impersonationContext">
          <type api="T:System.IDisposable" ref="true" />
        </parameter>
        <parameter name="originalPrincipal">
          <type api="T:System.Security.Principal.IPrincipal" ref="true" />
        </parameter>
        <parameter name="isThreadPrincipalSet">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
      <topicdata group="api" />
      <apidata name="TryGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="property" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
      <topicdata group="api" />
      <apidata name="TryGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.ServiceModel.Channels.MessageProperties" ref="true" />
        </parameter>
        <parameter name="property" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer">
      <topicdata group="api" />
      <apidata name="InfocardInteractiveChannelInitializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.#ctor(System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.Binding" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer">
      <topicdata name="InfocardInteractiveChannelInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />
      <apidata name="InfocardInteractiveChannelInitializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer">
      <topicdata name="InfocardInteractiveChannelInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />
      <apidata name="InfocardInteractiveChannelInitializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.Binding" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.#ctor(System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="credentials">
          <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Binding" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ISecureConversationSession">
      <topicdata group="api" />
      <apidata name="ISecureConversationSession" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Security.ISecuritySession" ref="true" />
        <type api="T:System.ServiceModel.Channels.ISession" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ServiceModel.Security.ISecureConversationSession.TryReadSessionTokenIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.ISecureConversationSession.WriteSessionTokenIdentifier(System.Xml.XmlDictionaryWriter)" />
        <element api="P:System.ServiceModel.Channels.ISession.Id" />
        <element api="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ISecureConversationSession">
      <topicdata name="ISecureConversationSession" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ISecureConversationSession" />
      <apidata name="ISecureConversationSession" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.ISecureConversationSession.TryReadSessionTokenIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.ISecureConversationSession.WriteSessionTokenIdentifier(System.Xml.XmlDictionaryWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecureConversationSession" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ISecureConversationSession">
      <topicdata name="ISecureConversationSession" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ISecureConversationSession" />
      <apidata name="ISecureConversationSession" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.ISession.Id" />
        <element api="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecureConversationSession" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ISecureConversationSession.TryReadSessionTokenIdentifier(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="TryReadSessionTokenIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecureConversationSession" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ISecureConversationSession.WriteSessionTokenIdentifier(System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="WriteSessionTokenIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecureConversationSession" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ISecuritySession">
      <topicdata group="api" />
      <apidata name="ISecuritySession" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Channels.ISession" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.Security.ISecureConversationSession" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.ServiceModel.Channels.ISession.Id" />
        <element api="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ISecuritySession">
      <topicdata name="ISecuritySession" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ISecuritySession" />
      <apidata name="ISecuritySession" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.ISession.Id" />
        <element api="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecuritySession" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity">
      <topicdata group="api" />
      <apidata name="RemoteIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteIdentity" />
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ISecuritySession" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IssuedTokenClientCredential">
      <topicdata group="api" />
      <apidata name="IssuedTokenClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IssuedTokenClientCredential">
      <topicdata name="IssuedTokenClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
      <apidata name="IssuedTokenClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.IssuedTokenClientCredential">
      <topicdata name="IssuedTokenClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
      <apidata name="IssuedTokenClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors" />
        <element api="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens">
      <topicdata group="api" />
      <apidata name="CacheIssuedTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheIssuedTokens" />
      <setter name="set_CacheIssuedTokens" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode">
      <topicdata group="api" />
      <apidata name="DefaultKeyEntropyMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultKeyEntropyMode" />
      <setter name="set_DefaultKeyEntropyMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage">
      <topicdata group="api" />
      <apidata name="IssuedTokenRenewalThresholdPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuedTokenRenewalThresholdPercentage" />
      <setter name="set_IssuedTokenRenewalThresholdPercentage" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors">
      <topicdata group="api" />
      <apidata name="IssuerChannelBehaviors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerChannelBehaviors" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
            <type api="T:System.Collections.Generic.KeyedByTypeCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress">
      <topicdata group="api" />
      <apidata name="LocalIssuerAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LocalIssuerAddress" />
      <setter name="set_LocalIssuerAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding">
      <topicdata group="api" />
      <apidata name="LocalIssuerBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LocalIssuerBinding" />
      <setter name="set_LocalIssuerBinding" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors">
      <topicdata group="api" />
      <apidata name="LocalIssuerChannelBehaviors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalIssuerChannelBehaviors" />
      <returns>
        <type api="T:System.Collections.Generic.KeyedByTypeCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime">
      <topicdata group="api" />
      <apidata name="MaxIssuedTokenCachingTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxIssuedTokenCachingTime" />
      <setter name="set_MaxIssuedTokenCachingTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IssuedTokenServiceCredential">
      <topicdata group="api" />
      <apidata name="IssuedTokenServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowedAudienceUris" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AudienceUriMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IssuedTokenServiceCredential">
      <topicdata name="IssuedTokenServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />
      <apidata name="IssuedTokenServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.IssuedTokenServiceCredential">
      <topicdata name="IssuedTokenServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />
      <apidata name="IssuedTokenServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowedAudienceUris" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AudienceUriMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer" />
        <element api="P:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowedAudienceUris">
      <topicdata group="api" />
      <apidata name="AllowedAudienceUris" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowedAudienceUris" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers">
      <topicdata group="api" />
      <apidata name="AllowUntrustedRsaIssuers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowUntrustedRsaIssuers" />
      <setter name="set_AllowUntrustedRsaIssuers" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AudienceUriMode">
      <topicdata group="api" />
      <apidata name="AudienceUriMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AudienceUriMode" />
      <setter name="set_AudienceUriMode" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.AudienceUriMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="CertificateValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidationMode" />
      <setter name="set_CertificateValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator">
      <topicdata group="api" />
      <apidata name="CustomCertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomCertificateValidator" />
      <setter name="set_CustomCertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates">
      <topicdata group="api" />
      <apidata name="KnownCertificates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KnownCertificates" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode">
      <topicdata group="api" />
      <apidata name="RevocationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RevocationMode" />
      <setter name="set_RevocationMode" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer">
      <topicdata group="api" />
      <apidata name="SamlSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SamlSerializer" />
      <setter name="set_SamlSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="TrustedStoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustedStoreLocation" />
      <setter name="set_TrustedStoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IssuedTokenServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrust13AsyncContract">
      <topicdata group="api" />
      <apidata name="IWSTrust13AsyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13ValidateResponse(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWSTrust13Async</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrust13AsyncContract">
      <topicdata name="IWSTrust13AsyncContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrust13AsyncContract" />
      <apidata name="IWSTrust13AsyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13ValidateResponse(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13CancelAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/CancelFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13CancelResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13IssueAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13IssueResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13RenewAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/RenewFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13RenewResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13ValidateAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/ValidateFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13ValidateResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Cancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13CancelResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Issue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13IssueResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Renew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13RenewResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Validate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13ValidateResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrust13SyncContract">
      <topicdata group="api" />
      <apidata name="IWSTrust13SyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWSTrust13Sync</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrust13SyncContract">
      <topicdata name="IWSTrust13SyncContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrust13SyncContract" />
      <apidata name="IWSTrust13SyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13Cancel</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/CancelFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13CancelResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13Issue</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13IssueResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13Renew</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/RenewFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13RenewResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13Validate</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/ValidateFinal</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Trust13ValidateResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrustChannelContract">
      <topicdata group="api" />
      <apidata name="IWSTrustChannelContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Cancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Issue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Renew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Validate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrustChannelContract">
      <topicdata name="IWSTrustChannelContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrustChannelContract" />
      <apidata name="IWSTrustChannelContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Cancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Issue">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Renew">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Validate">
          <element api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel">
      <topicdata name="BeginCancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue">
      <topicdata name="BeginIssue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew">
      <topicdata name="BeginRenew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate">
      <topicdata name="BeginValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Cancel">
      <topicdata name="Cancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel">
      <topicdata name="EndCancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue">
      <topicdata name="EndIssue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew">
      <topicdata name="EndRenew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate">
      <topicdata name="EndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Issue">
      <topicdata name="Issue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Issue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Renew">
      <topicdata name="Renew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Renew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Validate">
      <topicdata name="Validate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Validate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustChannelContract.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Cancel" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="response" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="response" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="response" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="response" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Issue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Issue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="response" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Renew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Renew" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustChannelContract.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.IWSTrustChannelContract.Validate" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrustContract">
      <topicdata group="api" />
      <apidata name="IWSTrustContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrustContract">
      <topicdata name="IWSTrustContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrustContract" />
      <apidata name="IWSTrustContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Cancel</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Issue</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Renew</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Validate</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Cancel</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Issue</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Renew</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Validate</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract">
      <topicdata group="api" />
      <apidata name="IWSTrustFeb2005AsyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWSTrustFeb2005Async</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract">
      <topicdata name="IWSTrustFeb2005AsyncContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" />
      <apidata name="IWSTrustFeb2005AsyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005CancelAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005CancelResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005IssueAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005IssueResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005RenewAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005RenewResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005ValidateAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005ValidateResponseAsync</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Cancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Issue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Renew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Validate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract">
      <topicdata group="api" />
      <apidata name="IWSTrustFeb2005SyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWSTrustFeb2005Sync</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract">
      <topicdata name="IWSTrustFeb2005SyncContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" />
      <apidata name="IWSTrustFeb2005SyncContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005Cancel</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005CancelResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Cancel</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005Issue</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005IssueResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005Renew</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005RenewResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Renew</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005Validate</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TrustFeb2005ValidateResponse</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Validate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Security.KeyNameIdentifierClause">
      <topicdata group="api" />
      <apidata name="KeyNameIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.#ctor(System.String)" />
        <element api="Overload:System.ServiceModel.Security.KeyNameIdentifierClause.Matches">
          <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.KeyNameIdentifierClause.KeyName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.KeyNameIdentifierClause">
      <topicdata name="KeyNameIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.KeyNameIdentifierClause" />
      <apidata name="KeyNameIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.KeyNameIdentifierClause.Matches">
          <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.KeyNameIdentifierClause">
      <topicdata name="KeyNameIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.KeyNameIdentifierClause" />
      <apidata name="KeyNameIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.KeyNameIdentifierClause.KeyName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.KeyNameIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.KeyNameIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.KeyNameIdentifierClause.KeyName">
      <topicdata group="api" />
      <apidata name="KeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.KeyNameIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.KeyNameIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.KeyNameIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.MessagePartSpecification">
      <topicdata group="api" />
      <apidata name="MessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor">
          <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
          <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)" />
          <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])" />
          <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])" />
        </element>
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.Clear" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.NoParts" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.MessagePartSpecification">
      <topicdata name="MessagePartSpecification" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.MessagePartSpecification" />
      <apidata name="MessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.Clear" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.MessagePartSpecification">
      <topicdata name="MessagePartSpecification" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.MessagePartSpecification" />
      <apidata name="MessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly" />
        <element api="P:System.ServiceModel.Security.MessagePartSpecification.NoParts" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])" />
        <element api="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <parameters>
        <parameter name="isBodyIncluded">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <parameters>
        <parameter name="isBodyIncluded">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="headerTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <parameters>
        <parameter name="headerTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes">
      <topicdata group="api" />
      <apidata name="HeaderTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HeaderTypes" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
      <topicdata group="api" />
      <apidata name="IsBodyIncluded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsBodyIncluded" />
      <setter name="set_IsBodyIncluded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
      <topicdata group="api" />
      <apidata name="NoParts" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NoParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="specification">
          <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.MessageProtectionOrder">
      <topicdata group="api" />
      <apidata name="MessageProtectionOrder" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
        <element api="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
        <element api="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign">
      <topicdata group="api" notopic="" />
      <apidata name="EncryptBeforeSign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt">
      <topicdata group="api" notopic="" />
      <apidata name="SignBeforeEncrypt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature">
      <topicdata group="api" notopic="" />
      <apidata name="SignBeforeEncryptAndEncryptSignature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageProtectionOrder" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.MessageSecurityException">
      <topicdata group="api" />
      <apidata name="MessageSecurityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.ExpiredSecurityTokenException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor">
          <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
          <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.MessageSecurityException">
      <topicdata name="MessageSecurityException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.MessageSecurityException" />
      <apidata name="MessageSecurityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.MessageSecurityException">
      <topicdata name="MessageSecurityException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.MessageSecurityException" />
      <apidata name="MessageSecurityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.MessageSecurityException">
      <topicdata name="MessageSecurityException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.MessageSecurityException" />
      <apidata name="MessageSecurityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor" />
        <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.MessageSecurityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.NonceCache">
      <topicdata group="api" />
      <apidata name="NonceCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.NonceCache.#ctor" />
        <element api="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])" />
        <element api="P:System.ServiceModel.Security.NonceCache.CacheSize" />
        <element api="P:System.ServiceModel.Security.NonceCache.CachingTimeSpan" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.NonceCache">
      <topicdata name="NonceCache" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.NonceCache" />
      <apidata name="NonceCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.NonceCache">
      <topicdata name="NonceCache" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.NonceCache" />
      <apidata name="NonceCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.NonceCache.CacheSize" />
        <element api="P:System.ServiceModel.Security.NonceCache.CachingTimeSpan" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.NonceCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.NonceCache.CacheSize">
      <topicdata group="api" />
      <apidata name="CacheSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheSize" />
      <setter name="set_CacheSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.NonceCache.CachingTimeSpan">
      <topicdata group="api" />
      <apidata name="CachingTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CachingTimeSpan" />
      <setter name="set_CachingTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])">
      <topicdata group="api" />
      <apidata name="CheckNonce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])">
      <topicdata group="api" />
      <apidata name="TryAddNonce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.NonceCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.PeerCredential">
      <topicdata group="api" />
      <apidata name="PeerCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.PeerCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.Security.PeerCredential.Certificate" />
        <element api="P:System.ServiceModel.Security.PeerCredential.MeshPassword" />
        <element api="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication" />
        <element api="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.PeerCredential">
      <topicdata name="PeerCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.PeerCredential" />
      <apidata name="PeerCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.PeerCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.PeerCredential">
      <topicdata name="PeerCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.PeerCredential" />
      <apidata name="PeerCredential" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.PeerCredential.Certificate" />
        <element api="P:System.ServiceModel.Security.PeerCredential.MeshPassword" />
        <element api="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication" />
        <element api="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.PeerCredential.SetCertificate">
      <topicdata name="SetCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
        <element api="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.PeerCredential.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Certificate" />
      <setter name="set_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.PeerCredential.MeshPassword">
      <topicdata group="api" />
      <apidata name="MeshPassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MeshPassword" />
      <setter name="set_MeshPassword" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication">
      <topicdata group="api" />
      <apidata name="MessageSenderAuthentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageSenderAuthentication" />
      <setter name="set_MessageSenderAuthentication" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication">
      <topicdata group="api" />
      <apidata name="PeerAuthentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PeerAuthentication" />
      <setter name="set_PeerAuthentication" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.PeerCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.PeerCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.PeerCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ScopedMessagePartSpecification">
      <topicdata group="api" />
      <apidata name="ScopedMessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor">
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts">
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)" />
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)" />
        </element>
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly" />
        <element api="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts">
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)" />
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)" />
        </element>
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.Actions" />
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts" />
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ScopedMessagePartSpecification">
      <topicdata name="ScopedMessagePartSpecification" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />
      <apidata name="ScopedMessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts">
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)" />
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)" />
        </element>
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly" />
        <element api="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts">
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)" />
          <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ScopedMessagePartSpecification">
      <topicdata name="ScopedMessagePartSpecification" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />
      <apidata name="ScopedMessagePartSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.Actions" />
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts" />
        <element api="P:System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts">
      <topicdata name="AddParts" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddParts" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)" />
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts">
      <topicdata name="TryGetParts" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryGetParts" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)" />
        <element api="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ScopedMessagePartSpecification.Actions">
      <topicdata group="api" />
      <apidata name="Actions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Actions" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)">
      <topicdata group="api" />
      <apidata name="AddParts" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parts">
          <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)">
      <topicdata group="api" />
      <apidata name="AddParts" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parts">
          <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts">
      <topicdata group="api" />
      <apidata name="ChannelParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelParts" />
      <returns>
        <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)">
      <topicdata group="api" />
      <apidata name="TryGetParts" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="excludeChannelScope">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parts" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)">
      <topicdata group="api" />
      <apidata name="TryGetParts" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parts" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Security.MessagePartSpecification" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ScopedMessagePartSpecification" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecureConversationServiceCredential">
      <topicdata group="api" />
      <apidata name="SecureConversationServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
        <element api="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecureConversationServiceCredential">
      <topicdata name="SecureConversationServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
      <apidata name="SecureConversationServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecureConversationServiceCredential">
      <topicdata name="SecureConversationServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
      <apidata name="SecureConversationServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
        <element api="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
      <topicdata group="api" />
      <apidata name="SecurityContextClaimTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityContextClaimTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
      <topicdata group="api" />
      <apidata name="SecurityStateEncoder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityStateEncoder" />
      <setter name="set_SecurityStateEncoder" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecureConversationVersion">
      <topicdata group="api" />
      <apidata name="SecureConversationVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Default" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecureConversationVersion">
      <topicdata name="SecureConversationVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecureConversationVersion" />
      <apidata name="SecureConversationVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecureConversationVersion">
      <topicdata name="SecureConversationVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecureConversationVersion" />
      <apidata name="SecureConversationVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Default" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13" />
        <element api="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationVersion.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationVersion.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryString" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationVersion.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Prefix" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryString" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13">
      <topicdata group="api" />
      <apidata name="WSSecureConversation13" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecureConversation13" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005">
      <topicdata group="api" />
      <apidata name="WSSecureConversationFeb2005" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecureConversationFeb2005" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <topicdata group="api" />
      <apidata name="SecurityAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor">
          <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
          <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <topicdata name="SecurityAccessDeniedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      <apidata name="SecurityAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <topicdata name="SecurityAccessDeniedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      <apidata name="SecurityAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <topicdata name="SecurityAccessDeniedException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      <apidata name="SecurityAccessDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.Basic256SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.ServiceModel.Security.Basic192SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <topicdata name="SecurityAlgorithmSuite" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
      <apidata name="SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <topicdata name="SecurityAlgorithmSuite" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
      <apidata name="SecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
        <element api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128">
      <topicdata group="api" />
      <apidata name="Basic128" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic128" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15">
      <topicdata group="api" />
      <apidata name="Basic128Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic128Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256">
      <topicdata group="api" />
      <apidata name="Basic128Sha256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic128Sha256" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15">
      <topicdata group="api" />
      <apidata name="Basic128Sha256Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic128Sha256Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192">
      <topicdata group="api" />
      <apidata name="Basic192" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic192" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15">
      <topicdata group="api" />
      <apidata name="Basic192Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic192Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256">
      <topicdata group="api" />
      <apidata name="Basic192Sha256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic192Sha256" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15">
      <topicdata group="api" />
      <apidata name="Basic192Sha256Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic192Sha256Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256">
      <topicdata group="api" />
      <apidata name="Basic256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic256" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15">
      <topicdata group="api" />
      <apidata name="Basic256Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic256Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256">
      <topicdata group="api" />
      <apidata name="Basic256Sha256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic256Sha256" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15">
      <topicdata group="api" />
      <apidata name="Basic256Sha256Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Basic256Sha256Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultCanonicalizationAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultCanonicalizationAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultDigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultDigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultSignatureKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultSignatureKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyWrapAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricSignatureAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsCanonicalizationAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsDigestAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsEncryptionAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsEncryptionKeyDerivationAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsSignatureKeyDerivationAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyWrapAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricSignatureAlgorithmSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes">
      <topicdata group="api" />
      <apidata name="TripleDes" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TripleDes" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15">
      <topicdata group="api" />
      <apidata name="TripleDesRsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TripleDesRsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256">
      <topicdata group="api" />
      <apidata name="TripleDesSha256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TripleDesSha256" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15">
      <topicdata group="api" />
      <apidata name="TripleDesSha256Rsa15" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TripleDesSha256Rsa15" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="SecurityContextKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor">
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId)" />
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId)" />
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId,System.Byte[],System.Int32)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches">
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)" />
        </element>
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ContextId" />
        <element api="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Generation" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause">
      <topicdata name="SecurityContextKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />
      <apidata name="SecurityContextKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches">
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)" />
        </element>
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause">
      <topicdata name="SecurityContextKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />
      <apidata name="SecurityContextKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ContextId" />
        <element api="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Generation" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId)" />
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId)" />
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="generation">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="generation">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ContextId">
      <topicdata group="api" />
      <apidata name="ContextId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextId" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Generation">
      <topicdata group="api" />
      <apidata name="Generation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Generation" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="generation">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityCredentialsManager">
      <topicdata group="api" />
      <apidata name="SecurityCredentialsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
          <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityCredentialsManager.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityCredentialsManager">
      <topicdata name="SecurityCredentialsManager" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityCredentialsManager" />
      <apidata name="SecurityCredentialsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityCredentialsManager" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityCredentialsManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityCredentialsManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenManager" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityCredentialsManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityKeyEntropyMode">
      <topicdata group="api" />
      <apidata name="SecurityKeyEntropyMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ClientEntropy" />
        <element api="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ServerEntropy" />
        <element api="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ClientEntropy">
      <topicdata group="api" notopic="" />
      <apidata name="ClientEntropy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy">
      <topicdata group="api" notopic="" />
      <apidata name="CombinedEntropy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ServerEntropy">
      <topicdata group="api" notopic="" />
      <apidata name="ServerEntropy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityKeyEntropyMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityMessageProperty">
      <topicdata group="api" />
      <apidata name="SecurityMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityMessageProperty">
      <topicdata name="SecurityMessageProperty" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityMessageProperty" />
      <apidata name="SecurityMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose" />
        <element api="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityMessageProperty">
      <topicdata name="SecurityMessageProperty" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityMessageProperty" />
      <apidata name="SecurityMessageProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext" />
        <element api="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
          <type api="T:System.ServiceModel.Channels.IMessageProperty" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies">
      <topicdata group="api" />
      <apidata name="ExternalAuthorizationPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExternalAuthorizationPolicies" />
      <setter name="set_ExternalAuthorizationPolicies" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="GetOrCreate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens">
      <topicdata group="api" />
      <apidata name="HasIncomingSupportingTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasIncomingSupportingTokens" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens">
      <topicdata group="api" />
      <apidata name="IncomingSupportingTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingSupportingTokens" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken">
      <topicdata group="api" />
      <apidata name="InitiatorToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitiatorToken" />
      <setter name="set_InitiatorToken" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens">
      <topicdata group="api" />
      <apidata name="OutgoingSupportingTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingSupportingTokens" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken">
      <topicdata group="api" />
      <apidata name="ProtectionToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionToken" />
      <setter name="set_ProtectionToken" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken">
      <topicdata group="api" />
      <apidata name="RecipientToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RecipientToken" />
      <setter name="set_RecipientToken" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix">
      <topicdata group="api" />
      <apidata name="SenderIdPrefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SenderIdPrefix" />
      <setter name="set_SenderIdPrefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext">
      <topicdata group="api" />
      <apidata name="ServiceSecurityContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceSecurityContext" />
      <setter name="set_ServiceSecurityContext" />
      <returns>
        <type api="T:System.ServiceModel.ServiceSecurityContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken">
      <topicdata group="api" />
      <apidata name="TransportToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransportToken" />
      <setter name="set_TransportToken" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityMessageProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityNegotiationException">
      <topicdata group="api" />
      <apidata name="SecurityNegotiationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
          <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
          <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityNegotiationException">
      <topicdata name="SecurityNegotiationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityNegotiationException" />
      <apidata name="SecurityNegotiationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityNegotiationException">
      <topicdata name="SecurityNegotiationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityNegotiationException" />
      <apidata name="SecurityNegotiationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.SecurityNegotiationException">
      <topicdata name="SecurityNegotiationException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.SecurityNegotiationException" />
      <apidata name="SecurityNegotiationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SecurityNegotiationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityNegotiationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityPolicyVersion">
      <topicdata group="api" />
      <apidata name="SecurityPolicyVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityPolicyVersion">
      <topicdata name="SecurityPolicyVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityPolicyVersion" />
      <apidata name="SecurityPolicyVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityPolicyVersion">
      <topicdata name="SecurityPolicyVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityPolicyVersion" />
      <apidata name="SecurityPolicyVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11" />
        <element api="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11">
      <topicdata group="api" />
      <apidata name="WSSecurityPolicy11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurityPolicy11" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12">
      <topicdata group="api" />
      <apidata name="WSSecurityPolicy12" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurityPolicy12" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityPolicyVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityStateEncoder">
      <topicdata group="api" />
      <apidata name="SecurityStateEncoder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityStateEncoder.#ctor" />
        <element api="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityStateEncoder">
      <topicdata name="SecurityStateEncoder" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityStateEncoder" />
      <apidata name="SecurityStateEncoder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])" />
        <element api="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityStateEncoder" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityStateEncoder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecodeSecurityState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncodeSecurityState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityTokenAttachmentMode">
      <topicdata group="api" />
      <apidata name="SecurityTokenAttachmentMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Signed" />
        <element api="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Endorsing" />
        <element api="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEndorsing" />
        <element api="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Endorsing">
      <topicdata group="api" notopic="" />
      <apidata name="Endorsing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Signed">
      <topicdata group="api" notopic="" />
      <apidata name="Signed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted">
      <topicdata group="api" notopic="" />
      <apidata name="SignedEncrypted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEndorsing">
      <topicdata group="api" notopic="" />
      <apidata name="SignedEndorsing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityTokenSpecification">
      <topicdata group="api" />
      <apidata name="SecurityTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SecurityTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken" />
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityTokenSpecification">
      <topicdata name="SecurityTokenSpecification" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityTokenSpecification" />
      <apidata name="SecurityTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityTokenSpecification">
      <topicdata name="SecurityTokenSpecification" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityTokenSpecification" />
      <apidata name="SecurityTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken" />
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SecurityTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken">
      <topicdata group="api" />
      <apidata name="SecurityToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies">
      <topicdata group="api" />
      <apidata name="SecurityTokenPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenPolicies" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SecurityVersion">
      <topicdata group="api" />
      <apidata name="SecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10" />
        <element api="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SecurityVersion">
      <topicdata name="SecurityVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SecurityVersion" />
      <apidata name="SecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SecurityVersion">
      <topicdata name="SecurityVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SecurityVersion" />
      <apidata name="SecurityVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10" />
        <element api="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10">
      <topicdata group="api" />
      <apidata name="WSSecurity10" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity10" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11">
      <topicdata group="api" />
      <apidata name="WSSecurity11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSSecurity11" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
      <topicdata group="api" />
      <apidata name="ServiceCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Security.IEndpointIdentityProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
      <topicdata name="ServiceCredentialsSecurityTokenManager" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
      <apidata name="ServiceCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
      <topicdata name="ServiceCredentialsSecurityTokenManager" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
      <apidata name="ServiceCredentialsSecurityTokenManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <topicdata group="api" />
      <apidata name="CreateSecureConversationTokenAuthenticator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="recipientRequirement">
          <type api="T:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" ref="true" />
        </parameter>
        <parameter name="preserveBootstrapTokens">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sctResolver" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenAuthenticator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="requirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="version">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenVersion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="GetIdentityOfSelf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointIdentity" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <type api="T:System.ServiceModel.Security.IEndpointIdentityProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name="IsIssuedSecurityTokenRequirement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials">
      <topicdata group="api" />
      <apidata name="ServiceCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SimpleSecurityTokenProvider">
      <topicdata group="api" />
      <apidata name="SimpleSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SimpleSecurityTokenProvider.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Selectors.SecurityTokenRequirement)" />
        <element api="M:System.ServiceModel.Security.SimpleSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SimpleSecurityTokenProvider">
      <topicdata name="SimpleSecurityTokenProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" />
      <apidata name="SimpleSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SimpleSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SimpleSecurityTokenProvider">
      <topicdata name="SimpleSecurityTokenProvider" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" />
      <apidata name="SimpleSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SimpleSecurityTokenProvider.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenRequirement">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SimpleSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SimpleSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SspiSecurityTokenProvider">
      <topicdata group="api" />
      <apidata name="SspiSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor">
          <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)" />
          <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SspiSecurityTokenProvider">
      <topicdata name="SspiSecurityTokenProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />
      <apidata name="SspiSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SspiSecurityTokenProvider">
      <topicdata name="SspiSecurityTokenProvider" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />
      <apidata name="SspiSecurityTokenProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
        <element api="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)" />
        <element api="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="extractGroupsForWindowsAccounts">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="allowUnauthenticatedCallers">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="allowNtlm">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SspiSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SspiSecurityTokenProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.SupportingTokenSpecification">
      <topicdata group="api" />
      <apidata name="SupportingTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityTokenSpecification" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.SupportingTokenSpecification.#ctor">
          <element api="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)" />
          <element api="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode,System.ServiceModel.Security.Tokens.SecurityTokenParameters)" />
        </element>
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken" />
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies" />
        <element api="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.SupportingTokenSpecification">
      <topicdata name="SupportingTokenSpecification" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.SupportingTokenSpecification" />
      <apidata name="SupportingTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.SupportingTokenSpecification">
      <topicdata name="SupportingTokenSpecification" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.SupportingTokenSpecification" />
      <apidata name="SupportingTokenSpecification" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken" />
        <element api="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies" />
        <element api="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.SupportingTokenSpecification.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)" />
        <element api="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode,System.ServiceModel.Security.Tokens.SecurityTokenParameters)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SupportingTokenSpecification.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="attachmentMode">
          <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.SupportingTokenSpecification.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="attachmentMode">
          <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
        </parameter>
        <parameter name="tokenParameters">
          <type api="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode">
      <topicdata group="api" />
      <apidata name="SecurityTokenAttachmentMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenAttachmentMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.SupportingTokenSpecification" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite">
      <topicdata group="api" />
      <apidata name="TripleDesSecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite">
      <topicdata name="TripleDesSecurityAlgorithmSuite" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />
      <apidata name="TripleDesSecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
        <element api="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite">
      <topicdata name="TripleDesSecurityAlgorithmSuite" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />
      <apidata name="TripleDesSecurityAlgorithmSuite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
        <element api="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultAsymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultAsymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultCanonicalizationAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCanonicalizationAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultDigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultDigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultEncryptionKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultEncryptionKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <topicdata group="api" />
      <apidata name="DefaultSignatureKeyDerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSignatureKeyDerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricKeyWrapAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricKeyWrapAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="DefaultSymmetricSignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultSymmetricSignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsSymmetricKeyLengthSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <type api="T:System.ServiceModel.Security.SecurityAlgorithmSuite" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.TrustVersion">
      <topicdata group="api" />
      <apidata name="TrustVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.TrustVersion.Default" />
        <element api="P:System.ServiceModel.Security.TrustVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.TrustVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.TrustVersion.WSTrust13" />
        <element api="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.TrustVersion">
      <topicdata name="TrustVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.TrustVersion" />
      <apidata name="TrustVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.TrustVersion">
      <topicdata name="TrustVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.TrustVersion" />
      <apidata name="TrustVersion" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.TrustVersion.Default" />
        <element api="P:System.ServiceModel.Security.TrustVersion.Namespace" />
        <element api="P:System.ServiceModel.Security.TrustVersion.Prefix" />
        <element api="P:System.ServiceModel.Security.TrustVersion.WSTrust13" />
        <element api="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TrustVersion.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TrustVersion.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryString" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TrustVersion.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Prefix" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryString" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TrustVersion.WSTrust13">
      <topicdata group="api" />
      <apidata name="WSTrust13" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSTrust13" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005">
      <topicdata group="api" />
      <apidata name="WSTrustFeb2005" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSTrustFeb2005" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <topicdata group="api" />
      <apidata name="UserNamePasswordClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <topicdata name="UserNamePasswordClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />
      <apidata name="UserNamePasswordClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <topicdata name="UserNamePasswordClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />
      <apidata name="UserNamePasswordClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserName" />
      <setter name="set_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.UserNamePasswordServiceCredential">
      <topicdata group="api" />
      <apidata name="UserNamePasswordServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.UserNamePasswordServiceCredential">
      <topicdata name="UserNamePasswordServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
      <apidata name="UserNamePasswordServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.UserNamePasswordServiceCredential">
      <topicdata name="UserNamePasswordServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
      <apidata name="UserNamePasswordServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
        <element api="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime">
      <topicdata group="api" />
      <apidata name="CachedLogonTokenLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CachedLogonTokenLifetime" />
      <setter name="set_CachedLogonTokenLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens">
      <topicdata group="api" />
      <apidata name="CacheLogonTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheLogonTokens" />
      <setter name="set_CacheLogonTokens" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator">
      <topicdata group="api" />
      <apidata name="CustomUserNamePasswordValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomUserNamePasswordValidator" />
      <setter name="set_CustomUserNamePasswordValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.UserNamePasswordValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups">
      <topicdata group="api" />
      <apidata name="IncludeWindowsGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeWindowsGroups" />
      <setter name="set_IncludeWindowsGroups" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens">
      <topicdata group="api" />
      <apidata name="MaxCachedLogonTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxCachedLogonTokens" />
      <setter name="set_MaxCachedLogonTokens" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider">
      <topicdata group="api" />
      <apidata name="MembershipProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MembershipProvider" />
      <setter name="set_MembershipProvider" />
      <returns>
        <type api="T:System.Web.Security.MembershipProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode">
      <topicdata group="api" />
      <apidata name="UserNamePasswordValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserNamePasswordValidationMode" />
      <setter name="set_UserNamePasswordValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.UserNamePasswordValidationMode">
      <topicdata group="api" />
      <apidata name="UserNamePasswordValidationMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows" />
        <element api="F:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider" />
        <element api="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider">
      <topicdata group="api" notopic="" />
      <apidata name="MembershipProvider" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.UserNamePasswordValidationMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WindowsClientCredential">
      <topicdata group="api" />
      <apidata name="WindowsClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WindowsClientCredential">
      <topicdata name="WindowsClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WindowsClientCredential" />
      <apidata name="WindowsClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WindowsClientCredential">
      <topicdata name="WindowsClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WindowsClientCredential" />
      <apidata name="WindowsClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
        <element api="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsClientCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <topicdata group="api" />
      <apidata name="AllowedImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowedImpersonationLevel" />
      <setter name="set_AllowedImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm">
      <topicdata group="api" />
      <apidata name="AllowNtlm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowNtlm" />
      <setter name="set_AllowNtlm" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsClientCredential" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property is deprecated and is maintained for backward compatibility only. The local machine policy will be used to determine if NTLM should be used.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <topicdata group="api" />
      <apidata name="ClientCredential" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCredential" />
      <setter name="set_ClientCredential" />
      <returns>
        <type api="T:System.Net.NetworkCredential" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WindowsServiceCredential">
      <topicdata group="api" />
      <apidata name="WindowsServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons" />
        <element api="P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WindowsServiceCredential">
      <topicdata name="WindowsServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WindowsServiceCredential" />
      <apidata name="WindowsServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WindowsServiceCredential">
      <topicdata name="WindowsServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WindowsServiceCredential" />
      <apidata name="WindowsServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons" />
        <element api="P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsServiceCredential" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons">
      <topicdata group="api" />
      <apidata name="AllowAnonymousLogons" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowAnonymousLogons" />
      <setter name="set_AllowAnonymousLogons" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups">
      <topicdata group="api" />
      <apidata name="IncludeWindowsGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeWindowsGroups" />
      <setter name="set_IncludeWindowsGroups" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WindowsServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSSecurityTokenSerializer">
      <topicdata group="api" />
      <apidata name="WSSecurityTokenSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor">
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.Boolean)" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion)" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean)" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer)" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.GetTokenTypeUri(System.Type)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.TryCreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle,System.IdentityModel.Tokens.SecurityKeyIdentifierClause@)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.DefaultInstance" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationLabelLength" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationNonceLength" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationOffset" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.SecurityVersion" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSSecurityTokenSerializer">
      <topicdata name="WSSecurityTokenSerializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />
      <apidata name="WSSecurityTokenSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.GetTokenTypeUri(System.Type)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.TryCreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle,System.IdentityModel.Tokens.SecurityKeyIdentifierClause@)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSSecurityTokenSerializer">
      <topicdata name="WSSecurityTokenSerializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />
      <apidata name="WSSecurityTokenSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.DefaultInstance" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationLabelLength" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationNonceLength" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationOffset" />
        <element api="P:System.ServiceModel.Security.WSSecurityTokenSerializer.SecurityVersion" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.Boolean)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="securityStateEncoder">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </parameter>
        <parameter name="knownTypes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="securityStateEncoder">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </parameter>
        <parameter name="knownTypes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="maximumKeyDerivationOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumKeyDerivationLabelLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumKeyDerivationNonceLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="trustVersion">
          <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
        </parameter>
        <parameter name="secureConversationVersion">
          <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="securityStateEncoder">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </parameter>
        <parameter name="knownTypes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor" />
      <parameters>
        <parameter name="securityVersion">
          <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
        </parameter>
        <parameter name="trustVersion">
          <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
        </parameter>
        <parameter name="secureConversationVersion">
          <type api="T:System.ServiceModel.Security.SecureConversationVersion" ref="true" />
        </parameter>
        <parameter name="emitBspRequiredAttributes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="securityStateEncoder">
          <type api="T:System.ServiceModel.Security.SecurityStateEncoder" ref="true" />
        </parameter>
        <parameter name="knownTypes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="maximumKeyDerivationOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumKeyDerivationLabelLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumKeyDerivationNonceLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="CanWriteTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClauseFromTokenXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="tokenReferenceStyle">
          <type api="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.DefaultInstance">
      <topicdata group="api" />
      <apidata name="DefaultInstance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultInstance" />
      <returns>
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes">
      <topicdata group="api" />
      <apidata name="EmitBspRequiredAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmitBspRequiredAttributes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.GetTokenTypeUri(System.Type)">
      <topicdata group="api" />
      <apidata name="GetTokenTypeUri" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationLabelLength">
      <topicdata group="api" />
      <apidata name="MaximumKeyDerivationLabelLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumKeyDerivationLabelLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationNonceLength">
      <topicdata group="api" />
      <apidata name="MaximumKeyDerivationNonceLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumKeyDerivationNonceLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationOffset">
      <topicdata group="api" />
      <apidata name="MaximumKeyDerivationOffset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumKeyDerivationOffset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="tokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSSecurityTokenSerializer.SecurityVersion">
      <topicdata group="api" />
      <apidata name="SecurityVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.SecurityVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.TryCreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle,System.IdentityModel.Tokens.SecurityKeyIdentifierClause@)">
      <topicdata group="api" />
      <apidata name="TryCreateKeyIdentifierClauseFromTokenXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="tokenReferenceStyle">
          <type api="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" ref="false" />
        </parameter>
        <parameter name="securityKeyIdentifierClause" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSSecurityTokenSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustChannel">
      <topicdata group="api" />
      <apidata name="WSTrustChannel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Closed" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Closing" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Faulted" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Opened" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginCancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginClose">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginIssue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginOpen">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginRenew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginValidate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Cancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Close">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Close" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndCancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndIssue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndRenew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndValidate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetProperty``1" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Issue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Open">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Open" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Renew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Validate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="P:System.ServiceModel.Security.WSTrustChannel.Channel" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.ChannelFactory" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.Contract" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.State" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.TrustVersion" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustChannel">
      <topicdata name="WSTrustChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustChannel" />
      <apidata name="WSTrustChannel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginCancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginClose">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginIssue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginOpen">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginRenew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.BeginValidate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Cancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Close">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Close" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndCancel">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndIssue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndRenew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.EndValidate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetProperty``1" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Issue">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Open">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Open" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Renew">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannel.Validate">
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustChannel">
      <topicdata name="WSTrustChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustChannel" />
      <apidata name="WSTrustChannel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.WSTrustChannel.Channel" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.ChannelFactory" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.Contract" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.State" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.TrustVersion" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.WSTrustChannel">
      <topicdata name="WSTrustChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.WSTrustChannel" />
      <apidata name="WSTrustChannel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Closed" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Closing" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Faulted" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Opened" />
        <element api="E:System.ServiceModel.Security.WSTrustChannel.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginCancel">
      <topicdata name="BeginCancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginIssue">
      <topicdata name="BeginIssue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginRenew">
      <topicdata name="BeginRenew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.BeginValidate">
      <topicdata name="BeginValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Cancel">
      <topicdata name="Cancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Close" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.EndCancel">
      <topicdata name="EndCancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.EndIssue">
      <topicdata name="EndIssue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.EndRenew">
      <topicdata name="EndRenew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.EndValidate">
      <topicdata name="EndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Issue">
      <topicdata name="Issue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Issue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Open" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Renew">
      <topicdata name="Renew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Renew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannel.Validate">
      <topicdata name="Validate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Validate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.#ctor(System.ServiceModel.Security.WSTrustChannelFactory,System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="factory">
          <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </parameter>
        <parameter name="trustVersion">
          <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginCancel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginCancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginCancel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.BeginCancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginClose" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginClose" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginIssue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginIssue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginIssue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.BeginIssue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginOpen" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginOpen" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginRenew" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginRenew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginRenew" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.BeginRenew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginValidate" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.BeginValidate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.BeginValidate" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.BeginValidate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Cancel" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.Cancel(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Cancel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.Cancel(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.Channel">
      <topicdata group="api" />
      <apidata name="Channel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Channel" />
      <setter name="set_Channel" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_ChannelFactory" />
      <setter name="set_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Close" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Close(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Close" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustChannel.Closed">
      <topicdata group="api" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closed" />
      <remover name="remove_Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustChannel.Closing">
      <topicdata group="api" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closing" />
      <remover name="remove_Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.Contract">
      <topicdata group="api" />
      <apidata name="Contract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Contract" />
      <setter name="set_Contract" />
      <returns>
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.CreateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.String)">
      <topicdata group="api" />
      <apidata name="CreateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="requestType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndCancel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.EndCancel(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndCancel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="rstr" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndCancel(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndIssue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.EndIssue(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndIssue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndIssue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="rstr" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndIssue(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndRenew" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.EndRenew(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndRenew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndRenew" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="rstr" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndRenew(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndValidate" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.EndValidate(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="EndValidate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.EndValidate" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="rstr" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.EndValidate(System.IAsyncResult,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustChannel.Faulted">
      <topicdata group="api" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Faulted" />
      <remover name="remove_Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.GetProperty``1">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.Security.WSTrustChannel.GetProperty``1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.GetRequestAction(System.String,System.ServiceModel.Security.TrustVersion)">
      <topicdata group="api" />
      <apidata name="GetRequestAction" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustVersion">
          <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.GetTokenFromResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
      <topicdata group="api" />
      <apidata name="GetTokenFromResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Issue" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Issue" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="rstr" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.Issue(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse@)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Issue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Issue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.Issue(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Open" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Open(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Open" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustChannel.Opened">
      <topicdata group="api" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opened" />
      <remover name="remove_Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustChannel.Opening">
      <topicdata group="api" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opening" />
      <remover name="remove_Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.ReadResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ReadResponse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Renew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Renew" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.Renew(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Renew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Renew" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.Renew(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.TrustVersion">
      <topicdata group="api" />
      <apidata name="TrustVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_TrustVersion" />
      <setter name="set_TrustVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Validate" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rst">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustChannelContract.Validate(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannel.Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannel.Validate" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustContract.Validate(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.WSTrustRequestSerializer">
      <topicdata group="api" />
      <apidata name="WSTrustRequestSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_WSTrustRequestSerializer" />
      <setter name="set_WSTrustRequestSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.WSTrustResponseSerializer">
      <topicdata group="api" />
      <apidata name="WSTrustResponseSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_WSTrustResponseSerializer" />
      <setter name="set_WSTrustResponseSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannel.WSTrustSerializationContext">
      <topicdata group="api" />
      <apidata name="WSTrustSerializationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_WSTrustSerializationContext" />
      <setter name="set_WSTrustSerializationContext" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustChannelFactory">
      <topicdata group="api" />
      <apidata name="WSTrustChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor">
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateSerializationContext" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateTrustChannel(System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenHandlerCollectionManager" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenResolver" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.TrustVersion" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.UseKeyTokenResolver" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustRequestSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustResponseSerializer" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustChannelFactory">
      <topicdata name="WSTrustChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      <apidata name="WSTrustChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithActAsToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithIssuedToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannelWithOnBehalfOfToken">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateSerializationContext" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateTrustChannel(System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustChannelFactory">
      <topicdata name="WSTrustChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      <apidata name="WSTrustChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenHandlerCollectionManager" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenResolver" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.TrustVersion" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.UseKeyTokenResolver" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustRequestSerializer" />
        <element api="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustResponseSerializer" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.WSTrustChannelFactory">
      <topicdata name="WSTrustChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      <apidata name="WSTrustChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel">
      <topicdata name="CreateChannel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.WSTrustChannelFactory.CreateChannel" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateSerializationContext">
      <topicdata group="api" />
      <apidata name="CreateSerializationContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustChannelFactory.CreateTrustChannel(System.ServiceModel.Security.IWSTrustChannelContract,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)">
      <topicdata group="api" />
      <apidata name="CreateTrustChannel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="innerChannel">
          <type api="T:System.ServiceModel.Security.IWSTrustChannelContract" ref="true" />
        </parameter>
        <parameter name="trustVersion">
          <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Security.WSTrustChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenHandlerCollectionManager">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandlerCollectionManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityTokenHandlerCollectionManager" />
      <setter name="set_SecurityTokenHandlerCollectionManager" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.SecurityTokenResolver">
      <topicdata group="api" />
      <apidata name="SecurityTokenResolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityTokenResolver" />
      <setter name="set_SecurityTokenResolver" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.TrustVersion">
      <topicdata group="api" />
      <apidata name="TrustVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustVersion" />
      <setter name="set_TrustVersion" />
      <returns>
        <type api="T:System.ServiceModel.Security.TrustVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.UseKeyTokenResolver">
      <topicdata group="api" />
      <apidata name="UseKeyTokenResolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseKeyTokenResolver" />
      <setter name="set_UseKeyTokenResolver" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustRequestSerializer">
      <topicdata group="api" />
      <apidata name="WSTrustRequestSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WSTrustRequestSerializer" />
      <setter name="set_WSTrustRequestSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustChannelFactory.WSTrustResponseSerializer">
      <topicdata group="api" />
      <apidata name="WSTrustResponseSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WSTrustResponseSerializer" />
      <setter name="set_WSTrustResponseSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustChannelFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustRequestBodyWriter">
      <topicdata group="api" />
      <apidata name="WSTrustRequestBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.BodyWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.EndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnEndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.Security.WSTrustRequestBodyWriter.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustRequestBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="P:System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustRequestBodyWriter">
      <topicdata name="WSTrustRequestBodyWriter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" />
      <apidata name="WSTrustRequestBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.EndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnEndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.Security.WSTrustRequestBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustRequestBodyWriter">
      <topicdata name="WSTrustRequestBodyWriter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" />
      <apidata name="WSTrustRequestBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustRequestBodyWriter.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestSecurityToken">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="serializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="serializationContext">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustRequestBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="OnWriteBodyContents" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
          <type api="T:System.ServiceModel.Channels.BodyWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestBodyWriter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs">
      <topicdata group="api" />
      <apidata name="WSTrustRequestProcessingErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.#ctor(System.String,System.Exception)" />
        <element api="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.Exception" />
        <element api="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.RequestType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs">
      <topicdata name="WSTrustRequestProcessingErrorEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" />
      <apidata name="WSTrustRequestProcessingErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs">
      <topicdata name="WSTrustRequestProcessingErrorEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" />
      <apidata name="WSTrustRequestProcessingErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.Exception" />
        <element api="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.RequestType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs.RequestType">
      <topicdata group="api" />
      <apidata name="RequestType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustResponseBodyWriter">
      <topicdata group="api" />
      <apidata name="WSTrustResponseBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.BodyWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.EndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnEndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.Security.WSTrustResponseBodyWriter.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustResponseBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="P:System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustResponseBodyWriter">
      <topicdata name="WSTrustResponseBodyWriter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" />
      <apidata name="WSTrustResponseBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.EndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.OnEndWriteBodyContents(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
        <element api="M:System.ServiceModel.Security.WSTrustResponseBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustResponseBodyWriter">
      <topicdata name="WSTrustResponseBodyWriter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" />
      <apidata name="WSTrustResponseBodyWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustResponseBodyWriter.#ctor(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestSecurityTokenResponse">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
        <parameter name="serializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustResponseBodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="OnWriteBodyContents" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
          <type api="T:System.ServiceModel.Channels.BodyWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustResponseBodyWriter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustServiceContract">
      <topicdata group="api" />
      <apidata name="WSTrustServiceContract" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        <type api="T:System.ServiceModel.Description.IWsdlExportExtension" ref="true" />
        <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ServiceModel.Security.WSTrustServiceContract.RequestFailed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginDispatchRequest(System.ServiceModel.Security.DispatchContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.CreateDispatchContext(System.ServiceModel.Channels.Message,System.String,System.String,System.String,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.CreateSerializationContext" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndDispatchRequest(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndProcessCore(System.IAsyncResult,System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13ValidateResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.FixMessageElement(System.Web.Services.Description.ServiceDescription,System.Web.Services.Description.PortType,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.GetRstSecurityTokenResolver" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.GetSecurityHeaderTokenResolver(System.ServiceModel.Channels.RequestContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.HandleException(System.Exception,System.String,System.String,System.ServiceModel.EnvelopeVersion)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ImportSchema(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.IncludeNamespace(System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ValidateDispatchContext(System.ServiceModel.Security.DispatchContext)" />
        <element api="P:System.ServiceModel.Security.WSTrustServiceContract.SecurityTokenServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>SecurityTokenService</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice</value>
          </assignment>
          <assignment name="InstanceContextMode">
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="Single" />
            </enumValue>
          </assignment>
          <assignment name="ConcurrencyMode">
            <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
            <enumValue>
              <field name="Multiple" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" ref="true" />
          <assignment name="RequirementsMode">
            <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustServiceContract">
      <topicdata name="WSTrustServiceContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceContract" />
      <apidata name="WSTrustServiceContract" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginDispatchRequest(System.ServiceModel.Security.DispatchContext,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.CreateDispatchContext(System.ServiceModel.Channels.Message,System.String,System.String,System.String,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.CreateSerializationContext" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndDispatchRequest(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndProcessCore(System.IAsyncResult,System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13ValidateResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Cancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Issue(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Renew(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Validate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.FixMessageElement(System.Web.Services.Description.ServiceDescription,System.Web.Services.Description.PortType,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.GetRstSecurityTokenResolver" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.GetSecurityHeaderTokenResolver(System.ServiceModel.Channels.RequestContext)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.HandleException(System.Exception,System.String,System.String,System.ServiceModel.EnvelopeVersion)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ImportSchema(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.IncludeNamespace(System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceContract.ValidateDispatchContext(System.ServiceModel.Security.DispatchContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustServiceContract">
      <topicdata name="WSTrustServiceContract" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceContract" />
      <apidata name="WSTrustServiceContract" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.WSTrustServiceContract.SecurityTokenServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.WSTrustServiceContract">
      <topicdata name="WSTrustServiceContract" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceContract" />
      <apidata name="WSTrustServiceContract" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Security.WSTrustServiceContract.RequestFailed" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="securityTokenServiceConfiguration">
          <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <topicdata group="api" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="clientRuntime">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <topicdata group="api" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="dispatchRuntime">
          <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginDispatchRequest(System.ServiceModel.Security.DispatchContext,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDispatchRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dispatchContext">
          <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginProcessCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
        <parameter name="requestAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.CreateDispatchContext(System.ServiceModel.Channels.Message,System.String,System.String,System.String,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name="CreateDispatchContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="requestAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
        <parameter name="serializationContext">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.CreateSerializationContext">
      <topicdata group="api" />
      <apidata name="CreateSerializationContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)">
      <topicdata group="api" />
      <apidata name="DispatchRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dispatchContext">
          <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndDispatchRequest(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDispatchRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndProcessCore(System.IAsyncResult,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EndProcessCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="requestAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Cancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Cancel(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13CancelResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13CancelResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Issue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Issue(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13IssueResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13IssueResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Renew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Renew(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13RenewResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13RenewResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Validate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Validate(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13ValidateResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13ValidateResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrust13AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Cancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Cancel(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Issue(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Issue(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Renew(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Renew(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Validate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Validate(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <topicdata group="api" />
      <apidata name="ExportContract" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="exporter">
          <type api="T:System.ServiceModel.Description.WsdlExporter" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.ServiceModel.Description.WsdlContractConversionContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
          <type api="T:System.ServiceModel.Description.IWsdlExportExtension" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <topicdata group="api" />
      <apidata name="ExportEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="exporter">
          <type api="T:System.ServiceModel.Description.WsdlExporter" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.ServiceModel.Description.WsdlEndpointConversionContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
          <type api="T:System.ServiceModel.Description.IWsdlExportExtension" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.FixMessageElement(System.Web.Services.Description.ServiceDescription,System.Web.Services.Description.PortType,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="FixMessageElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.Web.Services.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="portType">
          <type api="T:System.Web.Services.Description.PortType" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.ServiceModel.Description.WsdlEndpointConversionContext" ref="true" />
        </parameter>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inputMessageElement">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="outputMessageElement">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.GetRstSecurityTokenResolver">
      <topicdata group="api" />
      <apidata name="GetRstSecurityTokenResolver" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.GetSecurityHeaderTokenResolver(System.ServiceModel.Channels.RequestContext)">
      <topicdata group="api" />
      <apidata name="GetSecurityHeaderTokenResolver" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestContext">
          <type api="T:System.ServiceModel.Channels.RequestContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.HandleException(System.Exception,System.String,System.String,System.ServiceModel.EnvelopeVersion)">
      <topicdata group="api" />
      <apidata name="HandleException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requestEnvelopeVersion">
          <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ImportSchema(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String)">
      <topicdata group="api" />
      <apidata name="ImportSchema" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="exporter">
          <type api="T:System.ServiceModel.Description.WsdlExporter" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.ServiceModel.Description.WsdlEndpointConversionContext" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.IncludeNamespace(System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IncludeNamespace" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.Description.WsdlEndpointConversionContext" ref="true" />
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
        <parameter name="requestAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="responseAction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trustNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrust13ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrust13SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005CancelResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Issue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005IssueResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Renew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005RenewResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ProcessTrustFeb2005ValidateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Security.IWSTrustFeb2005SyncContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Security.WSTrustServiceContract.RequestFailed">
      <topicdata group="api" />
      <apidata name="RequestFailed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RequestFailed" />
      <remover name="remove_RequestFailed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustServiceContract.SecurityTokenServiceConfiguration">
      <topicdata group="api" />
      <apidata name="SecurityTokenServiceConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenServiceConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Description.IContractBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceContract.ValidateDispatchContext(System.ServiceModel.Security.DispatchContext)">
      <topicdata group="api" />
      <apidata name="ValidateDispatchContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dispatchContext">
          <type api="T:System.ServiceModel.Security.DispatchContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.WSTrustServiceHost">
      <topicdata group="api" />
      <apidata name="WSTrustServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.#ctor">
          <element api="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration,System.Uri[])" />
          <element api="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.ServiceModel.Security.WSTrustServiceContract,System.Uri[])" />
        </element>
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.ConfigureMetadata" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.InitializeRuntime" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.UpdateServiceConfiguration" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Security.WSTrustServiceHost.SecurityTokenServiceConfiguration" />
        <element api="P:System.ServiceModel.Security.WSTrustServiceHost.ServiceContract" />
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.WSTrustServiceHost">
      <topicdata name="WSTrustServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceHost" />
      <apidata name="WSTrustServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.ConfigureMetadata" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.InitializeRuntime" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.UpdateServiceConfiguration" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.ServiceModel.Security.WSTrustServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.WSTrustServiceHost">
      <topicdata name="WSTrustServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceHost" />
      <apidata name="WSTrustServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Security.WSTrustServiceHost.SecurityTokenServiceConfiguration" />
        <element api="P:System.ServiceModel.Security.WSTrustServiceHost.ServiceContract" />
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Security.WSTrustServiceHost">
      <topicdata name="WSTrustServiceHost" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Security.WSTrustServiceHost" />
      <apidata name="WSTrustServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.WSTrustServiceHost.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration,System.Uri[])" />
        <element api="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.ServiceModel.Security.WSTrustServiceContract,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustServiceHost.#ctor" />
      <parameters>
        <parameter name="securityTokenServiceConfiguration">
          <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.#ctor(System.ServiceModel.Security.WSTrustServiceContract,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Security.WSTrustServiceHost.#ctor" />
      <parameters>
        <parameter name="serviceContract">
          <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.ApplyConfiguration">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.ConfigureMetadata">
      <topicdata group="api" />
      <apidata name="ConfigureMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.InitializeRuntime">
      <topicdata group="api" />
      <apidata name="InitializeRuntime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustServiceHost.SecurityTokenServiceConfiguration">
      <topicdata group="api" />
      <apidata name="SecurityTokenServiceConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenServiceConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.WSTrustServiceHost.ServiceContract">
      <topicdata group="api" />
      <apidata name="ServiceContract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceContract" />
      <returns>
        <type api="T:System.ServiceModel.Security.WSTrustServiceContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.WSTrustServiceHost.UpdateServiceConfiguration">
      <topicdata group="api" />
      <apidata name="UpdateServiceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.WSTrustServiceHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <topicdata group="api" />
      <apidata name="X509CertificateInitiatorClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <topicdata name="X509CertificateInitiatorClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />
      <apidata name="X509CertificateInitiatorClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <topicdata name="X509CertificateInitiatorClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />
      <apidata name="X509CertificateInitiatorClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate">
      <topicdata name="SetCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
        <element api="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Certificate" />
      <setter name="set_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
      <topicdata group="api" />
      <apidata name="X509CertificateInitiatorServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
      <topicdata name="X509CertificateInitiatorServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
      <apidata name="X509CertificateInitiatorServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
      <topicdata name="X509CertificateInitiatorServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
      <apidata name="X509CertificateInitiatorServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
        <element api="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate">
      <topicdata name="SetCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
        <element api="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication">
      <topicdata group="api" />
      <apidata name="Authentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authentication" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Certificate" />
      <setter name="set_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <topicdata group="api" />
      <apidata name="X509CertificateRecipientClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
        </element>
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <topicdata name="X509CertificateRecipientClientCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
      <apidata name="X509CertificateRecipientClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <topicdata name="X509CertificateRecipientClientCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
      <apidata name="X509CertificateRecipientClientCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate">
      <topicdata name="SetDefaultCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetDefaultCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate">
      <topicdata name="SetScopedCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetScopedCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication">
      <topicdata group="api" />
      <apidata name="Authentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authentication" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate">
      <topicdata group="api" />
      <apidata name="DefaultCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultCertificate" />
      <setter name="set_DefaultCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates">
      <topicdata group="api" />
      <apidata name="ScopedCertificates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScopedCertificates" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
            <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <topicdata group="api" />
      <apidata name="SetDefaultCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <topicdata group="api" />
      <apidata name="SetDefaultCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)">
      <topicdata group="api" />
      <apidata name="SetScopedCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetService">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)">
      <topicdata group="api" />
      <apidata name="SetScopedCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="targetService">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication">
      <topicdata group="api" />
      <apidata name="SslCertificateAuthentication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SslCertificateAuthentication" />
      <setter name="set_SslCertificateAuthentication" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
      <topicdata group="api" />
      <apidata name="X509CertificateRecipientServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
      <topicdata name="X509CertificateRecipientServiceCredential" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
      <apidata name="X509CertificateRecipientServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate">
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
          <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
      <topicdata name="X509CertificateRecipientServiceCredential" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
      <apidata name="X509CertificateRecipientServiceCredential" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate">
      <topicdata name="SetCertificate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)" />
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
        <element api="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Certificate" />
      <setter name="set_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="findType">
          <type api="T:System.Security.Cryptography.X509Certificates.X509FindType" ref="false" />
        </parameter>
        <parameter name="findValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <topicdata group="api" />
      <apidata name="SetCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subjectName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="X509CertificateValidationMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Security.X509CertificateValidationMode.None" />
        <element api="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust" />
        <element api="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust" />
        <element api="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust" />
        <element api="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust">
      <topicdata group="api" notopic="" />
      <apidata name="ChainTrust" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.X509CertificateValidationMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust">
      <topicdata group="api" notopic="" />
      <apidata name="PeerOrChainTrust" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust">
      <topicdata group="api" notopic="" />
      <apidata name="PeerTrust" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509ClientCertificateAuthentication">
      <topicdata group="api" />
      <apidata name="X509ClientCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509ClientCertificateAuthentication">
      <topicdata name="X509ClientCertificateAuthentication" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
      <apidata name="X509ClientCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509ClientCertificateAuthentication">
      <topicdata name="X509ClientCertificateAuthentication" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
      <apidata name="X509ClientCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="CertificateValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidationMode" />
      <setter name="set_CertificateValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator">
      <topicdata group="api" />
      <apidata name="CustomCertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomCertificateValidator" />
      <setter name="set_CustomCertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups">
      <topicdata group="api" />
      <apidata name="IncludeWindowsGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeWindowsGroups" />
      <setter name="set_IncludeWindowsGroups" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount">
      <topicdata group="api" />
      <apidata name="MapClientCertificateToWindowsAccount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapClientCertificateToWindowsAccount" />
      <setter name="set_MapClientCertificateToWindowsAccount" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode">
      <topicdata group="api" />
      <apidata name="RevocationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RevocationMode" />
      <setter name="set_RevocationMode" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="TrustedStoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustedStoreLocation" />
      <setter name="set_TrustedStoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509PeerCertificateAuthentication">
      <topicdata group="api" />
      <apidata name="X509PeerCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509PeerCertificateAuthentication">
      <topicdata name="X509PeerCertificateAuthentication" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />
      <apidata name="X509PeerCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509PeerCertificateAuthentication">
      <topicdata name="X509PeerCertificateAuthentication" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />
      <apidata name="X509PeerCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="CertificateValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidationMode" />
      <setter name="set_CertificateValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CustomCertificateValidator">
      <topicdata group="api" />
      <apidata name="CustomCertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomCertificateValidator" />
      <setter name="set_CustomCertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode">
      <topicdata group="api" />
      <apidata name="RevocationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RevocationMode" />
      <setter name="set_RevocationMode" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.TrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="TrustedStoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustedStoreLocation" />
      <setter name="set_TrustedStoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <topicdata group="api" />
      <apidata name="X509ServiceCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <topicdata name="X509ServiceCertificateAuthentication" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
      <apidata name="X509ServiceCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <topicdata name="X509ServiceCertificateAuthentication" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
      <apidata name="X509ServiceCertificateAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode" />
        <element api="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="CertificateValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidationMode" />
      <setter name="set_CertificateValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator">
      <topicdata group="api" />
      <apidata name="CustomCertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomCertificateValidator" />
      <setter name="set_CustomCertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode">
      <topicdata group="api" />
      <apidata name="RevocationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RevocationMode" />
      <setter name="set_RevocationMode" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="TrustedStoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustedStoreLocation" />
      <setter name="set_TrustedStoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Security" />
        <type api="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>