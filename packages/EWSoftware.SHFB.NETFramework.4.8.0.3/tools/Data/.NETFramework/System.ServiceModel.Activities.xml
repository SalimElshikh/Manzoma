<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Activities">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Activities">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Activities" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Activities.WorkflowService" />
        <element api="T:System.ServiceModel.Activities.DurableInstancingOptions" />
        <element api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" />
        <element api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" />
        <element api="T:System.ServiceModel.Activities.SerializerOption" />
        <element api="T:System.ServiceModel.Activities.WorkflowControlClient" />
        <element api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
        <element api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />
        <element api="T:System.ServiceModel.Activities.WorkflowServiceHost" />
        <element api="T:System.ServiceModel.Activities.CorrelationHandle" />
        <element api="T:System.ServiceModel.Activities.CorrelationScope" />
        <element api="T:System.ServiceModel.Activities.InitializeCorrelation" />
        <element api="T:System.ServiceModel.Activities.IReceiveMessageCallback" />
        <element api="T:System.ServiceModel.Activities.ISendMessageCallback" />
        <element api="T:System.ServiceModel.Activities.TransactedReceiveScope" />
        <element api="T:System.ServiceModel.Activities.ReceiveContent" />
        <element api="T:System.ServiceModel.Activities.ReceiveMessageContent" />
        <element api="T:System.ServiceModel.Activities.ReceiveParametersContent" />
        <element api="T:System.ServiceModel.Activities.SendContent" />
        <element api="T:System.ServiceModel.Activities.SendMessageContent" />
        <element api="T:System.ServiceModel.Activities.SendParametersContent" />
        <element api="T:System.ServiceModel.Activities.Receive" />
        <element api="T:System.ServiceModel.Activities.ReceiveReply" />
        <element api="T:System.ServiceModel.Activities.Send" />
        <element api="T:System.ServiceModel.Activities.SendReply" />
        <element api="T:System.ServiceModel.Activities.SendMessageChannelCache" />
        <element api="T:System.ServiceModel.Activities.ChannelCacheSettings" />
        <element api="T:System.ServiceModel.Activities.CorrelationInitializer" />
        <element api="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" />
        <element api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" />
        <element api="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" />
        <element api="T:System.ServiceModel.Activities.ContextCorrelationInitializer" />
        <element api="T:System.ServiceModel.Activities.WorkflowCreationContext" />
        <element api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
        <element api="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" />
        <element api="T:System.ServiceModel.Activities.HostSettings" />
        <element api="T:System.ServiceModel.Activities.MessageContext" />
        <element api="T:System.ServiceModel.Activities.ReceiveSettings" />
        <element api="T:System.ServiceModel.Activities.SendReceiveExtension" />
        <element api="T:System.ServiceModel.Activities.SendSettings" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Activities.CallbackCorrelationInitializer">
      <topicdata group="api" />
      <apidata name="CallbackCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor" />
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.CallbackCorrelationInitializer">
      <topicdata name="CallbackCorrelationInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" />
      <apidata name="CallbackCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.CallbackCorrelationInitializer">
      <topicdata name="CallbackCorrelationInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" />
      <apidata name="CallbackCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.ChannelCacheSettings">
      <topicdata group="api" />
      <apidata name="ChannelCacheSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor" />
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.IdleTimeout" />
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.LeaseTimeout" />
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.MaxItemsInCache" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ChannelCacheSettings">
      <topicdata name="ChannelCacheSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ChannelCacheSettings" />
      <apidata name="ChannelCacheSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ChannelCacheSettings">
      <topicdata name="ChannelCacheSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ChannelCacheSettings" />
      <apidata name="ChannelCacheSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.IdleTimeout" />
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.LeaseTimeout" />
        <element api="P:System.ServiceModel.Activities.ChannelCacheSettings.MaxItemsInCache" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ChannelCacheSettings.IdleTimeout">
      <topicdata group="api" />
      <apidata name="IdleTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IdleTimeout" />
      <setter name="set_IdleTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ChannelCacheSettings.LeaseTimeout">
      <topicdata group="api" />
      <apidata name="LeaseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LeaseTimeout" />
      <setter name="set_LeaseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ChannelCacheSettings.MaxItemsInCache">
      <topicdata group="api" />
      <apidata name="MaxItemsInCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxItemsInCache" />
      <setter name="set_MaxItemsInCache" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.ContextCorrelationInitializer">
      <topicdata group="api" />
      <apidata name="ContextCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor" />
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ContextCorrelationInitializer">
      <topicdata name="ContextCorrelationInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ContextCorrelationInitializer" />
      <apidata name="ContextCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ContextCorrelationInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ContextCorrelationInitializer">
      <topicdata name="ContextCorrelationInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ContextCorrelationInitializer" />
      <apidata name="ContextCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ContextCorrelationInitializer" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ContextCorrelationInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.CorrelationHandle">
      <topicdata group="api" />
      <apidata name="CorrelationHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Handle" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.CorrelationHandle.#ctor" />
        <element api="M:System.ServiceModel.Activities.CorrelationHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.ServiceModel.Activities.CorrelationHandle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.CorrelationHandle">
      <topicdata name="CorrelationHandle" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.CorrelationHandle" />
      <apidata name="CorrelationHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationHandle.#ctor" />
      <elements>
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.CorrelationHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.ServiceModel.Activities.CorrelationHandle.OnUninitialize(System.Activities.HandleInitializationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.CorrelationHandle">
      <topicdata name="CorrelationHandle" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.CorrelationHandle" />
      <apidata name="CorrelationHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationHandle.#ctor" />
      <elements>
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationHandle" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationHandle.OnInitialize(System.Activities.HandleInitializationContext)">
      <topicdata group="api" />
      <apidata name="OnInitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)">
          <type api="T:System.Activities.Handle" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.HandleInitializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationHandle.OnUninitialize(System.Activities.HandleInitializationContext)">
      <topicdata group="api" />
      <apidata name="OnUninitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)">
          <type api="T:System.Activities.Handle" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.HandleInitializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.CorrelationInitializer">
      <topicdata group="api" />
      <apidata name="CorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" ref="true" />
          <type api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" ref="true" />
          <type api="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" ref="true" />
          <type api="T:System.ServiceModel.Activities.ContextCorrelationInitializer" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.CorrelationInitializer">
      <topicdata name="CorrelationInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.CorrelationInitializer" />
      <apidata name="CorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.CorrelationInitializer">
      <topicdata name="CorrelationInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.CorrelationInitializer" />
      <apidata name="CorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationInitializer" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle">
      <topicdata group="api" />
      <apidata name="CorrelationHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelationHandle" />
      <setter name="set_CorrelationHandle" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.CorrelationScope">
      <topicdata group="api" />
      <apidata name="CorrelationScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationScope.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.ServiceModel.Activities.CorrelationScope.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Activities.CorrelationScope.#ctor" />
        <element api="Overload:System.ServiceModel.Activities.CorrelationScope.CacheMetadata">
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.ServiceModel.Activities.CorrelationScope.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.ServiceModel.Activities.CorrelationScope.Execute(System.Activities.NativeActivityContext)" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.NativeActivity.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity.Implementation" />
        <element api="P:System.Activities.NativeActivity.ImplementationVersion" />
        <element api="P:System.ServiceModel.Activities.CorrelationScope.Body" />
        <element api="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.CorrelationScope">
      <topicdata name="CorrelationScope" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.CorrelationScope" />
      <apidata name="CorrelationScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationScope.#ctor" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.ServiceModel.Activities.CorrelationScope.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Activities.CorrelationScope.CacheMetadata">
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.ServiceModel.Activities.CorrelationScope.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.ServiceModel.Activities.CorrelationScope.Execute(System.Activities.NativeActivityContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.CorrelationScope">
      <topicdata name="CorrelationScope" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.CorrelationScope" />
      <apidata name="CorrelationScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.CorrelationScope.#ctor" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.NativeActivity.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity.Implementation" />
        <element api="P:System.Activities.NativeActivity.ImplementationVersion" />
        <element api="P:System.ServiceModel.Activities.CorrelationScope.Body" />
        <element api="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.CorrelationScope.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.ServiceModel.Activities.CorrelationScope.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationScope.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.CorrelationScope.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Body" />
      <setter name="set_Body" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationScope.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Activities.CorrelationScope.CacheMetadata" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
          <type api="T:System.Activities.NativeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith">
      <topicdata group="api" />
      <apidata name="CorrelatesWith" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelatesWith" />
      <setter name="set_CorrelatesWith" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.CorrelationScope.Execute(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
          <type api="T:System.Activities.NativeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.DurableInstancingOptions">
      <topicdata group="api" />
      <apidata name="DurableInstancingOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
        <element api="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInstanceOwnerValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
        <element api="P:System.ServiceModel.Activities.DurableInstancingOptions.InstanceStore" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.DurableInstancingOptions">
      <topicdata name="DurableInstancingOptions" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.DurableInstancingOptions" />
      <apidata name="DurableInstancingOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
        <element api="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInstanceOwnerValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.DurableInstancingOptions">
      <topicdata name="DurableInstancingOptions" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.DurableInstancingOptions" />
      <apidata name="DurableInstancingOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Activities.DurableInstancingOptions.InstanceStore" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <topicdata group="api" />
      <apidata name="AddInitialInstanceValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writeOnlyValues">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XName" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInstanceOwnerValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <topicdata group="api" />
      <apidata name="AddInstanceOwnerValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readWriteValues">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XName" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="writeOnlyValues">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XName" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.DurableInstancingOptions.InstanceStore">
      <topicdata group="api" />
      <apidata name="InstanceStore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceStore" />
      <setter name="set_InstanceStore" />
      <returns>
        <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.HostSettings">
      <topicdata group="api" />
      <apidata name="HostSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.HostSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.HostSettings.#ctor" />
        <element api="P:System.ServiceModel.Activities.HostSettings.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.Activities.HostSettings.ScopeName" />
        <element api="P:System.ServiceModel.Activities.HostSettings.UseNoPersistHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.HostSettings">
      <topicdata name="HostSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.HostSettings" />
      <apidata name="HostSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.HostSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.HostSettings">
      <topicdata name="HostSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.HostSettings" />
      <apidata name="HostSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.HostSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.HostSettings.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.Activities.HostSettings.ScopeName" />
        <element api="P:System.ServiceModel.Activities.HostSettings.UseNoPersistHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.HostSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.HostSettings.IncludeExceptionDetailInFaults">
      <topicdata group="api" />
      <apidata name="IncludeExceptionDetailInFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeExceptionDetailInFaults" />
      <setter name="set_IncludeExceptionDetailInFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.HostSettings.ScopeName">
      <topicdata group="api" />
      <apidata name="ScopeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScopeName" />
      <setter name="set_ScopeName" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.HostSettings.UseNoPersistHandle">
      <topicdata group="api" />
      <apidata name="UseNoPersistHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseNoPersistHandle" />
      <setter name="set_UseNoPersistHandle" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.HostSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.InitializeCorrelation">
      <topicdata group="api" />
      <apidata name="InitializeCorrelation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor" contentProperty="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.InitializeCorrelation.Correlation" />
        <element api="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CorrelationData</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.InitializeCorrelation">
      <topicdata name="InitializeCorrelation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.InitializeCorrelation" />
      <apidata name="InitializeCorrelation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor" contentProperty="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.InitializeCorrelation" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.InitializeCorrelation">
      <topicdata name="InitializeCorrelation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.InitializeCorrelation" />
      <apidata name="InitializeCorrelation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor" contentProperty="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.InitializeCorrelation.Correlation" />
        <element api="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.InitializeCorrelation" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.InitializeCorrelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.InitializeCorrelation.Correlation">
      <topicdata group="api" />
      <apidata name="Correlation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Correlation" />
      <setter name="set_Correlation" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.InitializeCorrelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData">
      <topicdata group="api" />
      <apidata name="CorrelationData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationData" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.InArgument`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.InitializeCorrelation" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.IReceiveMessageCallback">
      <topicdata group="api" />
      <apidata name="IReceiveMessageCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage(System.ServiceModel.OperationContext,System.Activities.ExecutionProperties)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.IReceiveMessageCallback">
      <topicdata name="IReceiveMessageCallback" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.IReceiveMessageCallback" />
      <apidata name="IReceiveMessageCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage(System.ServiceModel.OperationContext,System.Activities.ExecutionProperties)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IReceiveMessageCallback" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage(System.ServiceModel.OperationContext,System.Activities.ExecutionProperties)">
      <topicdata group="api" />
      <apidata name="OnReceiveMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
        <parameter name="activityExecutionProperties">
          <type api="T:System.Activities.ExecutionProperties" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IReceiveMessageCallback" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.ISendMessageCallback">
      <topicdata group="api" />
      <apidata name="ISendMessageCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.ISendMessageCallback.OnSendMessage(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ISendMessageCallback">
      <topicdata name="ISendMessageCallback" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ISendMessageCallback" />
      <apidata name="ISendMessageCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.ISendMessageCallback.OnSendMessage(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ISendMessageCallback" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ISendMessageCallback.OnSendMessage(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name="OnSendMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ISendMessageCallback" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.IWorkflowInstanceManagement">
      <topicdata group="api" />
      <apidata name="IWorkflowInstanceManagement" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWorkflowInstanceManagement</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.datacontract.org/2008/10/WorkflowServices</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.IWorkflowInstanceManagement">
      <topicdata name="IWorkflowInstanceManagement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" />
      <apidata name="IWorkflowInstanceManagement" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Abandon</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Abandon</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Cancel</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Run</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Suspend</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Terminate</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedCancel</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedRun</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedSuspend</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedTerminate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedUnsuspend</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Unsuspend</value>
          </assignment>
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Cancel</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Run</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Suspend</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Terminate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)">
      <topicdata group="api" />
      <apidata name="TransactedCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedCancel</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)">
      <topicdata group="api" />
      <apidata name="TransactedRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedRun</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="TransactedSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedSuspend</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="TransactedTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedTerminate</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="TransactedUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedUnsuspend</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="Unsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Unsuspend</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement">
      <topicdata group="api" />
      <apidata name="IWorkflowUpdateableInstanceManagement" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginTransactedUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndTransactedUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.TransactedUpdate(System.Guid,System.Activities.WorkflowIdentity)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.Update(System.Guid,System.Activities.WorkflowIdentity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IWorkflowInstanceManagement</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.datacontract.org/2008/10/WorkflowServices</value>
          </assignment>
          <assignment name="ConfigurationName">
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Activities.IWorkflowInstanceManagement</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement">
      <topicdata name="IWorkflowUpdateableInstanceManagement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" />
      <apidata name="IWorkflowUpdateableInstanceManagement" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginTransactedUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndTransactedUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.TransactedUpdate(System.Guid,System.Activities.WorkflowIdentity)" />
        <element api="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.Update(System.Guid,System.Activities.WorkflowIdentity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginTransactedUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTransactedUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedUpdate</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Update</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndTransactedUpdate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTransactedUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.EndUpdate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.TransactedUpdate(System.Guid,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name="TransactedUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>TransactedUpdate</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.TransactionFlowAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.TransactionFlowOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement.Update(System.Guid,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Update</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.MessageContext">
      <topicdata group="api" />
      <apidata name="MessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.MessageContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.MessageContext.#ctor" />
        <element api="P:System.ServiceModel.Activities.MessageContext.EndToEndTracingId" />
        <element api="P:System.ServiceModel.Activities.MessageContext.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.MessageContext">
      <topicdata name="MessageContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.MessageContext" />
      <apidata name="MessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.MessageContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.MessageContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.MessageContext">
      <topicdata name="MessageContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.MessageContext" />
      <apidata name="MessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.MessageContext.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.MessageContext.EndToEndTracingId" />
        <element api="P:System.ServiceModel.Activities.MessageContext.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.MessageContext" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.MessageContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.MessageContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.MessageContext.EndToEndTracingId">
      <topicdata group="api" />
      <apidata name="EndToEndTracingId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EndToEndTracingId" />
      <setter name="set_EndToEndTracingId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.MessageContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.MessageContext.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.MessageContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.QueryCorrelationInitializer">
      <topicdata group="api" />
      <apidata name="QueryCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor" contentProperty="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor" />
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
        <element api="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MessageQuerySet</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.QueryCorrelationInitializer">
      <topicdata name="QueryCorrelationInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.QueryCorrelationInitializer" />
      <apidata name="QueryCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor" contentProperty="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.QueryCorrelationInitializer">
      <topicdata name="QueryCorrelationInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.QueryCorrelationInitializer" />
      <apidata name="QueryCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor" contentProperty="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" />
      <elements>
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
        <element api="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet">
      <topicdata group="api" />
      <apidata name="MessageQuerySet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageQuerySet" />
      <setter name="set_MessageQuerySet" />
      <returns>
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.QueryCorrelationInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.Receive">
      <topicdata group="api" />
      <apidata name="Receive" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Receive.#ctor" contentProperty="P:System.ServiceModel.Activities.Receive.Content" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.Receive.#ctor" />
        <element api="M:System.ServiceModel.Activities.Receive.FromOperationDescription(System.ServiceModel.Description.OperationDescription)" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.Receive.Action" />
        <element api="P:System.ServiceModel.Activities.Receive.CanCreateInstance" />
        <element api="P:System.ServiceModel.Activities.Receive.Content" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelatesOn" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelatesWith" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.Receive.KnownTypes" />
        <element api="P:System.ServiceModel.Activities.Receive.OperationName" />
        <element api="P:System.ServiceModel.Activities.Receive.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.Receive.SerializerOption" />
        <element api="P:System.ServiceModel.Activities.Receive.ServiceContractName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Content</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.Receive">
      <topicdata name="Receive" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.Receive" />
      <apidata name="Receive" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Receive.#ctor" contentProperty="P:System.ServiceModel.Activities.Receive.Content" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.Receive.FromOperationDescription(System.ServiceModel.Description.OperationDescription)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.Receive">
      <topicdata name="Receive" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.Receive" />
      <apidata name="Receive" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Receive.#ctor" contentProperty="P:System.ServiceModel.Activities.Receive.Content" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.Receive.Action" />
        <element api="P:System.ServiceModel.Activities.Receive.CanCreateInstance" />
        <element api="P:System.ServiceModel.Activities.Receive.Content" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelatesOn" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelatesWith" />
        <element api="P:System.ServiceModel.Activities.Receive.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.Receive.KnownTypes" />
        <element api="P:System.ServiceModel.Activities.Receive.OperationName" />
        <element api="P:System.ServiceModel.Activities.Receive.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.Receive.SerializerOption" />
        <element api="P:System.ServiceModel.Activities.Receive.ServiceContractName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.Receive.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.CanCreateInstance">
      <topicdata group="api" />
      <apidata name="CanCreateInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanCreateInstance" />
      <setter name="set_CanCreateInstance" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.CorrelatesOn">
      <topicdata group="api" />
      <apidata name="CorrelatesOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelatesOn" />
      <setter name="set_CorrelatesOn" />
      <returns>
        <type api="T:System.ServiceModel.MessageQuerySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.CorrelatesWith">
      <topicdata group="api" />
      <apidata name="CorrelatesWith" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelatesWith" />
      <setter name="set_CorrelatesWith" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.CorrelationInitializers">
      <topicdata group="api" />
      <apidata name="CorrelationInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationInitializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.Receive.FromOperationDescription(System.ServiceModel.Description.OperationDescription)">
      <topicdata group="api" />
      <apidata name="FromOperationDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.KnownTypes">
      <topicdata group="api" />
      <apidata name="KnownTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KnownTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.OperationName">
      <topicdata group="api" />
      <apidata name="OperationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationName" />
      <setter name="set_OperationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.SerializerOption">
      <topicdata group="api" />
      <apidata name="SerializerOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializerOption" />
      <setter name="set_SerializerOption" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
            <enumValue>
              <field name="DataContractSerializer" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Receive.ServiceContractName">
      <topicdata group="api" />
      <apidata name="ServiceContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceContractName" />
      <setter name="set_ServiceContractName" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.ReceiveContent">
      <topicdata group="api" />
      <apidata name="ReceiveContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
          <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.ReceiveContent.Create">
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})" />
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)" />
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ReceiveContent">
      <topicdata name="ReceiveContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ReceiveContent" />
      <apidata name="ReceiveContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.ReceiveContent.Create">
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})" />
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)" />
          <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.ReceiveContent.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})" />
        <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)" />
        <element api="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.ReceiveContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.OutArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.ReceiveContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.OutArgument" ref="true" />
        </parameter>
        <parameter name="declaredMessageType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.ReceiveContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Activities.OutArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.ReceiveMessageContent">
      <topicdata group="api" />
      <apidata name="ReceiveMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveMessageContent.Message" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.ReceiveMessageContent.#ctor">
          <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" />
          <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument)" />
          <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument,System.Type)" />
        </element>
        <element api="P:System.ServiceModel.Activities.ReceiveMessageContent.DeclaredMessageType" />
        <element api="P:System.ServiceModel.Activities.ReceiveMessageContent.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Message</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ReceiveMessageContent">
      <topicdata name="ReceiveMessageContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ReceiveMessageContent" />
      <apidata name="ReceiveMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveMessageContent.Message" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ReceiveMessageContent">
      <topicdata name="ReceiveMessageContent" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ReceiveMessageContent" />
      <apidata name="ReceiveMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveMessageContent.Message" />
      <elements>
        <element api="P:System.ServiceModel.Activities.ReceiveMessageContent.DeclaredMessageType" />
        <element api="P:System.ServiceModel.Activities.ReceiveMessageContent.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.ReceiveMessageContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" />
        <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument)" />
        <element api="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.OutArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.ReceiveMessageContent.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.OutArgument" ref="true" />
        </parameter>
        <parameter name="declaredMessageType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveMessageContent.DeclaredMessageType">
      <topicdata group="api" />
      <apidata name="DeclaredMessageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeclaredMessageType" />
      <setter name="set_DeclaredMessageType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveMessageContent.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.Activities.OutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveMessageContent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.ReceiveParametersContent">
      <topicdata group="api" />
      <apidata name="ReceiveParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.ReceiveParametersContent.#ctor">
          <element api="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" />
          <element api="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})" />
        </element>
        <element api="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Parameters</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ReceiveParametersContent">
      <topicdata name="ReceiveParametersContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ReceiveParametersContent" />
      <apidata name="ReceiveParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ReceiveParametersContent">
      <topicdata name="ReceiveParametersContent" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ReceiveParametersContent" />
      <apidata name="ReceiveParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" />
      <elements>
        <element api="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.ReceiveParametersContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" />
        <element api="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.ReceiveParametersContent.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Activities.OutArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.OutArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveParametersContent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.ReceiveReply">
      <topicdata group="api" />
      <apidata name="ReceiveReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveReply.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveReply.Content" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.ReceiveReply.#ctor" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Action" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Content" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Request" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Content</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ReceiveReply">
      <topicdata name="ReceiveReply" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ReceiveReply" />
      <apidata name="ReceiveReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveReply.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveReply.Content" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ReceiveReply">
      <topicdata name="ReceiveReply" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ReceiveReply" />
      <apidata name="ReceiveReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveReply.#ctor" contentProperty="P:System.ServiceModel.Activities.ReceiveReply.Content" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Action" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Content" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.ReceiveReply.Request" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveReply.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveReply.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveReply.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.ServiceModel.Activities.ReceiveContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveReply.CorrelationInitializers">
      <topicdata group="api" />
      <apidata name="CorrelationInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationInitializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveReply.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.ReceiveSettings">
      <topicdata group="api" />
      <apidata name="ReceiveSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.ReceiveSettings.#ctor" />
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.Action" />
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.CanCreateInstance" />
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.OwnerDisplayName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.ReceiveSettings">
      <topicdata name="ReceiveSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.ReceiveSettings" />
      <apidata name="ReceiveSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.ReceiveSettings">
      <topicdata name="ReceiveSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.ReceiveSettings" />
      <apidata name="ReceiveSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.ReceiveSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.Action" />
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.CanCreateInstance" />
        <element api="P:System.ServiceModel.Activities.ReceiveSettings.OwnerDisplayName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.ReceiveSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveSettings.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveSettings.CanCreateInstance">
      <topicdata group="api" />
      <apidata name="CanCreateInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanCreateInstance" />
      <setter name="set_CanCreateInstance" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.ReceiveSettings.OwnerDisplayName">
      <topicdata group="api" />
      <apidata name="OwnerDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerDisplayName" />
      <setter name="set_OwnerDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer">
      <topicdata group="api" />
      <apidata name="RequestReplyCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor" />
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer">
      <topicdata name="RequestReplyCorrelationInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" />
      <apidata name="RequestReplyCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer">
      <topicdata name="RequestReplyCorrelationInitializer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" />
      <apidata name="RequestReplyCorrelationInitializer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.Send">
      <topicdata group="api" />
      <apidata name="Send" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Send.#ctor" contentProperty="P:System.ServiceModel.Activities.Send.Content" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.Send.#ctor" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.Send.Action" />
        <element api="P:System.ServiceModel.Activities.Send.Content" />
        <element api="P:System.ServiceModel.Activities.Send.CorrelatesWith" />
        <element api="P:System.ServiceModel.Activities.Send.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.Send.Endpoint" />
        <element api="P:System.ServiceModel.Activities.Send.EndpointAddress" />
        <element api="P:System.ServiceModel.Activities.Send.EndpointConfigurationName" />
        <element api="P:System.ServiceModel.Activities.Send.KnownTypes" />
        <element api="P:System.ServiceModel.Activities.Send.OperationName" />
        <element api="P:System.ServiceModel.Activities.Send.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.Send.SerializerOption" />
        <element api="P:System.ServiceModel.Activities.Send.ServiceContractName" />
        <element api="P:System.ServiceModel.Activities.Send.TokenImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Content</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.Send">
      <topicdata name="Send" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.Send" />
      <apidata name="Send" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Send.#ctor" contentProperty="P:System.ServiceModel.Activities.Send.Content" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.Send">
      <topicdata name="Send" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.Send" />
      <apidata name="Send" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.Send.#ctor" contentProperty="P:System.ServiceModel.Activities.Send.Content" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.Send.Action" />
        <element api="P:System.ServiceModel.Activities.Send.Content" />
        <element api="P:System.ServiceModel.Activities.Send.CorrelatesWith" />
        <element api="P:System.ServiceModel.Activities.Send.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.Send.Endpoint" />
        <element api="P:System.ServiceModel.Activities.Send.EndpointAddress" />
        <element api="P:System.ServiceModel.Activities.Send.EndpointConfigurationName" />
        <element api="P:System.ServiceModel.Activities.Send.KnownTypes" />
        <element api="P:System.ServiceModel.Activities.Send.OperationName" />
        <element api="P:System.ServiceModel.Activities.Send.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.Send.SerializerOption" />
        <element api="P:System.ServiceModel.Activities.Send.ServiceContractName" />
        <element api="P:System.ServiceModel.Activities.Send.TokenImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.Send.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.CorrelatesWith">
      <topicdata group="api" />
      <apidata name="CorrelatesWith" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CorrelatesWith" />
      <setter name="set_CorrelatesWith" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.CorrelationInitializers">
      <topicdata group="api" />
      <apidata name="CorrelationInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationInitializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Endpoint" />
      <setter name="set_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.EndpointAddress">
      <topicdata group="api" />
      <apidata name="EndpointAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointAddress" />
      <setter name="set_EndpointAddress" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.EndpointConfigurationName">
      <topicdata group="api" />
      <apidata name="EndpointConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointConfigurationName" />
      <setter name="set_EndpointConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.KnownTypes">
      <topicdata group="api" />
      <apidata name="KnownTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KnownTypes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.OperationName">
      <topicdata group="api" />
      <apidata name="OperationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationName" />
      <setter name="set_OperationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.SerializerOption">
      <topicdata group="api" />
      <apidata name="SerializerOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializerOption" />
      <setter name="set_SerializerOption" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
            <enumValue>
              <field name="DataContractSerializer" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.ServiceContractName">
      <topicdata group="api" />
      <apidata name="ServiceContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceContractName" />
      <setter name="set_ServiceContractName" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.Send.TokenImpersonationLevel">
      <topicdata group="api" />
      <apidata name="TokenImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenImpersonationLevel" />
      <setter name="set_TokenImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.Send" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
            <enumValue>
              <field name="Identification" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.SendContent">
      <topicdata group="api" />
      <apidata name="SendContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
          <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.SendContent.Create">
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)" />
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendContent">
      <topicdata name="SendContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendContent" />
      <apidata name="SendContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.SendContent.Create">
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)" />
          <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.SendContent.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
        <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)" />
        <element api="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.SendContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.InArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.SendContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.InArgument" ref="true" />
        </parameter>
        <parameter name="declaredMessageType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.Activities.SendContent.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Activities.InArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.SendMessageChannelCache">
      <topicdata group="api" />
      <apidata name="SendMessageChannelCache" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.SendMessageChannelCache.#ctor">
          <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
          <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings)" />
          <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings,System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.Dispose" />
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.AllowUnsafeCaching" />
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.ChannelSettings" />
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.FactorySettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendMessageChannelCache">
      <topicdata name="SendMessageChannelCache" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendMessageChannelCache" />
      <apidata name="SendMessageChannelCache" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendMessageChannelCache">
      <topicdata name="SendMessageChannelCache" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendMessageChannelCache" />
      <apidata name="SendMessageChannelCache" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.AllowUnsafeCaching" />
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.ChannelSettings" />
        <element api="P:System.ServiceModel.Activities.SendMessageChannelCache.FactorySettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.SendMessageChannelCache.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
        <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings)" />
        <element api="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <parameters>
        <parameter name="factorySettings">
          <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
        </parameter>
        <parameter name="channelSettings">
          <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageChannelCache.#ctor" />
      <parameters>
        <parameter name="factorySettings">
          <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
        </parameter>
        <parameter name="channelSettings">
          <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
        </parameter>
        <parameter name="allowUnsafeCaching">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendMessageChannelCache.AllowUnsafeCaching">
      <topicdata group="api" />
      <apidata name="AllowUnsafeCaching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowUnsafeCaching" />
      <setter name="set_AllowUnsafeCaching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendMessageChannelCache.ChannelSettings">
      <topicdata group="api" />
      <apidata name="ChannelSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChannelSettings" />
      <setter name="set_ChannelSettings" />
      <returns>
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageChannelCache.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendMessageChannelCache.FactorySettings">
      <topicdata group="api" />
      <apidata name="FactorySettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FactorySettings" />
      <setter name="set_FactorySettings" />
      <returns>
        <type api="T:System.ServiceModel.Activities.ChannelCacheSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageChannelCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.SendMessageContent">
      <topicdata group="api" />
      <apidata name="SendMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.SendMessageContent.#ctor">
          <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor" />
          <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)" />
          <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)" />
        </element>
        <element api="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
        <element api="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Message</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendMessageContent">
      <topicdata name="SendMessageContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendMessageContent" />
      <apidata name="SendMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendMessageContent">
      <topicdata name="SendMessageContent" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendMessageContent" />
      <apidata name="SendMessageContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendMessageContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <elements>
        <element api="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
        <element api="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.SendMessageContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor" />
        <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)" />
        <element api="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.InArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Activities.InArgument" ref="true" />
        </parameter>
        <parameter name="declaredMessageType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
      <topicdata group="api" />
      <apidata name="DeclaredMessageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeclaredMessageType" />
      <setter name="set_DeclaredMessageType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.SendMessageContent.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.Activities.InArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendMessageContent" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.SendParametersContent">
      <topicdata group="api" />
      <apidata name="SendParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.SendParametersContent.#ctor">
          <element api="M:System.ServiceModel.Activities.SendParametersContent.#ctor" />
          <element api="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
        </element>
        <element api="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Parameters</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendParametersContent">
      <topicdata name="SendParametersContent" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendParametersContent" />
      <apidata name="SendParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendParametersContent">
      <topicdata name="SendParametersContent" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendParametersContent" />
      <apidata name="SendParametersContent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendParametersContent.#ctor" contentProperty="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <elements>
        <element api="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.SendParametersContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.SendParametersContent.#ctor" />
        <element api="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendParametersContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendParametersContent.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.SendParametersContent.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Activities.InArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendParametersContent.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.InArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendParametersContent" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.SendReceiveExtension">
      <topicdata group="api" />
      <apidata name="SendReceiveExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.#ctor" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.Cancel(System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.OnRegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.OnUninitializeCorrelation(System.Runtime.DurableInstancing.InstanceKey)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.RegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.Send(System.ServiceModel.Activities.MessageContext,System.ServiceModel.Activities.SendSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
        <element api="P:System.ServiceModel.Activities.SendReceiveExtension.HostSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendReceiveExtension">
      <topicdata name="SendReceiveExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendReceiveExtension" />
      <apidata name="SendReceiveExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.Cancel(System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.OnRegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.OnUninitializeCorrelation(System.Runtime.DurableInstancing.InstanceKey)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.RegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
        <element api="M:System.ServiceModel.Activities.SendReceiveExtension.Send(System.ServiceModel.Activities.MessageContext,System.ServiceModel.Activities.SendSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendReceiveExtension">
      <topicdata name="SendReceiveExtension" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendReceiveExtension" />
      <apidata name="SendReceiveExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Activities.SendReceiveExtension.HostSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.Cancel(System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReceiveExtension.HostSettings">
      <topicdata group="api" />
      <apidata name="HostSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HostSettings" />
      <returns>
        <type api="T:System.ServiceModel.Activities.HostSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.OnRegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="OnRegisterReceive" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
        </parameter>
        <parameter name="correlatesWith">
          <type api="T:System.Runtime.DurableInstancing.InstanceKey" ref="true" />
        </parameter>
        <parameter name="receiveBookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.OnUninitializeCorrelation(System.Runtime.DurableInstancing.InstanceKey)">
      <topicdata group="api" />
      <apidata name="OnUninitializeCorrelation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="correlationKey">
          <type api="T:System.Runtime.DurableInstancing.InstanceKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.RegisterReceive(System.ServiceModel.Activities.ReceiveSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="RegisterReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.ServiceModel.Activities.ReceiveSettings" ref="true" />
        </parameter>
        <parameter name="correlatesWith">
          <type api="T:System.Runtime.DurableInstancing.InstanceKey" ref="true" />
        </parameter>
        <parameter name="receiveBookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReceiveExtension.Send(System.ServiceModel.Activities.MessageContext,System.ServiceModel.Activities.SendSettings,System.Runtime.DurableInstancing.InstanceKey,System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Activities.MessageContext" ref="true" />
        </parameter>
        <parameter name="settings">
          <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
        </parameter>
        <parameter name="correlatesWith">
          <type api="T:System.Runtime.DurableInstancing.InstanceKey" ref="true" />
        </parameter>
        <parameter name="sendCompleteBookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReceiveExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.SendReply">
      <topicdata group="api" />
      <apidata name="SendReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendReply.#ctor" contentProperty="P:System.ServiceModel.Activities.SendReply.Content" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.SendReply.#ctor" />
        <element api="M:System.ServiceModel.Activities.SendReply.FromOperationDescription(System.ServiceModel.Description.OperationDescription,System.Collections.Generic.IEnumerable{System.ServiceModel.Activities.SendReply}@)" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.SendReply.Action" />
        <element api="P:System.ServiceModel.Activities.SendReply.Content" />
        <element api="P:System.ServiceModel.Activities.SendReply.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.SendReply.PersistBeforeSend" />
        <element api="P:System.ServiceModel.Activities.SendReply.Request" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Content</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendReply">
      <topicdata name="SendReply" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendReply" />
      <apidata name="SendReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendReply.#ctor" contentProperty="P:System.ServiceModel.Activities.SendReply.Content" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.SendReply.FromOperationDescription(System.ServiceModel.Description.OperationDescription,System.Collections.Generic.IEnumerable{System.ServiceModel.Activities.SendReply}@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendReply">
      <topicdata name="SendReply" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendReply" />
      <apidata name="SendReply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendReply.#ctor" contentProperty="P:System.ServiceModel.Activities.SendReply.Content" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.SendReply.Action" />
        <element api="P:System.ServiceModel.Activities.SendReply.Content" />
        <element api="P:System.ServiceModel.Activities.SendReply.CorrelationInitializers" />
        <element api="P:System.ServiceModel.Activities.SendReply.PersistBeforeSend" />
        <element api="P:System.ServiceModel.Activities.SendReply.Request" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReply.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReply.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReply.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SendContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReply.CorrelationInitializers">
      <topicdata group="api" />
      <apidata name="CorrelationInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationInitializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.CorrelationInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.SendReply.FromOperationDescription(System.ServiceModel.Description.OperationDescription,System.Collections.Generic.IEnumerable{System.ServiceModel.Activities.SendReply}@)">
      <topicdata group="api" />
      <apidata name="FromOperationDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.ServiceModel.Description.OperationDescription" ref="true" />
        </parameter>
        <parameter name="faultReplies" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReply.PersistBeforeSend">
      <topicdata group="api" />
      <apidata name="PersistBeforeSend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistBeforeSend" />
      <setter name="set_PersistBeforeSend" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.SendReply.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Activities.SendSettings">
      <topicdata group="api" />
      <apidata name="SendSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.SendSettings.#ctor" />
        <element api="P:System.ServiceModel.Activities.SendSettings.Endpoint" />
        <element api="P:System.ServiceModel.Activities.SendSettings.EndpointAddress" />
        <element api="P:System.ServiceModel.Activities.SendSettings.EndpointConfigurationName" />
        <element api="P:System.ServiceModel.Activities.SendSettings.IsOneWay" />
        <element api="P:System.ServiceModel.Activities.SendSettings.OwnerDisplayName" />
        <element api="P:System.ServiceModel.Activities.SendSettings.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend" />
        <element api="P:System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.SendSettings">
      <topicdata name="SendSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.SendSettings" />
      <apidata name="SendSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.SendSettings">
      <topicdata name="SendSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.SendSettings" />
      <apidata name="SendSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.SendSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.SendSettings.Endpoint" />
        <element api="P:System.ServiceModel.Activities.SendSettings.EndpointAddress" />
        <element api="P:System.ServiceModel.Activities.SendSettings.EndpointConfigurationName" />
        <element api="P:System.ServiceModel.Activities.SendSettings.IsOneWay" />
        <element api="P:System.ServiceModel.Activities.SendSettings.OwnerDisplayName" />
        <element api="P:System.ServiceModel.Activities.SendSettings.ProtectionLevel" />
        <element api="P:System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend" />
        <element api="P:System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.SendSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Endpoint" />
      <setter name="set_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Endpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.EndpointAddress">
      <topicdata group="api" />
      <apidata name="EndpointAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointAddress" />
      <setter name="set_EndpointAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.EndpointConfigurationName">
      <topicdata group="api" />
      <apidata name="EndpointConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointConfigurationName" />
      <setter name="set_EndpointConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.OwnerDisplayName">
      <topicdata group="api" />
      <apidata name="OwnerDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerDisplayName" />
      <setter name="set_OwnerDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectionLevel" />
      <setter name="set_ProtectionLevel" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend">
      <topicdata group="api" />
      <apidata name="RequirePersistBeforeSend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequirePersistBeforeSend" />
      <setter name="set_RequirePersistBeforeSend" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel">
      <topicdata group="api" />
      <apidata name="TokenImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenImpersonationLevel" />
      <setter name="set_TokenImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SendSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.SerializerOption">
      <topicdata group="api" />
      <apidata name="SerializerOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Activities.SerializerOption.DataContractSerializer" />
        <element api="F:System.ServiceModel.Activities.SerializerOption.XmlSerializer" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Activities.SerializerOption.DataContractSerializer">
      <topicdata group="api" notopic="" />
      <apidata name="DataContractSerializer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Activities.SerializerOption.XmlSerializer">
      <topicdata group="api" notopic="" />
      <apidata name="XmlSerializer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.SerializerOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.TransactedReceiveScope">
      <topicdata group="api" />
      <apidata name="TransactedReceiveScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor" contentProperty="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Request" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Variables" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Body</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.TransactedReceiveScope">
      <topicdata name="TransactedReceiveScope" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.TransactedReceiveScope" />
      <apidata name="TransactedReceiveScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor" contentProperty="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.TransactedReceiveScope">
      <topicdata name="TransactedReceiveScope" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.TransactedReceiveScope" />
      <apidata name="TransactedReceiveScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor" contentProperty="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Request" />
        <element api="P:System.ServiceModel.Activities.TransactedReceiveScope.Variables" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.TransactedReceiveScope.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Body" />
      <setter name="set_Body" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.TransactedReceiveScope.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.TransactedReceiveScope.Variables">
      <topicdata group="api" />
      <apidata name="Variables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variables" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Variable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowControlClient">
      <topicdata group="api" />
      <apidata name="WorkflowControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Activities.IWorkflowInstanceManagement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.AbandonCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.CancelCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.RunCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.SuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.TerminateCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendCompleted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Abandon">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Cancel(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Run(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.RunAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Suspend">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Terminate">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Unsuspend(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowControlClient">
      <topicdata name="WorkflowControlClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowControlClient" />
      <apidata name="WorkflowControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Abandon">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Cancel(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Run(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.RunAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Suspend">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.Terminate">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Unsuspend(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowControlClient">
      <topicdata name="WorkflowControlClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowControlClient" />
      <apidata name="WorkflowControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Activities.WorkflowControlClient">
      <topicdata name="WorkflowControlClient" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Activities.WorkflowControlClient" />
      <apidata name="WorkflowControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.AbandonCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.CancelCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.RunCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.SuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.TerminateCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendCompleted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.Abandon">
      <topicdata name="Abandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync">
      <topicdata name="AbandonAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon">
      <topicdata name="BeginAbandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend">
      <topicdata name="BeginSuspend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate">
      <topicdata name="BeginTerminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync">
      <topicdata name="CancelAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.RunAsync">
      <topicdata name="RunAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.Suspend">
      <topicdata name="Suspend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync">
      <topicdata name="SuspendAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.Terminate">
      <topicdata name="Terminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync">
      <topicdata name="TerminateAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync">
      <topicdata name="UnsuspendAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <parameters>
        <parameter name="workflowEndpoint">
          <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Abandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Abandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.AbandonCompleted">
      <topicdata group="api" />
      <apidata name="AbandonCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AbandonCompleted" />
      <remover name="remove_AbandonCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Cancel(System.Guid)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.CancelCompleted">
      <topicdata group="api" />
      <apidata name="CancelCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CancelCompleted" />
      <remover name="remove_CancelCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndAbandon(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndRun(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndSuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndTerminate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.EndUnsuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Run(System.Guid)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.RunAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.RunAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.RunCompleted">
      <topicdata group="api" />
      <apidata name="RunCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RunCompleted" />
      <remover name="remove_RunCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Suspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Suspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.SuspendCompleted">
      <topicdata group="api" />
      <apidata name="SuspendCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SuspendCompleted" />
      <remover name="remove_SuspendCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.TerminateCompleted">
      <topicdata group="api" />
      <apidata name="TerminateCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TerminateCompleted" />
      <remover name="remove_TerminateCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.Unsuspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="Unsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendCompleted">
      <topicdata group="api" />
      <apidata name="UnsuspendCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnsuspendCompleted" />
      <remover name="remove_UnsuspendCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlClient" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowControlEndpoint">
      <topicdata group="api" />
      <apidata name="WorkflowControlEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor">
          <element api="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
          <element api="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowControlEndpoint">
      <topicdata name="WorkflowControlEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />
      <apidata name="WorkflowControlEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowControlEndpoint">
      <topicdata name="WorkflowControlEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />
      <apidata name="WorkflowControlEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowCreationContext">
      <topicdata group="api" />
      <apidata name="WorkflowCreationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnAbort" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnBeginWorkflowCompleted(System.Activities.ActivityInstanceState,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnEndWorkflowCompleted(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.CreateOnly" />
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.IsCompletionTransactionRequired" />
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.WorkflowArguments" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowCreationContext">
      <topicdata name="WorkflowCreationContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowCreationContext" />
      <apidata name="WorkflowCreationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnAbort" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnBeginWorkflowCompleted(System.Activities.ActivityInstanceState,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowCreationContext.OnEndWorkflowCompleted(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowCreationContext">
      <topicdata name="WorkflowCreationContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowCreationContext" />
      <apidata name="WorkflowCreationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.CreateOnly" />
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.IsCompletionTransactionRequired" />
        <element api="P:System.ServiceModel.Activities.WorkflowCreationContext.WorkflowArguments" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowCreationContext.CreateOnly">
      <topicdata group="api" />
      <apidata name="CreateOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CreateOnly" />
      <setter name="set_CreateOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowCreationContext.IsCompletionTransactionRequired">
      <topicdata group="api" />
      <apidata name="IsCompletionTransactionRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsCompletionTransactionRequired" />
      <setter name="set_IsCompletionTransactionRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowCreationContext.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowCreationContext.OnBeginWorkflowCompleted(System.Activities.ActivityInstanceState,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginWorkflowCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="completionState">
          <type api="T:System.Activities.ActivityInstanceState" ref="false" />
        </parameter>
        <parameter name="workflowOutputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="terminationException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowCreationContext.OnEndWorkflowCompleted(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndWorkflowCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowCreationContext.WorkflowArguments">
      <topicdata group="api" />
      <apidata name="WorkflowArguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowArguments" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowHostingEndpoint">
      <topicdata group="api" />
      <apidata name="WorkflowHostingEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Activities.Description.WorkflowRuntimeEndpoint" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor">
          <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)" />
          <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)" />
        <element api="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowHostingEndpoint">
      <topicdata name="WorkflowHostingEndpoint" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
      <apidata name="WorkflowHostingEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowHostingEndpoint">
      <topicdata name="WorkflowHostingEndpoint" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
      <apidata name="WorkflowHostingEndpoint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Address" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Binding" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Contract" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.IsSystemEndpoint" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode" />
        <element api="P:System.ServiceModel.Description.ServiceEndpoint.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor" />
      <parameters>
        <parameter name="contractType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries">
      <topicdata group="api" />
      <apidata name="CorrelationQueries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationQueries" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.CorrelationQuery" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)">
      <topicdata group="api" />
      <apidata name="OnGetCreationContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="responseContext">
          <type api="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Activities.WorkflowCreationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name="OnGetInstanceId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)">
      <topicdata group="api" />
      <apidata name="OnResolveBookmark" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="operationContext">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
        <parameter name="responseContext">
          <type api="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowHostingResponseContext">
      <topicdata group="api" />
      <apidata name="WorkflowHostingResponseContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse(System.Object,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowHostingResponseContext">
      <topicdata name="WorkflowHostingResponseContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" />
      <apidata name="WorkflowHostingResponseContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse(System.Object,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse(System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="SendResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="outputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowService">
      <topicdata group="api" />
      <apidata name="WorkflowService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowService.#ctor" contentProperty="P:System.ServiceModel.Activities.WorkflowService.Body" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.GetContractDescriptions" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.GetWorkflowRoot" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.Validate(System.Activities.Validation.ValidationSettings)" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Body" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.ConfigurationName" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.DefinitionIdentity" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Endpoints" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.ImplementedContracts" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Name" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.UpdateMaps" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Body</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowService">
      <topicdata name="WorkflowService" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowService" />
      <apidata name="WorkflowService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowService.#ctor" contentProperty="P:System.ServiceModel.Activities.WorkflowService.Body" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.GetContractDescriptions" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.GetWorkflowRoot" />
        <element api="M:System.ServiceModel.Activities.WorkflowService.Validate(System.Activities.Validation.ValidationSettings)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowService">
      <topicdata name="WorkflowService" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowService" />
      <apidata name="WorkflowService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowService.#ctor" contentProperty="P:System.ServiceModel.Activities.WorkflowService.Body" />
      <elements>
        <element api="P:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Body" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.ConfigurationName" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.DefinitionIdentity" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Endpoints" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.ImplementedContracts" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.Name" />
        <element api="P:System.ServiceModel.Activities.WorkflowService.UpdateMaps" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive">
      <topicdata group="api" />
      <apidata name="AllowBufferedReceive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowBufferedReceive" />
      <setter name="set_AllowBufferedReceive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Body" />
      <setter name="set_Body" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.ConfigurationName">
      <topicdata group="api" />
      <apidata name="ConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigurationName" />
      <setter name="set_ConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.DefinitionIdentity">
      <topicdata group="api" />
      <apidata name="DefinitionIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefinitionIdentity" />
      <setter name="set_DefinitionIdentity" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Endpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowService.GetContractDescriptions">
      <topicdata group="api" />
      <apidata name="GetContractDescriptions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XName" ref="true" />
            <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowService.GetWorkflowRoot">
      <topicdata group="api" />
      <apidata name="GetWorkflowRoot" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot">
          <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.ImplementedContracts">
      <topicdata group="api" />
      <apidata name="ImplementedContracts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImplementedContracts" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowService.UpdateMaps">
      <topicdata group="api" />
      <apidata name="UpdateMaps" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UpdateMaps" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowIdentity" ref="true" />
            <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowService.Validate(System.Activities.Validation.ValidationSettings)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Activities.Validation.ValidationSettings" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Validation.ValidationResults" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowServiceHost">
      <topicdata group="api" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor">
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnAbort" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.Activity" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnAbort" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.Activity" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions" />
        <element api="P:System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Activities.WorkflowServiceHost">
      <topicdata name="WorkflowServiceHost" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      <apidata name="WorkflowServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint">
      <topicdata name="AddServiceEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="serviceImplementation">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.#ctor" />
      <parameters>
        <parameter name="serviceDefinition">
          <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowServiceHost.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activity" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementedContract">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceContractName">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listenUri" optional="true">
          <type api="T:System.Uri" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="behaviorConfigurationName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceContractName">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="listenUri" optional="true">
          <type api="T:System.Uri" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="behaviorConfigurationName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="implementedContracts" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions">
      <topicdata group="api" />
      <apidata name="DurableInstancingOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DurableInstancingOptions" />
      <returns>
        <type api="T:System.ServiceModel.Activities.DurableInstancingOptions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime">
      <topicdata group="api" />
      <apidata name="InitializeRuntime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.OnAbort">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions">
      <topicdata group="api" />
      <apidata name="SupportedVersions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportedVersions" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Activities.WorkflowService" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions">
      <topicdata group="api" />
      <apidata name="WorkflowExtensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowExtensions" />
      <returns>
        <type api="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowServiceHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient">
      <topicdata group="api" />
      <apidata name="WorkflowUpdateableControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateCompleted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Cancel(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Run(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Unsuspend(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Update(System.Guid,System.Activities.WorkflowIdentity)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Activities.WorkflowUpdateableControlClient">
      <topicdata name="WorkflowUpdateableControlClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      <apidata name="WorkflowUpdateableControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Cancel(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndCancel(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndRun(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndSuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUnsuspend(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUpdate(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Run(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.Object)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Unsuspend(System.Guid)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Update(System.Guid,System.Activities.WorkflowIdentity)" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync">
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity)" />
          <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.Close" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Activities.WorkflowUpdateableControlClient">
      <topicdata name="WorkflowUpdateableControlClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      <apidata name="WorkflowUpdateableControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      </containers>
    </api>
    <api id="Events.T:System.ServiceModel.Activities.WorkflowUpdateableControlClient">
      <topicdata name="WorkflowUpdateableControlClient" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      <apidata name="WorkflowUpdateableControlClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <elements>
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendCompleted" />
        <element api="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateCompleted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon">
      <topicdata name="Abandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync">
      <topicdata name="AbandonAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon">
      <topicdata name="BeginAbandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend">
      <topicdata name="BeginSuspend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate">
      <topicdata name="BeginTerminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync">
      <topicdata name="CancelAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync">
      <topicdata name="RunAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend">
      <topicdata name="Suspend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync">
      <topicdata name="SuspendAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate">
      <topicdata name="Terminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync">
      <topicdata name="TerminateAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.Object)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync">
      <topicdata name="UnsuspendAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync">
      <topicdata name="UpdateAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpdateAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity)" />
        <element api="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <parameters>
        <parameter name="workflowEndpoint">
          <type api="T:System.ServiceModel.Activities.WorkflowControlEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Abandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AbandonAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.AbandonCompleted">
      <topicdata group="api" />
      <apidata name="AbandonCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AbandonCompleted" />
      <remover name="remove_AbandonCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginSuspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.BeginUpdate(System.Guid,System.Activities.WorkflowIdentity,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Cancel(System.Guid)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.CancelCompleted">
      <topicdata group="api" />
      <apidata name="CancelCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CancelCompleted" />
      <remover name="remove_CancelCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndAbandon(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndRun(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndSuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndSuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndTerminate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUnsuspend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUnsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.EndUpdate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Run(System.Guid)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="RunAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.RunCompleted">
      <topicdata group="api" />
      <apidata name="RunCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RunCompleted" />
      <remover name="remove_RunCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Suspend" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.SuspendCompleted">
      <topicdata group="api" />
      <apidata name="SuspendCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SuspendCompleted" />
      <remover name="remove_SuspendCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync(System.Guid,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="TerminateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.TerminateCompleted">
      <topicdata group="api" />
      <apidata name="TerminateCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TerminateCompleted" />
      <remover name="remove_TerminateCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Unsuspend(System.Guid)">
      <topicdata group="api" />
      <apidata name="Unsuspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid)">
      <topicdata group="api" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync(System.Guid,System.Object)">
      <topicdata group="api" />
      <apidata name="UnsuspendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UnsuspendCompleted">
      <topicdata group="api" />
      <apidata name="UnsuspendCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnsuspendCompleted" />
      <remover name="remove_UnsuspendCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.Update(System.Guid,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name="UpdateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync(System.Guid,System.Activities.WorkflowIdentity,System.Object)">
      <topicdata group="api" />
      <apidata name="UpdateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="updatedDefinitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
    <api id="E:System.ServiceModel.Activities.WorkflowUpdateableControlClient.UpdateCompleted">
      <topicdata group="api" />
      <apidata name="UpdateCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UpdateCompleted" />
      <remover name="remove_UpdateCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.Activities" module="System.ServiceModel.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Activities" />
        <type api="T:System.ServiceModel.Activities.WorkflowUpdateableControlClient" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>